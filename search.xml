<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HumanSystemOptimization-main</title>
    <url>/posts/72977dc0.html</url>
    <content><![CDATA[UPDATES: 
补充一篇 24 年初的文章，分享最近一年的一些个人实践：养生博主的 23 年总结。鉴于文章比较长，很多同学没有耐心读完，后续也分享录制了一个 视频版，基本涵盖了文章里的大部分内容。另外在健康生活实践方面，也提供一个极简版的基础列表，供大家参考：

保持睡眠时长与质量。
不要吸烟。
尽可能每天做点运动。
减少糖分的摄入。

能做到这四点，就已经可以达到一个还不错的健康状态了。剩下的可以根据各自的身体状况再来做补充调整。
背景去年 5 月曾经写了一篇文章介绍了下 Lex Fridman 大佬的日常生活安排，后续我也根据他的方法对自己的日常生活做了一系列规范和改进。这一年整体实行下来，效果还是非常显著的，本文的最后会对我的一些实践以及借助的工具做一些分享。最近几个月，偶然在油管上看到了个 Rich Roll 采访 Andrew Huberman 的 podcast，介绍了如何提升我们日常工作，学习表现的相关神经科学原理与可以利用的“工具”，瞬间打开了一扇新世界的大门。后续又一连追了好几集 Huberman 自己的 podcast，从各个方面了解了一下跟我们日常生活，健康，学习，工作，锻炼等方面相关的知识。与其它很多讲“养生”的文章和视频最大的区别在于，Huberman 本身是斯坦福的神经科学教授，其中讲述的内容都是来自于高质量，peer reviewed 的科学研究成果，从机体工作原理出发，非常细致地介绍了相关的实验和结论，并给出了很多实操建议（很多都是零成本，不是搞推销的……）。通过一系列的学习，逐渐有种学习了各种人类的“组成和操作原理”的感觉。通过一系列的工具和实践，我们也可以像调优软件程序那样来“调优”我们自身的人体系统。这篇文章就来介绍一些相关的知识内容。注意，原版的 podcast 中有非常多专业性的阐述，在这篇文章中基本都去掉了，尽量以故事性的描述来讲解，相对会比较好理解。当然准确性也会因此有所下降，如果希望获取更专业的内容，强烈建议观看 原版的 podcast 内容。
睡眠如果你想要获得健康，更好的工作学习状态，提升生理健康如免疫，新陈代谢，以及心理健康如更好的心情，专注能力等，最最重要的前提是拥有一个良好的睡眠。
原理睡眠最重要的控制机理是我们内在的生物钟。随着生物钟的影响，我们体内的各类化学物质会发生变化，体温也随之改变，会影响我们的各种内在状态和外在行为。Huberman 教授很形象地描述了这个“生物钟”的具体作用方式：在早上，身体释放的皮质醇（cortisol）和肾上腺素（adrenaline）会让我们醒来，同时还会设定松果体释放褪黑素的倒计时钟，会在十多个小时之后让我们感到困意再次入睡。
影响这个生物钟的最大因素是光照。我们的眼睛除了能够看到东西，另外一个重大的作用就是通过黑视素神经节细胞来接收光照信息，用以设定我们的内在生物钟。这也是为什么有时候我们通宵工作之后，虽然已经持续很久时间没有睡眠了，但随着太阳升起，整体的生物钟被设定到了类似起床时的状态，各类化学物质的释放会让我们突然感觉又有精神了。后续很多最佳实践里也都跟这个原理相关，我们需要控制自己接收光照的时间点，类型和时长。
此外，体温也是一个用于控制我们生物钟的手段。一般来说我们的体温会从深睡眠中比较低的状态逐渐升高，到醒来后持续上升。到了一天的后半段会开始逐渐下降，直到再次进入睡眠。
实践基于上面的原理，Huberman 教授提供了一系列提升睡眠的最佳实践：

皮质醇的释放与接触阳光有关，因此如果想尽快醒来且保持日间良好的精神状态，起床后应该到外面去接触阳光，持续 2-10 分钟。这对于血压控制，心理状态，设定睡眠的“倒计时钟”等都有很大好处。户外日光的效果最好，如果是人造光源，蓝光的效果会比较好，且最好是上部（天空的位置）的光源。根据光照强度推算，隔着窗户接收日光的强度会降低 50%以上，而达到同样效果所需要的光照时间则需要 50 到 100 倍。有意思的是，这一点对于视障人士也有效，因为前面提到的黑视素神经节细胞并不是用于视觉成像的细胞。
对应的，在晚上要尽量减少光源的接触，因为这会扰乱我们的生物钟，让身体系统误以为是在白天。尤其是晚上 11 点到次日凌晨 4 点之间接收光源，会抑制后续几天的多巴胺的释放，影响心情，心理健康，专注度，学习能力，新陈代谢等等。关于多巴胺的作用和机理，后面会再单独介绍。
如果不可避免需要在晚上接触光源，处于较低位置，暗淡的红光，蜡烛之类的会相对好一些。如果要看电脑，建议使用 blue blockers 眼镜，这跟一些电脑软件会自动调节屏幕色温的效果可能类似。
傍晚观察落日，对于后续入睡也有帮助，甚至能减轻晚上摄入光照的负面影响，有点神奇。
人一天中的精神状态一般会在中间有个短暂的低谷，所以午睡对于有些人可能是有帮助的。也可以用一些其它的非睡眠深度休息的方式来替代，如 Yoga Nidra，冥想，自我催眠（可以利用一些 App，如 Reveri）等。
体温对生物钟周期的影响：
早上洗冷水澡，会让人快速升温，从而把睡眠周期往前移（早起）。
晚上锻炼身体，会让人保持高体温，从而延后周期（晚睡）。
可以选购一些自动控制体温的智能床垫来提升睡眠质量。


一般建议的锻炼时间：醒来后 30 分钟，3 小时和 11 小时这三个时间点。不过总体来看好像影响度比较小。
饮食和药物因素：
咖啡因会占据腺苷（adenosine）的受体，阻断入睡的信号。有不少文章都提到中午之后尽量不要喝咖啡，但 Huberman 表示没有科学实验表明咖啡因对所有人的效果是一样的，得根据自己的测试情况来。比如他自己在下午 5 点喝咖啡也能正常入睡。
镁，对入睡有帮助。
芹黄素也能帮助入睡，但要注意对雌性激素的影响。
建议不要摄入太多牛磺酸。
不建议通过摄入褪黑素来帮助入睡，褪黑素药物本身的规格把控不严格，且褪黑素容易引起抑郁情绪。
中午可以吃低卡路里以及含酪氨酸的食物，如坚果，大豆，部分蔬菜等，提升多巴胺，肾上腺素，保持清醒。
晚上则可以吃点淀粉，白肉等富含色氨酸的食物，进而转化为血清素，会让人更加平静，容易入睡。


对于绝大多数人，6-8 小时的睡眠时长是比较健康的。
对于各类药物的检索可以参考：examine.com。

饮食在前面 Lex 的分享中，提到了他采取了生酮饮食以及 fasting（禁食）的习惯，这引起了我对于饮食习惯的注意。Huberman 教授正好也有几个 podcast 介绍了 fasting，肠道健康等话题，很有意思。
Fasting 的背景我们可以把身体跟进食相关的化学状态分成 2 类：

吃饱了的状态，也就是血糖含量较高的状态。此时我们身体会更活跃地进行体内细胞的复制与成长。
禁食的状态，也就是血糖含量较低的状态。此时我们的身体会更活跃地进行体内细胞的修复与清理（autophagic）。

由于睡眠时我们天然是不吃东西的，所以一般来说睡眠中的一部分时间会使我们处于禁食状态，饮食时间的选择实际上就是在控制上述两个状态的持续时间和平衡关系。比较有意思的是世界上很多民族文化和宗教中，都有一些跟禁食相关的习俗，甚至会持续很多天。
在 2012 年，科学家开始对小白鼠做实验，把他们分成两大组，一组可以在一天中的任何时间吃东西，而另一组只能在固定的 8 小时里吃东西。在大组里再区分小组，给小白鼠吃健康的和不健康的食物。结果发现，只能在 8 小时里吃东西的小白鼠们，即使吃的是不健康的高脂肪食物，他们的健康水平仍然得到了保持甚至提高，相比所有不做限制的组都有明显的提升。
这个研究震动了学术界，后续又有非常多的针对人类，不同性别，不同年龄，不同职业（包括运动员）的各种实验与论文发表，科学家们发现这种间歇性禁食状态对于身体有非常多的好处，包括：促进肝脏健康，胆汁酸代谢，炎症自愈，保持体重，提升 brown fat 储备（对健康有益），防止非酒精性脂肪肝，血糖控制，肠道健康等等。如果养成间歇性禁食的习惯 60 天以上，还会让我们的身体倾向于代谢脂肪来供能，控制体重。
因此，Huberman 教授指出，何时进食，与吃什么东西，其实是同等重要的。这个研究也让很多学术界的研究人员自己也都养成了 fasting 的习惯，包括 Huberman 自己。
Fasting 的实践由于长时间的禁食难度较大，所以绝大多数的研究都专注于间歇性禁食，也就是 intermittent fasting。简单来说就是跟前面的小白鼠实验一样，在一天的固定时间段来吃东西（跟睡眠周期对齐），而其它时间段都不摄入任何食物的做法。这里简单整理为基础和高阶两个版本：

基础：如果想享受 fasting 的基础收益，最简单的执行原则是起床后至少 1 小时内不要吃东西，同时睡前的 2-3 小时不要吃任何东西。
高阶：目前研究结果中最理想的进食窗口是 8 小时，结合社会习俗等，一般比较合理的时间在 10-18 点或 12-20 点的范围。看起来不吃早饭并不是什么坏事 :)
作者特地温馨提醒，如果想通过健身来增肌，建议可以把这个时间窗口往前移，因为早上摄入蛋白质会对肌肉增长有益。而健身的时间可以自由选择。
尽量保证这个窗口时间的稳定性，也非常重要。否则就跟频繁倒时差产生的效果差不多，会打不少收益折扣。
如果想尝试高阶 fasting，建议逐渐切换进食习惯，例如每两天缩短 1 小时的进食窗口，逐渐达到理想的 8 小时。

值得注意的是，这里说的不吃任何东西，并不是说连水也不能喝。从前面的背景可以看到，是否处于禁食状态，主要依据是血糖水平，因此：

喝水，茶，咖啡（不加牛奶）等，并不会中断禁食。但一勺糖的摄入就会中断。
晚饭后想尽快进入禁食状态，可以做一些轻量运动，比如散步等，加快血糖清理。
二甲双胍，黄连素（berberine）等可以直接促进血糖清理。肉桂皮，柠檬汁，也能轻微降低血糖。

最后，如果禁食期间觉得有些头晕，颤抖，并不需要立刻进食或摄入糖分。可以喝一点盐水（可以加柠檬汁），一般就能很好的缓解症状。这让我想起 Lex 会提到了会服用药片来补充各种电解质元素，比如钠，镁，钾等。
饮食与消化道健康由于我个人的肠胃功能比较差，所以也特别关注了一下消化道健康的话题。Huberman 邀请了一位非常知名的微生物学家 Sonnenburg 来介绍肠胃微生物群落与我们的健康之间的关系，也是学到了很多新的知识：

肠道的微生物群不仅影响消化系统的健康运作，对人体的免疫系统也起到了非常关键的因素。
婴儿出生，成长的方式会形成非常不同的肠道菌群生态。暴露在微生物环境中（但要注意会引起疾病的情况），对于维持菌群环境是有益的，比如家里养宠物，让孩子自由玩耍等，不需要过度清洁与消毒。
什么是健康的肠道菌群生态，目前没有一个标准的结论。不过总体来看，菌群的多样性程度高，一般就表示更加健康。
抗生素会严重破坏肠道菌群生态，需要谨慎使用。

在访谈中，两位重点讨论了一个实验，就是什么样的饮食方式会让我们更好的维持肠道菌群的多样性和健康。实验主要对比了两种附加饮食：

高纤维食物：全谷类，豆类，蔬菜，坚果。这也是传统上被认为非常健康的食物，其中很多纤维的分解都需要肠道菌群的帮助，换句话说，纤维就是它们的“食物”。
发酵类食物：酸奶，牛奶酒（kefir），康普茶，酸菜，泡菜，纳豆等。注意需要是自然发酵，一般是冷藏且非罐装的食品。而且像酸奶这类要格外注意不要加糖等添加剂。

实验的结果也颇令人意外：

摄入发酵类食品的组，显著提升了肠道菌群的多样性。被试者几十个免疫标志物的显著降低，对各类炎症都有更好的抑制作用。没想到吧，肠道菌群还能调节炎症。
肠道菌群本来的多样化程度比较高的人，摄入高纤维食物是有帮助的。如果不是，则摄入高纤维食物的帮助不大。在工业化进程中，人类的进食习惯已经有很多代都转变为了摄入大量肉类，加工食品等，肠道菌群的生态无法仅通过提高纤维食物的量来改变其族群结构。

此外在访谈中，两位还讨论了具体食谱推荐的问题，引用了 Christopher Gardner 关于生酮饮食与地中海饮食比较的研究。这里总结一下实践建议：

如果要改善肠道菌群生态，最好的方式是一天两次摄入天然发酵类食品。
高纤维食物对于肠道菌群生态的维护是有益的，建议日常饮食以植物类食物为主，尽量避免深度加工食品的摄入，控制糖的摄入。Sonnenburg 教授还讲了个故事，说微生物学家参加的会议，一般餐厅的沙拉吧总是会供不应求 :) 前面提到的 Rich Roll 大佬也是个素食者。
益生菌的效果没有广泛研究支持，且这类产品的监管很有限。益生元的效果也是好坏参半，缺乏多样性，溶解速度太快等问题都使总体效果存疑。
地中海饮食相比生酮饮食来说对健康的影响效果接近，但更容易坚持遵循。另外生酮饮食如果长期实践可能有一定的风险。所以总体更推荐地中海饮食结构。

另外值得参考的是我们也有官方的 中国居民膳食指南，或许更适合东方人的饮食习惯。
心态与动力这一部分主要介绍的是人体的多巴胺系统原理，以及如何利用它来形成健康，自律的生活方式。这一集是 Huberman 开播以来播放量最高的一集，对于强健我们的心智有着非常好的指导作用。
原理多巴胺是一种非常重要的化学物质，主要作用于两个神经回路：一个影响身体的运动，例如帕金森病与多巴胺的分泌不足有关；另一个则影响我们的动机，欲望与快乐，这几乎与我们从事的各种活动有关，无论是工作，学习还是社交，休闲娱乐。这里我们会主要讨论多巴胺的后者影响能力。我们为什么会“放弃”，实际上是由于在不安，压力，沮丧等情绪作用下，身体内的去甲肾上腺素水平不断提升，当超过一定阈值时，神经系统中的认知控制就会关闭，我们就放弃了。多巴胺能够抑制去甲肾上腺素作用，从而持续“激励”我们前行。
神经系统中多巴胺含量水平的高低会影响我们的情绪，当多巴胺水平低时，我们会感到情绪低落，没有动力，而多巴胺水平高时，我们会感到兴奋和快乐。在通常情况下，我们的身体处于多巴胺 baseline 的状态，当我们达成一些令人兴奋的目标（比如玩游戏胜利，考试拿高分）后，多巴胺的水平会达到一个高峰，此时我们就会获得巨大的愉悦感。在高峰之后，多巴胺水平会回落到比 baseline 更低的一个水平，且这个状态会持续一段时间。
这里有两个非常重要的原理：

多巴胺绝对值含量的高低只是一方面，更重要的是其“相对变化量”的多少。比如在刷抖音时看到了一个很有趣的视频，多巴胺水平升高，你会感到快乐，刷到下一个视频时，你感到的快乐程度好像不会那么强烈了，因为多巴胺已经在一个比较高的水平，难以形成更大的变化量。而同样的视频，如果你是几天之后看到，或许你会觉得有意思的多。所以当你持续做一件喜欢的事情时，你感受到快乐的阈值也会不断提高。
多巴胺的总体“储备”是有限的！也就是说无论你是通过学习，工作，娱乐，社交，运动等不同方式来获得快乐，所消耗的“快乐货币”都是同一种：多巴胺。举几个例子来看下这个原理带来的影响：
很多自律的人都会说自己是 work hard，play hard 的生活方式，比如工作日通过高强度的工作来获得成就和满足感，休息日进行各种休闲娱乐，运动，社交等方式来获得快乐，其实背后都是在释放多巴胺来获取快乐。长期持续，我们身体的多巴胺 baseline 会逐渐下降，出现一种耗尽（burn out）的心理感觉，对很多事物无法保持之前的兴趣与精力。
很多人会对玩电子游戏着迷，因为它们能带来巨大的多巴胺释放刺激让人感到快乐。但要意识到，多巴胺的储备是有限的，如果对此上瘾，你的多巴胺耗尽问题就会变得非常严重：一方面能够引起你兴趣的事物会变少，可能只有玩游戏才能带来快乐；另一方面，后续甚至会导致玩游戏本身也无法触发多巴胺释放，引起严重的抑郁问题。



另外，多巴胺也具有叠加效应。比如你喜欢健身，那么运动就会刺激多巴胺的释放。而我们实际去健身时，可能会不自觉地安排了很多其它的“快乐因素”，比如选一个精神状态比较好的日子，运动前喝一些能量饮料，跟认识的朋友一起去，边健身边 social，听一些自己喜欢的音乐或 podcast，等等。这些因素也都会促进多巴胺的释放，让你感到“前所未有的快乐”。但要注意前面的原理，多巴胺的高峰越高，后面随之而来持续的低谷也会越长，而且长此以往，可能会降低你单纯从运动中获取快乐的能力。这样的例子还有很多，比如边跟朋友吃饭，边玩手机，拍照发朋友圈，可以计算一下叠加了几种快乐因素 :)
影响多巴胺的外界因素我们来看下具体影响多巴胺释放的各类因素有哪些，首先是促进多巴胺分泌的：

巧克力，提升到 1.5 倍的多巴胺 baseline
性行为，提升到 2 倍
尼古丁，提升到 2.5 倍
可卡因，提升到 2.5 倍
安非他命，提升到 10 倍
咖啡因本身只会少量提升多巴胺，但它会抑制一些多巴胺受体，提升同等多巴胺造成感受的效果
马黛茶，包含咖啡因，能控制血糖，还能保护多巴胺神经元
刺蒺藜豆也能提升多巴胺（基本等同于 L-DOPA），还能提升男性精子数量和质量
运动，带有主观成分，喜欢跑步的人，可以提升到 2 倍 baseline
健康的社交关系也会促进多巴胺释放

食物方面感觉 Huberman 教授非常推荐马黛茶。
也有很多提升多巴胺释放或影响其效果的药物：

L-Tyrosine（酪氨酸），提升多巴胺
Phenethylamine（PEA），巧克力中也包含，能够提升多巴胺
Huperzine A，提升多巴胺
各种“聪明药”，如 Adderall, Modafinil, Alpha-GPC, Ginkgo 等，留学党应该很多都有耳闻

通常来说，不推荐持续使用这些药物，因为多巴胺释放之后的高峰会带来 baseline 水平的降低，导致无法享受活动的快乐，无法专注，限制学习能力和神经元可塑性等。Huberman 表示一周使用一次的频率应该是安全的。
最后还有一个比较特别的研究，就是冷水浴能够提升多巴胺释放到 baseline 的 2.5 倍左右，且持续时间更长，能达到 3 小时左右。建议使用 10-14 摄氏度的水温，注意安全。此外冷水浴也不需要太频繁，每周 11 分钟左右足够。如果已经习惯了冷水浴，那么也就没有释放多巴胺的效果了。
还有一些因素会降低多巴胺，如：

褪黑素，会引起多巴胺的减少。前面也提到过并不建议使用褪黑素来帮助入睡，或者适应时差等。
睡眠时段接触光源，也会引起接下来几天的多巴胺水平下降。半夜睡不着刷手机是很有害的哦。

维持健康的多巴胺水平了解了原理和各种影响因素后，我们来看下如何有效设计我们的生活工作方式来维持健康，可持续的多巴胺水平。
简单回顾一下，前面我们已经知道了多巴胺储备有限，且对一件事物上瘾会不断提高感受快乐的阈值，那么如何让我们能对一件事情保持长时间的兴趣和投入度，又不至于耗尽多巴胺呢？一个经典的例子是赌场的运作方式，我们并不是每一次下注都能赢，偶尔赢一次会释放多巴胺，而且根据赢得钱的多少有所上下浮动，这会吸引玩家持续参与。这就是一种非常有效的间歇性且随机的奖励机制。感觉很多游戏，社交网络产品也借鉴了这个思路来进行设计。
对于我们经常需要从事的活动，我们也可以模拟这个机制。还记得前面提到的多巴胺叠加效应吗？我们可以通过随机化叠加因素的多少，来实现多巴胺释放的差异性。还是以健身为例，我们可以随机决定今天是否要听音乐，是否去健身时带手机，是否要在健身前喝能量饮料等因素。如果其它什么都不做，只是单纯健身，那么多巴胺的释放量就会相对较低。如此就能模拟多巴胺释放有高有低的随机奖励机制。
成长型思维最后来看下如何构建良好的思维方式来利用多巴胺系统提升自我。
有一个非常知名的实验，挑选了一群天生喜爱画画的小朋友，在他们完成画作后给与一些奖励。后面在移除这些奖励后，小朋友们对于画画的兴趣和动力大大降低了。这个实验说明，当我们因为一个活动收到奖励（比如金钱，美食等）时，我们反而会降低活动本身的愉悦程度。而且多巴胺本身影响我们对时间的认知，同时也影响我们的情绪状态，如果我们始终以完成活动后的奖励为目标，则整个过程中就很少释放多巴胺，让原本困难的过程变得更加难以坚持。
仔细想一下，这是一个非常有意思的观察。多巴胺有点像我们的“本能系统”，决定了我们是否有动力做一件事。但反过来我们的主观思想却可以影响这个系统起作用的方式，这也是人类为何能摆脱动物本能，达成很多需要“反人性”的投入才能取得的成就的原因吧。上述的实验是我们的主观思想造成的一个反面作用的例子，我们自然也可以实现正面作用，那就是成长型思维。
具体来说，就是通过自我暗示，把努力过程本身当作一种“奖励”。我在努力学习，这个过程本身就是有趣的，会让我不断变得更强，这样的想法会在过程中激发身体系统释放多巴胺，而多巴胺提升了我们的情绪和动力水平，也会让努力的过程中碰到的困难变得相对容易克服。专注于这个过程的本身，而不是在过程前进行各种外界刺激（如前面提到的药物），或者在过程后给自己巨大的奖励。
这种思维方式看起来很主观，但这就是我们的神经系统工作的方式，虽然人类的“硬件系统”都差不多，但知识，思维这些运行之上的“软件”却可以千差万别。我们可以通过自律，自我暗示来改变自身对各类活动的喜好。例如通过暗示 fasting 对我们健康的益处，来获取满足感，而不是借助于 fasting 结束后的大快朵颐。通过自律抵御高油盐食物的吸引力，并且自我暗示植物类食物对身体的好处，坚持一段时间，会觉得花椰菜也挺美味的。这也是为什么我们在这篇文章中介绍了很多原理性的内容，而不仅仅是行为建议。因为这些原理知识能够让我们做更好的自我暗示 :)
多巴胺系统中也有对我们认知成长造成“障碍”的运作机理。例如当我们接受到的信息支撑我们之前的信念时，也能够激发多巴胺的释放让我们感到快乐，这从本质上会改变我们对世界的认知。由此可见，“空杯心态”是多么难得的品质，网上如此多的争论无法达成共识也有很大一部分“归功”于此。如何克服神经系统中的这类缺陷呢？一种可能的方法是尽可能调节情绪，使自己处于镇静的状态（提升血清素水平），这样才能让自己更好的去倾听和吸收跟自己认知不一致的信息，更好地协同合作。
这一节的 podcast 对我本人的冲击非常大，强烈建议大家观看这期 Mindset &amp; Drive，相信也会有不同的收获。
学习与专注在了解了多巴胺的运作机制基础上，我们可以继续探究一些跟大脑健康，专注度，如何进行高效学习相关的话题。
学习的原理从脑神经科学来看，学习的本质是神经元的重新连接（rewire），进一步来看，需要大脑处在一种学习的化学状态下，也就是 Huberman 经常提到的神经可塑性（neuroplasticity）状态。要达到这个神经可塑性状态，有两个重要条件，一个是足够的专注度，另外一个是“犯错”的信号（后面会展开）。另外大脑一个比较有意思的机制是，在学习时的神经可塑状态下，乙酰胆碱会标记需要改变的神经元，而具体的神经元重连接则主要是在休息和睡眠时发生，是不是有点像 JVM 虚拟机的垃圾回收机制 :)
什么是犯错信号呢？当我们尝试做一些事情，但没有达到预期目标时，身体会给大脑发信号，“我犯错了”。处在这种犯错，沮丧的认知状态下，神经系统会释放肾上腺素（提升 alertness），乙酰胆碱（提升 focus），多巴胺（促进神经元的 change，rewire）等化学物质，激活神经元的可塑性。也就是说，犯错是我们进入学习状态的重要前提。搞机器学习的同学应该很熟悉了吧，这跟我们训练模型不是一模一样么 :) 另外很多人可能觉得心流（flow）状态是学习的最佳状态，而 Huberman 则不这么认为。心流是一种精神高度集中且接近于自动化的状态，是在做我们已经知道怎么做的事情，而不是在学习新的知识技能。
对于这个学习状态，经典的实验是给人们戴上一些能转变角度的眼镜，然后执行一些类似物体抓取的任务。由于看到的东西通过眼镜改变了其本来的位置，一开始在尝试时总会出现抓取动作的偏离。但后续在进入神经可塑性状态后，我们能逐渐适应相关的视觉偏移，协调自己的听觉，动作等都与之协同，顺利完成任务。更有意思的是，这个“神经可塑性”的化学状态是可以持续的，我们甚至可以先通过一些其它操作触发大脑的这个机制，再去进行真正的学习，以加快学习的速度。这里还有一个隐藏逻辑，当你在遇到挫折困难时，大脑进入了可塑性状态，而此时你却放弃了，那么神经元也会重新连接到这种容易放弃的行为模式，形成恶性循环。
人在年幼时期大脑天然的神经可塑性会比较好，而在 25 岁以后则会大大下降。我们后面会提到如何来进行克服。
另外，休息和睡眠时也会发生大量的神经元重连接的活动，这也是之前我们就提到过的，高质量的睡眠是实现很多生理，心理健康强壮的先决条件。
利用神经可塑性如果正在阅读文章的你还未满 25 岁，那么恭喜你，你的神经可塑性仍然非常的好，可以尽可能广泛的学习各种知识和技能。比如你可以很快学会各种乐器，新的语言，新的运动，新的专业技能等等。通过更广阔领域的体验接触，尽量找到你最有兴趣的方向，可以后续再不断深入经营。
如果已经像我一样超过了 25 岁，那么还有很多办法来提升神经可塑性：

通过实验发现，成年人对于小幅度的增量学习是完全可以适应与掌握的。例如每次视觉上的偏差只有 7 度，而不是一下子就来个 180 的大颠倒，那么成年人也能很快从错误中学习纠正。应用到实际学习中，我们每次学习的内容可以控制一下不要太多（本文有点违反了，建议收藏慢慢学习），多次积累来完成神经系统的调整学习。
对于达成目标的渴求度越高，重要性越大，奖励的刺激越大（比如为了生存），则神经可塑性就会越容易出现。这个比较符合直觉，但是现实中可操作性可能不高。
第三点最有意思，通过扰乱前庭神经系统（vestibular system），能够达到神经元可塑性的状态。简单来说，就是让你的身体有一些“新颖的重力体验”，如倒立，瑜伽，体操，滑板，任何让身体会失去平衡的一些状态等，会快速激发“我犯错了”的信号，进入学习状态，甚至可以在之后去做别的任务的学习。这一下子就让我想到了淘宝成立初期的“倒立文化”，没想到还真的有科学依据。需要注意的是，这个体验必须要新颖，也就是说如果你已经倒立很熟练了，那么去做倒立就是个日常行为，并不会给身体一种在犯错边缘，需要纠正的刺激。

Huberman 认为，大脑的主要功能链路是感知，认知，情感，思想，行动。在尝试控制我们的神经系统来进行各种任务时（例如学习，解决困难问题，挑战运动极限），我们是很难用精神思想来控制其本身的（比如不断跟自己说我不能分心），更可行的办法是“逆向链路”，从我们的行动出发，利用神经系统的运作原理，逐渐影响思想，情感，认知甚至感知部分。这也是 Huberman 非常推崇各种“行动工具”的原因。Mood follows action。
学习的理想状态除了神经可塑性的化学状态外，我们也需要注意其它的因素。例如我们不能太放松以至于有些昏昏欲睡，也不能太紧张激动，无法控制自己拥有清晰的思考等。这些也都跟我们体内的多巴胺，肾上腺素，乙酰胆碱，血清素，褪黑素等化学物质的水平有关，需要做好调节。在之前 Rich Roll 的访谈节目中，Huberman 提了一个非常有效的“呼吸工具”，叫生理叹息（Physiological Sigh）。操作方法上简单来说就是吸两口气，然后出一口长气。通常情况下，只要一两次生理叹息就足以使我们的压力和警觉水平迅速下降，让人感到更加平静，提升学习表现。
前面提到的成长型思维也很重要，在遇到错误导致的沮丧感觉时，可以不断增强自我暗示，失败是帮助我们学习成长的唯一路径，对我们是有益的，以此增加多巴胺的释放，提升学习动力和过程中的愉悦感。
联系到睡眠对学习的促进作用，也有一些研究提供了一些相关的 tips：

在学习时听一些有规律的节拍，在入睡时也播放同样的微弱节拍，能够提升学习和记忆的效果。
一般在 90 分钟的学习后（人体生物钟的周期），可以选择进行 20 分钟的休息（non sleep deep rest），也会加强学习的效果。
Gap effect，在学习中随机停止 10 秒钟，这些停止会在睡眠中加速“播放”，提升学习效果。

提升专注“专注”背后的机理是大脑中两种“网络模式”的协调，一种叫 Default network，在我们不做任何事情时被激活，另一种叫 Task networks，在我们专注于做某些事情时被激活。普通人的大脑能够很好地协调这两个模式，两者像跷跷板一样，当一种模式被激活时另一种模式会被抑制。而具有专注障碍（比如多动症）的人来说，这两者无法很好地进行协调，因此会出现无法专注的现象。
通过提升多巴胺水平，可以有效促进这两种网络模式的协调，因此有非常多的多动症治疗药物都跟提升多巴胺有关，例如 Adderall，Modafinil 等。一些调查表明，这些药物（经常被称为聪明药，nootropics）在美国被滥用的程度甚至超过了大麻，不少“学霸”都以此来提升注意力，减少对睡眠的需求。但 Huberman 教授表示，一方面多巴胺的刺激提升后都会带来多巴胺水平的低谷，另一方面这些药物也可能导致上瘾，对新陈代谢作用造成扰动，有很多负面影响，对长期的学习与记忆效果可能并没有提升作用。在之前介绍多巴胺的章节也有提到，应该谨慎使用这类药物，并严格控制使用频率不能过高。
最好的提升专注的方法当然是前面聊过的更好的控制我们的多巴胺系统，例如把行动跟背后的意义相连接，给自己正面的心理暗示；将任务拆成多个小的里程碑，通过过程自身的激励来促进多巴胺的释放提升我们的专注度。此外一些安全有效的提升专注力的方法包括：

适量补充 Omega-3 EPA 鱼油，这是神经细胞的组成原料之一，能够有效减轻抑郁，对治疗多动症（ADHD）也有帮助。
通过身体其它部分释放运动，可以帮助提升注意力。教授举的例子是作为神经科医生在开刀时，如果采用半蹲半站的姿态（运动释放），拿手术刀的手更稳定不容易颤抖。这让我想起以前读书时很多同学习惯转笔，现在工作了也有不少人喜欢玩指尖陀螺，或者站立办公，可能都是类似效果。
限制视野范围，能够提升专注度。比如我们经常因为眼睛瞟到了任务栏上的消息提示闪动而分心，可以通过一些设置来进入“专注模式”。
视线的高低也会影响神经状态，视线往下看会让神经系统偏向镇静，放松，甚至困倦，而视线向上则会让系统提升警惕。工作时一般至少把显示器放置在鼻子位置之上。
大脑不擅长处理大量频繁的 context switch，典型的比如刷抖音，不同的信息以非常快的速度频繁切换，这对我们的注意力是有伤害作用的。2014 年的一项研究表示，我们每天在手机上花费的时间应该少于 60 分钟（青少年）/120 分钟（成年），以免引起注意力障碍问题。
还有研究表明，17 分钟的冥想，能够对大脑中的神经元做重新连接，永久地改善注意力。只要做一次就可以，完全可以尝试一下。

大脑健康最后来看下提升大脑健康和效能的一些方法。
首先是前面提到过的，保证高质量的睡眠。
运动方面，对大脑直接帮助最大的是有氧运动，提升心肺功能，支持大脑供能。建议每周 150-180 分钟的有氧训练。
对于大脑健康有帮助的食物，其中前三点是比较重要的，后面的部分涉及的研究没有那么多：

Omega3, 尤其是 EPA 等脂肪酸，是大脑组成的重要部分，且一般人都容易摄入不足。多吃鱼，牡蛎，鱼子酱，奇亚籽，核桃，大豆。一天至少摄入 1.5 克，理想情况需要 3 克以上。不喜欢吃鱼的话可以辅助摄入鱼油。
磷脂酰丝氨酸，也对认知能力有帮助。通过鱼，肉类，卷心菜来摄入。
乙酰胆碱，重要的神经调质，提升注意力。摄入胆碱的重要来源是鸡蛋，尤其是蛋黄。土豆，坚果，水果中也含有，虽然没有蛋黄中的含量那么丰富。可以通过 Alpha-GPC 等补充剂来获取。
肌酸，尤其对于不吃肉的人，一天需要摄入 5 克左右。
花青素，在蓝莓，黑莓，葡萄等食物中有提供。可以降低 DNA 损伤，缓解认知下降等问题。大约每天需要 60-120 克蓝莓的补充。
谷氨酰胺，可以通过牛肉，鸡肉，鱼肉，鸡蛋，大豆，卷心菜，菠菜，芹菜等食物来摄取。提升大脑在缺氧（高海拔地区）下的表现，还能够抑制对糖的需求。
水，钠，钾，镁等电解质是神经元信号传递所需的基础元素，需要保证。

这一节中还讨论了我们身体对各种食物喜好进行判断的三个渠道，前两个分别是味觉判断和营养成分的下意识判断。第三个比较有意思，也跟多巴胺有关，即我们可以通过提升大脑代谢的活跃度来增加对某种食物的喜好。比如你如果不喜欢吃鱼，一种方法是你可以把鱼跟你平时爱吃的食物一起吃，另一种是给自己足够的心理暗示，说服自己吃鱼是有益身体健康的。通过这两种办法，你都可以让大脑释放多巴胺，从而逐渐提升对鱼类食物的喜好程度。
最后，如果你对膳食补充剂感兴趣，还可以看看 Huberman 教授平时会吃的补充剂有哪些。
长寿最后我们来看下如何延年益寿，这是 Huberman 跟这个领域的专家，来自哈佛的 David Sinclair 的一集访谈节目。
⚠️ 更新：2025-06-17 目前关于 David Sinclair 教授及其倡导的白藜芦醇、NMN 等抗衰老产品的科学证据仍存在较大争议，相关内容请谨慎参考和采纳。
衰老的本质Sinclair 认为，衰老是一种疾病，它本身导致了非常多通常意义上的疾病的出现，比如阿尔兹海默症，癌症等。我们可以通过科学的手段来“治疗”衰老，甚至逆转它。
从本质上来说，衰老是基因信息的损失，这分为两部分：

DNA 本身的信息，比如细胞中的 DNA 结构会在辐射等情况下受到破坏。
控制哪些基因进行表达的信息受到了破坏，也就是所谓的表观基因组（epigenome）。这部分在衰老的因素中占了 80%。

人体内有一个天然的“衰老时钟”，而且并不是以匀速走的。在年轻时我们的生长发育过程中，这个时钟走得更快。所以如果青春期发育比较迅速的人，一般来说整体的时钟走的比较快，寿命也会相对短，是不是有点吓人……而且，一般比较矮小的人，像侏儒很少会得心脏病，癌症，也会明显更长寿。不过不要紧张，前面提到了，基因本身的信息只占了衰老因素的 20%，控制基因表达这部分占了大多数。
这里有点意外的是 Sinclair 教授介绍的最重要的几个实验，都跟前面我们提到的 fasting 有关。比如一般老鼠的寿命大概是 2 年，他们实验室有一只叫 Yoda 的老鼠，活了足足 5 年。其主要的做法就是选取了侏儒基因，以及执行 fasting。
教授详细介绍了 fasting 为何能提升动物/人类 30% 以上的寿命：

在低血糖水平时，身体会抑制哺乳动物雷帕霉素靶蛋白（mTOR），激活去乙酰化酶（sirtuin），形成一个非常良好的化学状态，清理旧蛋白质，提高胰岛素敏感度，提供更多能量，修复细胞等等。后面这个乙酰化酶是我们抵御衰老的一个重要武器。
当胰岛素水平低时，“长寿基因”会被激活，如 SIRT1 等。
fasting 会给细胞足够的“休息时间”。
血糖水平低，会让身体对胰岛素更敏感，更快吸收血糖，也对健康有益。
当你从来不感受饥饿时，你的衰老时钟也走的更快。
除了 24 小时周期 fasting 触发的 autophagic，还有更深层次的清理机制，会在禁食第二，三天启动。在老年老鼠上的实验表明，这种长时间的禁食可以让他们延长寿命 35%。不过这个实操难度对普通人来说有点大。

Sinclair 也对比了一些上个世纪失败的研究，比如通过抗氧化剂来抵御衰老。现代长寿研究的核心思想是，如何通过一些机制手段来触发身体自身的衰老抵抗机制。
此外 Sinclair 也介绍了一些激动人心的前沿技术，例如通过基因治疗方法，可以重启我们的 DNA 表达系统。通过一次注射，可以让盲人恢复视力，这已经在老鼠身上得到了验证。或许几年后，我们可以像死侍那样实现身体各部分的逆转老化。
抗衰老手段先来总览看一下各种抗衰老的手段。
饮食包括食物结构和饮食控制。饮食控制方面前面有提到过，建议缩短进食窗口到 8 小时左右。饮食结构可以参考最新发表在 Cell 上的这篇文章 Nutrition, longevity and disease: From molecular mechanisms to interventions00398-1.pdf)。简单总结一下就是多吃植物类的蛋白（花生，藜麦，豆类，西兰花等），脂肪（橄榄油，坚果，牛油果等），减少精制碳水（白米饭，白面包，蛋糕，饼干等）；动物脂肪，动物蛋白质，糖这些总体来说是加速衰老的。

体育锻炼有氧锻炼对心肺功能，血管健康等方面的促进对延寿很有帮助。力量训练也能持续保持我们的肌肉，关节，韧带的力量水平，支撑保护能力等，在年纪大时减少各种跌倒或者受伤的风险。一般建议是一周 3 小时左右的有氧运动，搭配 2 到 3 次的力量训练。有氧运动一般比较简单，跑步，骑车，游泳都可以。力量训练有一定的门槛，个人也最近正在学习一些入门训练方式。

药物药物方面的研究也非常多，不过绝大多数都还在人体实验的早期。具体可以参考发表在 Nature 上的这篇 The quest to slow ageing through drug discovery，总结了各种相关研究，其中就包括了著名的二甲双胍，NMN 等。

细胞重编程前面也提到了基因表达是影响衰老最重要的因素，那么有没有手段来控制人体细胞的基因表达呢？著名的山中因子（Yamanaka Factors）给出了一种可能。山中伸弥团队发现的诱导方法是，通过慢病毒载体将 Oct4、Sox2、c-Myc、Klf4 四种转录因子基因转入成体细胞，将其转化为类似于胚胎干细胞的多能干细胞（iPS 细胞）。iPS 细胞与胚胎干细胞拥有相似的再生能力，理论上可以分化为成体的所有器官、组织，而这一点完美地对冲了由细胞衰减带来的人体衰老。听起来是不是非常的神奇？基于这些新技术也出现了很多主攻长寿领域的科技创新公司，如 Life Biosciences，Altos Labs 等，我们可以期待一下未来这些技术的普及应用。

实践这里列出一些 Sinclair 自己的实践方式，如果想要采纳还是要结合自身的情况来看。有意思的是这集节目下有个热门留言是这个教授竟然已经 52 岁了，完全看不出来……所以你懂的。

不吃早饭，午饭也吃的比较少，酸奶或者橄榄油，晚饭吃蔬菜为主，加鱼和虾，基本不吃牛排。不吃糖，甜品，面包。基本达到了 2 小时进食窗口的高阶 fasting 状态。他偶尔也会尝试一整天都不吃东西，但比较难坚持。
每天摄入 1 克的白藜芦醇（resveratrol），1 克的 NMN（进而会转化为 NAD，which is sirtuin 的“燃料”），还有二甲双胍（metformin）。其中锻炼的日子可能会跳过一些补充品。他并不吃复合维生素。
以蔬菜为主食的好处：富含各种营养，维生素；包含异种激素（Xenohormesis），植物基于“压力”之下产生的物质，对长寿有益。后者也可以通过槲皮素（quercetin）来做膳食补充。
一般会隔一天进行有氧运动和力量训练。有氧运动能提升 NAD 水平。
根据家族病史来决定一些药物摄入，如他 29 岁就开始服用降胆固醇药物。
对于人造甜味剂，教授认为总体来说是安全的。他偶尔也会喝健怡可乐。

对于这一系列实践，Sinclair 教授都进行了 10 多年的自身实验，并使用各种手段来监控身体数据。通过监控数据可以推测出一个人的“生理年龄”如何（不是光看脸），他自己在上述实践下，生理年龄在持续下降，现在已经达到了 30 岁左右的水平（实际年龄 52 岁）。另外，他认为每个人的身体情况不一样，医院约定俗成的生理指标范围也不一定适合每个人。未来这种健康数据的实时监控与个性化诊断会成为主流。他举了一些例子：

监控血糖水平 HbA1c，观察 fasting 的影响等。
监控炎症指标 CRP，与心脏病等各种疾病的诱发相关。
监控 LDL，通过药物等进行控制。膳食胆固醇对血液胆固醇几乎没有影响，不需要戒红肉，黄油等。
补充铁元素可能加速衰老。医学指标需要个性化，低铁元素含量并不一定导致贫血。

还有一些影响寿命的负面因素：

肥胖症会加速衰老。
吸烟，会破坏基因表达，加速衰老。
X 光检查同理，没有必要时，避免接触。

展望一下 longevity 研究的未来，还是挺激动人心的。现代科学每一年能让我们的平均寿命延长 1/4 年，如果每一年能让我们的平均寿命延长超过 1 年，则达到了寿命“逃逸速度”（类比以 1000 英里每小时的速度往西飞行，太阳永远不会落下），实现了“永生”。著名的未来学家 Ray Kurzweil 预测，大约 12 年后（2034 年）就能实现，让我们拭目以待。
除了这集 podcast，也必须附上吴承霖大佬的万星项目 程序员延寿指南。
个人实践前面介绍的内容有点多，这篇文章篇幅也有些超了。最后来简单介绍下我个人目前采纳的一些行动和辅助工具。
睡眠方面暂时没有什么特别的措施，现在带娃基本上晚上睡眠质量也比较一般。只是会稍稍注意一下晚上 11 点后尽量不接触手机光源。早起接收光照这点，基本上就是早上遛狗或者开车通勤时间来接触，基本压力不大。如果比较讲究的同学，还可以下一个 My Circadian Clock App 来追踪一下生物钟，也是 Satchin Panda 等大佬参与开发的项目，值得信赖。
饮食方面，开始尝试 8 小时进食窗口的 fasting，目前感觉良好。中饭一般吃蔬菜为主的轻食，晚上就比较放飞自我，想吃啥吃啥。早上会看情况喝点盐水，茶或者 AG1 的补充剂。膳食补充剂目前基本只有复合维生素和 EPA 鱼油在使用，后面可以参考下 Huberman 的“配方” 增加一些。Huberman 自己也在节目中表示对白藜芦醇和 NMN 还在观望状态，我查了些资料发现有争议的地方还不少，所以我个人建议先采纳广受认可和使用的一些补充剂，如 EPA 鱼油，二甲双胍等。个人目前考虑的补充剂列表：

基础维生素，常规补充剂，也可以根据自己的饮食结构，生活习惯选择特定的营养物质补充。
Omega-3 EPA，常年销量靠前的补充剂，好处前面已经说了很多了。
AG1，超火的小绿粉，各种植物提取物 + 各种维生素矿物会，Fridman 等大佬的节目里都有提到。个人买了一次，不过看一些其它评测貌似并不是很划得来。
Betaine HCL &amp; Pepsin，保护肠胃，促进吸收。
L-Tyrosine，提升多巴胺，可能会买个尝尝鲜。
二甲双胍，抗衰老“神药”，不过这个药的有效性和安全性还有争议，建议谨慎。
ResveraCel，⚠️白藜芦醇，NR 等抗衰老组合。效果同样有争议，尤其 NMN 这块更是各种产品鱼龙混杂无法分辨，谨慎购入。

很多人都关心 fasting 可能引发胆结石，这里提供一些补充信息：

从这篇 Bloch, H. M. 等人的论文 来看，fasting 过程中胆汁的饱和度有一个先上升后下降的过程，Dr. Berg 也以此做了解释，认为 fasting 加生酮饮食（摄入脂肪）对胆囊健康反而是有益的。
从这篇 Sichieri, R. 等人的论文 的结果来看，long overnight fasting 和节食会提升得胆结石的概率。不过减肥（减少脂肪）本身就会提升得胆结石的概率。
持续 24 小时以上的禁食相关的研究比较少（比较难执行），但从机理上来说长时间的禁食应该会增加得胆结石的概率。
饮食结构，自身状况对胆结石的形成也会有很大影响，例如高胆固醇，高胰岛素水平，高碳水饮食等。高纤维食物，健康的脂肪摄入，有助于降低得胆结石的概率。

总体看下来，我个人感觉这块的实验上没有一个定论（就跟 咖啡是否会引发胆结石 一样），但应该不是一个概率很大的问题，起码 Huberman 教授跟这个领域的另一位权威 Satchin Panda 教授都没有提到这块的问题。理想情况是执行 fasting 时持续对你的身体状况做医学指标的跟踪。其它就看个人选择了 :)
工作，学习，专注方面，主要看自律了。这方面我总体控制还可以，在了解了多巴胺的工作原理之后就更加有自信了，主要靠各种软件的专注模式来近似执行番茄时钟法，此外也采用了升降桌，大概有 30% 的时间站立办公。工作间歇会尝试一下 Yoga Nidra。此外晚上学习时段会用 iPad 的 Books 来记录一下阅读时间，基本上每天保持 30 分钟以上，持续坚持。后面考虑试试工作时喝马黛茶，以及夏天开始尝试冷水澡。
运动方面是这一年来改观最大的一项，依靠小米手环 PAI 指数功能的督促，基本上做到了每周平均 3 次的跑步或者羽毛球活动，持续把 PAI 值保持在 200 左右。总体来说对于精神状态的改观还是很大的，肚子上的脂肪也减少了很多。唯一比较困扰的是一般下班后运动都要 9，10 点开始了，结束后会离入睡的时间比较近，有时候会对睡眠质量有所影响。
最后，Huberman 教授的 podcast 中还有很多其它内容，比如习惯养成，健身增肌，应对恐惧与创伤，情绪管理等，感兴趣的朋友可以进一步挖掘。本文以实验事实与原理假设的陈述为主，以上所有的行动方案都需要在咨询医师，专业人员的条件下，结合自身情况执行，注意自身安全，本人与 Huberman 都不负相关后果责任。
备注：这篇文章也同时发布到了 Github，欢迎大家 Star 并提出宝贵建议，谢谢！如果你对我的其它作品感兴趣，也欢迎搜索关注公众号：RandomGenerator。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
  </entry>
  <entry>
    <title>RustDesk 开源远程桌面软件系统，自建服务器部署 (审计)、发布和使用教程</title>
    <url>/posts/89b64fc8.html</url>
    <content><![CDATA[前言RustDesk 是一个强大的开源远程桌面软件，是中国开发者的作品，它使用 Rust 编程语言构建，提供安全、高效、跨平台的远程访问体验。可以说是目前全球最火的开源远程桌面软件了，GitHub 收藏数量达到了惊人的 92k！

教程功能NaN.  简单介绍 RustDesk ，对 RustDesk 原理进行简单说明
NaN.  提供 linux 原生安装和 docker 安装两种方式自建 RustDesk 服务器
NaN.  第三方开源 web-api 服务（RustDesk 开源版本没有权限用户相关管理权限控制，pro 版本才有）
NaN.  如何发布 RustDesk 服务端（主要为开放端口说明）
NaN.  客户端简单使用 RustDesk
视频比较细，时长较长，已经分段完成，各位小伙伴可以选择分段观看。
与 TeamViewer、ToDesk 、向日葵等专有远程访问解决方案相比，RustDesk 作为一个开源软件，提供了几个显著的优势：
NaN.  RustDesk 完全免费使用，没有任何隐藏费用或订阅计划。
NaN.  由于其开源特性，RustDesk 的代码是透明的，可以由社区审计，从而提供更高的安全性和可信度。
NaN.  由于 RustDesk 允许自建服务器，隐私性更高
NaN.  RustDesk 自建服务器硬件需求非常低官方说法如下：
硬件要求非常低；基本云服务器的最低配置就足够了，CPU和内存要求极低。您也可以使用树莓派或类似设备。关于网络规模，如果TCP打洞直连失败，将消耗中继流量。中继连接的流量根据分辨率设置和屏幕更新在30 K/s到3 M/s（1920x1080屏幕）之间。如果仅用于办公需求，流量约为100 K/s。
由于被诈骗分子频繁使用，该项目现已暂停国内服务。即国内无法通过公共服务器连接
技术架构对比维度TeamViewerRustDesk传输协议私有协议（优化带宽和延迟）WebRTC + 自定义协议（依赖 P2P/UDP 打洞）中继服务器全球分布式商业服务器（强制中转）可选自建中继服务器（开源实现）连接方式优先 P2P，失败时自动中转强制尝试 P2P，失败后走自建 / 官方中继代码可控性闭源完全开源（MIT 许可）

功能差异对比功能TeamViewerRustDesk多平台支持✔️ (Win/macOS/Linux/iOS/Android/Web)✔️ (全平台 + 浏览器客户端)多显示器切换✔️ (无缝切换)✔️文件传输✔️ (拖拽 / 管理界面)✔️ (基础拖拽)会议功能✔️ (最多 300 人，企业版)❌ (仅 1 对 1 控制)远程打印✔️ (虚拟驱动)❌无人值守访问✔️ (设备分组 / 批量部署)✔️ (需手动设置密码)命令行控制✔️ (TV CLI)✔️ (命令行参数)移动设备控制✔️ (Android/iOS 反向控制)✔️ (Android/iOS 反向控制)

RustDesk 架构概述RustDesk 采用了经典的客户端 - 服务器模型，其中涉及三个主要组件：RustDesk 客户端、RustDesk 服务器和 ID Server。

NaN.  客户端 - 服务器模型
在 RustDesk 的架构中，客户端是运行在用户设备 (如笔记本电脑、平板电脑或智能手机) 上的应用程序。它提供了一个图形界面，允许用户发起远程访问请求并与远程计算机进行交互。另一方面，服务器组件运行在要远程访问的目标计算机上。它负责监听来自客户端的连接请求，并在建立连接后向客户端发送屏幕更新和接收输入事件。
NaN.  ID Server 的角色
ID Server 在 RustDesk 的生态系统中扮演着重要的角色。它的主要职责是促进客户端和服务器之间的初始连接建立。**当 RustDesk 服务器启动时，它会连接到 ID Server 并注册自己，提供如服务器 ID 和公网 IP 地址等信息**。类似地，当客户端想要连接到特定的 RustDesk 服务器时，它会向 ID Server 查询目标服务器的连接信息。

**ID Server 维护了一个已注册的 RustDesk 服务器目录，并充当客户端和服务器之间的中介，帮助它们建立直接的点对点 (P2P) 连接**。一旦客户端从 ID Server 获得了服务器的连接信息，它就可以尝试直接连接到服务器，而无需进一步通过 ID Server 中继数据。
NaN.  Relay Server 的角色
在某些网络环境下，RustDesk 客户端和服务器可能**无法直接建立 P2P 连接**，例如当它们位于 NAT (网络地址转换) 或防火墙后时。为了克服这一挑战，RustDesk 引入了 Relay Server。

**如果客户端无法直接连接到服务器，它会向 ID Server 请求一个 Relay Server。然后，客户端和服务器都连接到指定的 Relay Server，并通过它来中继所有的网络通信**。Relay Server 在这种情况下充当客户端和服务器之间的桥梁，转发来自一方的数据包到另一方。

值得注意的是，即使通过 Relay Server 进行通信，RustDesk 也会维护端到端加密，确保中继服务器无法访问明文数据。Relay Server 只是盲目地转发加密的数据包，而不能查看或修改其内容。
RustDesk 部署教程linux 原生部署服务器配置说明：配置项参数cpu1C内存1G系统Ubuntu 24.04 任意 linux 系统

下载 Rustdesk Server方法 2 直接前往官方页面下载https://github.com/rustdesk/rustdesk-server/releases
方法 3 服务器直接或者代理下载docker github 代理地址：https://www.cnproxy.top/
使用 githuab 代理或者直接下载
wget https://ghproxy.cnproxy.top/https://github.com/rustdesk/rustdesk-server/releases/download/1.1.14/rustdesk-server-linux-amd64.zip
解压 Rustdesk Serverapt install unzip​unzip rustdesk-server-linux-amd64.zip
解压完成后会出现 hbbr，hbbs，rustdesk-utils 三个文件
hbbr：

hbbr是 RustDesk Relay Server，即 RustDesk 中继服务器，当客户端之间无法直接建立 P2P 连接时，会通过hbbr中继服务器进行数据传输hbbr允许无法直接建立 P2P 连接的客户端通过中继服务器进行通信。

hbbs：

hbbs代表 RustDesk ID / Rendezvous Server，即 RustDesk ID 注册服务器。它用于分配和注册 ID，并且是 RustDesk 的中介服务器（Broker Server），用于管理和协调客户端连接。hbbs帮助客户端找到并建立 P2P 连接，负责维护客户端的在线状态，并处理连接请求。当客户端 A 希望连接客户端 B 时，它会向hbbs发送请求，hbbs会帮助它们建立连接。

rustdesk-utils：

rustdesk-utils是 RustDesk 的命令行工具，提供了一些管理和操作 RustDesk 服务器端的工具和命令。

配置系统服务且加入开机自启动执行 vim hbbr.service 配置系统级服务
[Unit]Description=RustDesk Relay ServerAfter=network.target​[Service]Type=simpleExecStart=/opt/rustdesk/hbbrRestart=on-failureWorkingDirectory=/opt/rustdesk​[Install]WantedBy=multi-user.target​
执行 vim hbbs.service 配置系统级服务
[Unit]Description=RustDesk Relay ServerAfter=network.target​[Service]Type=simpleExecStart=/opt/rustdesk/hbbsRestart=on-failureWorkingDirectory=/opt/rustdesk​[Install]WantedBy=multi-user.target​
将服务添加到系统服务，且加入开机自启动
//将当前路径服务以软连接加入系统服务中ln -s /opt/rustdesk/hbbr.service /etc/systemd/system/ln -s /opt/rustdesk/hbbs.service /etc/systemd/system///重载服务systemctl daemon-reload//启动并且加入开机自启动​systemctl enable --now hbbs.service systemctl enable --now hbbr.service
总结
解压完成后 hbbr 与 hbbs 可以移动位置，但是两个文件需放在同一目录中。

首次需要先启动 hbbs 在启动 hbbr


docker 部署教程安装 docker见本站 docker 安装教程 https://halo.blog360.sbs/archives/dockeran-zhuang-jiao-cheng
运行容器docker 直接运行docker run --restart=always  --name hbbs  -v /opt/rustdesk:/root -td --net=host rustdesk/rustdesk-server  hbbs  -r [服务器公网IP或域名]  ​docker run  --restart=always --name hbbr   -v /opt/rustdesk:/root -td  --net=host rustdesk/rustdesk-server  hbbr
docker compose 运行version: &#x27;3&#x27;​networks:  rustdesk-net:    external: false​services:  hbbs:    container_name: hbbs    ports:      - 21115:21115      - 21116:21116      - 21116:21116/udp      - 21118:21118    image: rustdesk/rustdesk-server:latest    command: hbbs -r rustdesk.example.com:21117 # 公网ip或者域名，为中继连接节点    volumes:      - ./data:/root    networks:      - rustdesk-net    depends_on:      - hbbr    restart: unless-stopped​  hbbr:    container_name: hbbr    ports:      - 21117:21117      - 21119:21119    image: rustdesk/rustdesk-server:latest    command: hbbr    volumes:      - ./data:/root    networks:      - rustdesk-net    restart: unless-stopped
总结
注意配置公网访问中继节点  

rustdesk-web-API-server 部署首先我们为什么要部署 rustdesk-API-server，我们需要指定 rustdesk 开源版本与 pro 版本的区别，其核心区别主要有下：
功能开源自托管版Pro 自托管版Web 管理控制台❌ 无✅ 完整图形化界面（设备 / 用户 / 权限管理）API 接口❌ 无✅ RESTful API（自动化集成）审计日志❌ 仅基础连接日志✅ 完整操作审计（登录 / 会话 / 文件传输）设备分组 / 标签❌ 手动管理✅ 可视化批量管理企业级安全❌ 基础密码验证✅ TOTP 两步验证 (2FA)会议功能❌ 仅一对一连接✅ 支持多人会议（≤10 人）安卓隐私黑屏❌ 无✅ 被控时屏幕自动黑屏商业授权❌ AGPLv3 (有传染性)✅ 商业许可（规避开源风险）官方技术支持❌ 仅社区支持✅ 订阅用户专属支持

对应企业而言，前五条还是比较重要的，而 pro 版本的订阅价格还比较贵，我们可以通过自行部署其他第三方 rustdesk-web-API 来解决，当然第三方肯定无法和官方的 pro 比较，如果权限要求比较细也可以购买 pro 版本支持一下
那么我们本次部署所使用的第三方 rustdesk-web-API 可以提供哪些功能呢？基本如下
功能详情Web 管理控制台提供了一个完整图形化界面（设备 / 用户 / 权限管理）API 接口RESTful API 并且提供了 swagger 接口，可以自行定制开发设备分组 / 标签可视化批量管理安全提升可强制要求登录后才允许使用远程

项目地址：https://github.com/lejianwen/rustdesk-api
安装 docker见本站 docker 安装教程
docker compose 运行添加 docker-compose.yml 文件
version: &#x27;3&#x27;  # 必须声明版本（推荐 ≥3.5）​services:  rustdesk:    image: lejianwen/rustdesk-server-s6:latest    container_name: rustdesk-server    ports:      - &quot;21114:21114&quot;    # 注意：所有端口必须加引号（YAML规范）      - &quot;21115:21115&quot;      - &quot;21116:21116&quot;    # TCP端口      - &quot;21116:21116/udp&quot; # UDP端口（无需重复定义TCP）      - &quot;21117:21117&quot;      - &quot;21118:21118&quot;      - &quot;21119:21119&quot;    environment:       - RELAY=rustdesk.domain.com:21117 # 默认的中继服务器      - ENCRYPTED_ONLY=1      - MUST_LOGIN=Y  # 是否强制登陆才运行使用      - TZ=Asia/Shanghai # 时区     # - RUSTDESK_API_GORM_TYPE=mysql     # - RUSTDESK_API_MYSQL_USERNAME=root     # - RUSTDESK_API_MYSQL_PASSWORD=123456     # - RUSTDESK_API_MYSQL_ADDR=192.168.1.1     # - RUSTDESK_API_MYSQL_DBNAME=rustdesk_db      - RUSTDESK_API_APP_SHOW_SWAGGER=0 # 是否启用swagger       - RUSTDESK_API_RUSTDESK_KEY=1222112= #jwt key      - RUSTDESK_API_RUSTDESK_API_SERVER=https:      - RUSTDESK_API_RUSTDESK_RELAY_SERVER=rustdesk.domain.com:21117      - RUSTDESK_API_RUSTDESK_ID_SERVER=rustdesk.domain.com:21116    volumes:      - ./data:/data      - ./data/api:/app/data #将数据库挂载 sqlite 数据库文件挂载 为mysql时可以不配置    restart: unless-stopped    networks:      - rustdesk-net​networks:  # 顶级配置（顶格书写）  rustdesk-net:    driver: bridge
完整参数配置
变量名说明示例TZ时区Asia/ShanghaiRUSTDESK_API_LANG语言en,zh-CNRUSTDESK_API_APP_WEB_CLIENT是否启用 web-client; 1: 启用, 0: 不启用; 默认启用1RUSTDESK_API_APP_REGISTER是否开启注册; true, false 默认falsefalseRUSTDESK_API_APP_SHOW_SWAGGER是否可见 swagger 文档;1显示，0不显示，默认0不显示1RUSTDESK_API_APP_TOKEN_EXPIREtoken 有效时长168hRUSTDESK_API_APP_DISABLE_PWD_LOGIN是否禁用密码登录; true, false 默认falsefalseRUSTDESK_API_APP_REGISTER_STATUS注册用户默认状态; 1 启用，2 禁用, 默认 11RUSTDESK_API_APP_CAPTCHA_THRESHOLD验证码触发次数; -1 不启用， 0 一直启用， &gt;0 登录错误次数后启用 ; 默认 33RUSTDESK_API_APP_BAN_THRESHOLD封禁 IP 触发次数; 0 不启用, &gt;0 登录错误次数后封禁 IP; 默认 00-----ADMIN 配置 -------------------------RUSTDESK_API_ADMIN_TITLE后台标题RustDesk Api AdminRUSTDESK_API_ADMIN_HELLO后台欢迎语，可以使用htmlRUSTDESK_API_ADMIN_HELLO_FILE后台欢迎语文件，如果内容多，使用文件更方便。 会覆盖RUSTDESK_API_ADMIN_HELLO./conf/admin/hello.html-----GIN 配置 -------------------------RUSTDESK_API_GIN_TRUST_PROXY信任的代理 IP 列表，以,分割，默认信任所有192.168.1.2,192.168.1.3-----GORM 配置 ------------------------------------------RUSTDESK_API_GORM_TYPE数据库类型 sqlite 或者 mysql，默认 sqlitesqliteRUSTDESK_API_GORM_MAX_IDLE_CONNS数据库最大空闲连接数10RUSTDESK_API_GORM_MAX_OPEN_CONNS数据库最大打开连接数100RUSTDESK_API_RUSTDESK_PERSONAL是否启用个人版 API， 1: 启用, 0: 不启用； 默认启用1-----MYSQL 配置 -------------------------RUSTDESK_API_MYSQL_USERNAMEmysql 用户名rootRUSTDESK_API_MYSQL_PASSWORDmysql 密码111111RUSTDESK_API_MYSQL_ADDRmysql 地址192.168.1.66:3306RUSTDESK_API_MYSQL_DBNAMEmysql 数据库名rustdesk-----RUSTDESK 配置 -------------------------RUSTDESK_API_RUSTDESK_ID_SERVERRustdesk 的 id 服务器地址192.168.1.66:21116RUSTDESK_API_RUSTDESK_RELAY_SERVERRustdesk 的 relay 服务器地址192.168.1.66:21117RUSTDESK_API_RUSTDESK_API_SERVERRustdesk 的 api 服务器地址http://192.168.1.66:21114RUSTDESK_API_RUSTDESK_KEYRustdesk 的 key123456789RUSTDESK_API_RUSTDESK_KEY_FILERustdesk 存放 key 的文件./conf/data/id_ed25519.pubRUSTDESK_API_RUSTDESK_WEBCLIENT MAGICQUERYONLINEWeb client v2 中是否启用新的在线状态查询方法; 1: 启用,0: 不启用, 默认不启用0RUSTDESK_API_RUSTDESK_WS_HOST自定义 Websocket Hostwss://192.168.1.123:1234----PROXY 配置 -------------------------RUSTDESK_API_PROXY_ENABLE是否启用代理:false, truefalseRUSTDESK_API_PROXY_HOST代理地址http://127.0.0.1:1080----JWT 配置 --------------------RUSTDESK_API_JWT_KEY自定义 JWT KEY, 为空则不启用 JWT 如果没使用lejianwen/rustdesk-server中的MUST_LOGIN，建议设置为空RUSTDESK_API_JWT_EXPIRE_DURATIONJWT 有效时间168h

查看密码
执行
docker logs -f docker容器ID
查看密码
总结
注意这个服务包已经包含了 hbbr 与 hbbs，可以不用再部署了。

默认超管密码将会在容器日志中输出。

默认容器已经禁用了注册功能。


RustDesk 发布教程在发布之前，我们需要了解 rustdesk 各个端口的作用：
了解端口，确认发布端口hbbs 服务所需端口
协议端口号说明TCP21114用于 Web 控制台（可选）TCP21115用于 NAT 类型测试TCP/UDP21116必须同时启用 TCP 和 UDP，用于 ID 注册、心跳服务（UDP）以及 TCP 打洞、连接服务（TCP）TCP21118用于支持 Web 客户端（可选）

hbbr 服务所需端口
协议端口号说明TCP21117用于中继服务TCP21119用于支持 Web 客户端（可选）

那么可以根据一下需求来
RustDesk 官方开源版本
端口是否必须21116 tcp/udp是21117 tcp建议开放，用于在 p2p 失败后中继21115 tcp建议不开放

rustdesk-web-API-server 第三方带服务版本
端口是否必须21116 tcp/udp是21114(443 or 80) tcp开放 将 web 使用 443 或者 80 发布21117 tcp建议开放，用于在 p2p 失败后中继21115 tcp建议不开放21119 tcp建议不开放21118建议不开放

使用 nginx 代理发布端口非 web 端口 nginx stream 发布 ·
NaN.  修改 nignx 配置文件，设置 stream 模块
    stream &#123;        include /etc/nginx/stream.d/*;    &#125;​    ​    ```NaN.  添加 stream 代理端口    
server &#123;
    listen 21116;
    proxy_pass 172.30.0.2:21116;
    proxy_connect_timeout 5s;
&#125;
​
# UDP端口代理（P2P打洞）
server &#123;
    listen 21116 udp reuseport;
    proxy_pass 172.30.0.2:21116;
    proxy_timeout 3s;
&#125;
​    server {        listen 21117;        proxy_pass 172.30.0.2:21117;    }​
**web 端口发布**在 / etc/nginx/sites-available 添加新域名配置文件，**_vim 你的域名_**
server {​    listen 80;    server_name test.blog360.sbs;
​     location / {                client_max_body_size 50m;                proxy_set_header Host $host;                proxy_set_header X-Real-IP $remote_addr;                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;                proxy_pass http://172.30.0.2:21114/; 
            index index.html index.htm A1-index.html;
​  }​​}
建立软连接
ln -s /etc/nginx/sites-available/你的域名 /etc/nginx/sites-enabled/你的域名
**web 端口申请免费证书（ssl 证书可选）****安装 Certbot 工具**
sudo apt updatesudo apt install certbot python3-certbot-nginx​
sudo yum install epel-releasesudo yum install certbot python3-certbot-nginx
**申请 ssl 证书（nginx）**
sudo certbot 
*   替换 `your-domain.com` 为你的域名### 总结1. 注意 stream 与 http 同级。2. 发布尽量使用标准端口，若 **rustdesk-web-API-server 使用非标端口注意启动容器配置**  **RustDesk 使用教程**-----------------### **RustDesk 开源社区版本使用**1. 打开设置   ![](https://halo.blog360.sbs/upload/image-20250711215759378-fEWe.png)2. 配置网络   ![](https://qt.qiongzhou.eu.org/webp/image-20250711215832375.png)3. 配置对应的 id，中继服务器和 key   ![](https://qt.qiongzhou.eu.org/webp/image-20250711215914409.png)   **key 的配置在**   1. **服务器 docker logs -f 容器 id 日志中查看**   2 **在服务器安装，目录查看一个为 id_ed------.pub 文件**   ![](https://qt.qiongzhou.eu.org/webp/image-20250711220247948.png)   完成配置后，回到主页，显示**就绪**即可正常使用   ![](https://qt.qiongzhou.eu.org/webp/image-20250711220337412.png)### **pro 版本或者 rustdesk-web-API-server 版本**#### **swagger 使用**在配置启用 swagger 后，打开1.  后台文档 `/admin/swagger/index.html`2.  PC 端文档 `/swagger/index.html`即可进入对应 swagger 文档![](https://qt.qiongzhou.eu.org/webp/image-20250711220751098.png)#### **用户初始化**未开放注册，若用户初始用户过多，可以通过调用 api 方式添加用户，这里提供一个 **Java 同步启用微信用户**的方法
import cn.hutool.http.HttpRequest;import cn.hutool.http.HttpResponse;import cn.hutool.json.JSONArray;import cn.hutool.json.JSONObject;import cn.hutool.json.JSONUtil;​import java.util.HashMap;import java.util.Map;​public class WeComUserSync {​
public static final String QY_HOST = &quot;企业微信url路径&quot;;
public static final String QY_CORP_ID = &quot;企业id&quot;;
public static final String QY_CORP_SECRET = &quot;企业微信密钥&quot;;
​    public static final String RUST_DESK_HOST = “http://192.168.73.129:21114/api“;    public static final String RUST_DESK_TOKEN = “430b712ba7ef99da742c9c15bc5ae4c0”;​​    public static void syncUsers() {        String weComAccessToken = getWeComAccessToken();
    JSONArray wecomUsers = getWeComUsers(weComAccessToken);
​
    for (Object user : wecomUsers) &#123;
        JSONObject wecomUser = (JSONObject) user;
        JSONObject targetUser = convertToTargetFormat(wecomUser);
        createUser(targetUser);
    &#125;
&#125;
​    public static String getWeComAccessToken() {
    Map&lt;String, Object&gt; params = new HashMap&lt;&gt;();
    params.put(&quot;corpid&quot;, QY_CORP_ID);
    params.put(&quot;corpsecret&quot;, QY_CORP_SECRET);
​
    HttpResponse response = HttpRequest.get(QY_HOST +&quot;/cgi-bin/gettoken&quot;)
            .form(params)
            .execute();
​
    JSONObject result = JSONUtil.parseObj(response.body());
​
    if (result.getInt(&quot;errcode&quot;) != 0) &#123;
        throw new RuntimeException(&quot;获取access_token失败: &quot; + result.getStr(&quot;errmsg&quot;));
    &#125;
​        return result.getStr(“access_token”);    }​​    public static JSONArray getWeComUsers(String weComAccessToken) {​        String departmentId = “1”;        String fetchChild = “1”;​
    String url = String.format(QY_HOST +&quot;/cgi-bin/user/list?access_token=%s&amp;department_id=%s&amp;fetch_child=%s&quot;,
            weComAccessToken, departmentId, fetchChild);
​​
    HttpResponse response = HttpRequest.get(url).execute();
    String body = response.body();
    JSONObject result = JSONUtil.parseObj(body);
​
    if (result.getInt(&quot;errcode&quot;) != 0) &#123;
        throw new RuntimeException(&quot;企业微信API调用失败: &quot; + result.getStr(&quot;errmsg&quot;));
    &#125;
​        return result.getJSONArray(“userlist”);    }​    public static JSONObject convertToTargetFormat(JSONObject wecomUser) {
    Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();
    map.put(&quot;group_id&quot;, 2);                             
    map.put(&quot;is_admin&quot;, false);             
    map.put(&quot;nickname&quot;, wecomUser.getStr(&quot;name&quot;));       
    map.put(&quot;status&quot;, 1); 
    map.put(&quot;username&quot;, wecomUser.getStr(&quot;userid&quot;));     
​        return JSONUtil.parseObj(map);    }​​    public static void createUser(JSONObject userData) {​​        HttpResponse response = HttpRequest.post(RUST_DESK_HOST +”/admin/user/create”)                .body(userData.toString())                .header(“api-token”, RUST_DESK_TOKEN)                .contentType(“application/json”)                .execute();​
    if (response.getStatus() != 200) &#123;
        System.out.println(&quot;用户创建失败: HTTP &quot; + response.getStatus());
    &#125;
​        JSONObject result = JSONUtil.parseObj(response.body());        System.out.println(“添加响应结果：”+result);    }​​    public static void updateAllUsersPassword() {        int page = 1;        int pageSize = 100;        int totalPages = 1;​        while (page &lt;= totalPages) {
        JSONObject userListResponse = getUserList(page, pageSize);
​
        if (userListResponse == null || userListResponse.getInt(&quot;code&quot;) != 0) &#123;
            System.err.println(&quot;获取用户列表失败，页码: &quot; + page);
            page++;
            continue;
        &#125;
​            JSONObject data = userListResponse.getJSONObject(“data”);            JSONArray users = data.getJSONArray(“list”);​
        totalPages = (int) Math.ceil((double) data.getInt(&quot;total&quot;) / pageSize);
​
        for (Object userObj : users) &#123;
            JSONObject user = (JSONObject) userObj;
            updateUserPassword(user);
        &#125;
​            page++;        }    }​    public  static JSONObject getUserList(int page, int pageSize) {        String url = RUST_DESK_HOST + “/admin/user/list”;​        try {            HttpResponse response = HttpRequest.get(url)                    .header(“api-token”, RUST_DESK_TOKEN)                    .form(“page”, page)                    .form(“page_size”, pageSize)                    .execute();​            String body = response.body();​            return JSONUtil.parseObj(body);        } catch (Exception e) {            System.err.println(“获取用户列表异常: “ + e.getMessage());            return null;        }    }​    public static void updateUserPassword(JSONObject user) {        int userId = user.getInt(“id”);        String username = user.getStr(“username”);        String newPassword = username + “!@#123”;​        String url = RUST_DESK_HOST + “/admin/user/changePwd”;​        try {            if (userId &gt;1) {                JSONObject requestBody = new JSONObject();                requestBody.set(“id”, userId);                requestBody.set(“password”, newPassword);​                HttpResponse response = HttpRequest.post(url)                        .body(requestBody.toString())                        .header(“api-token”, RUST_DESK_TOKEN)                        .contentType(“application/json”)                        .execute();​                JSONObject result = JSONUtil.parseObj(response.body());​                if (result.getInt(“code”) == 0) {                    System.out.println(“用户密码更新成功: “ + username);                } else {                    System.err.println(“用户密码更新失败: “ + username +                            “ | 错误信息: “ + result.getStr(“message”));                }            }        } catch (Exception e) {            System.err.println(“更新密码异常: “ + username + “ | “ + e.getMessage());        }    }​    public static void main(String[] args) {
    updateAllUsersPassword(); 
&#125;
}
#### **Oauth2 接入（GitHub）演示**添加对应 Oauth2 配置![](https://qt.qiongzhou.eu.org/webp/image-20250711221332982.png)*   对于`Google` 和 `Github`, `Issuer` 和 `Scopes`不需要填写.*   对于`OIDC`, `Issuer`是必须的。`Scopes`是可选的，默认为 `openid,profile,email`. 确保可以获取 `sub`,`email` 和`preferred_username`*   `github oauth app`在`Settings`-&gt;`Developer settings`-&gt;`OAuth Apps`-&gt;`New OAuth App` 中创建, 地址 [https://github.com/settings/developers](https://github.com/settings/developers) `callback URL 填写`&#123;uri&#125;/api/oauth/callback*   `Authorization callback URL`填写`http:///api/oidc/callback` ，比如`http://127.0.0.1:21114/api/oidc/callback`前往 GitHub oauth app 配置 [https://github.com/settings/developers](https://github.com/settings/developers)![](https://qt.qiongzhou.eu.org/webp/image-20250711221939594.png)**rustdesk 页面配置****![](https://qt.qiongzhou.eu.org/webp/image-Oxeb.png)**这样是存在 bug![](https://qt.qiongzhou.eu.org/webp/image-20250711222302517.png) 我们直接调用 api 添加该字段也不行，这个 bug 应该是由于使用 sqlite 会出现，mysql 正常
curl —location —request POST ‘http://192.168.73.129:21114/api/admin/oauth/create‘ \—header ‘api-token: 60aca81100daccf883c66f32b45d7b72’ \—header ‘Content-Type: application/json’ \—data ‘{    “id”: 0,    “op”: “”,    “oauth_type”: “github”,    “issuer”: “”,    “client_id”: “2221”,    “client_secret”: “1123”,    “redirect_url”: “”,    “scopes”: “”,    “auto_register”: true,    “pkce_enable”: false,    “pkce_method”: “S256”}’
```
完成后页面展示

第三方接入与 OIDC 接入根据 up 主的查阅 OIDC 算比较前沿的，国内支持厂商并不多，好像企业微信在 23 年已经内测了，如果内部业务系统支持可以对接，或者查询所使用的系统看有没有对接的可能，或者直接简单开发对接 api 实现自定义 Oauth2 登录
其他权限管理这里的话各位小伙伴可以自行探索，根据自己的需求来使用地址簿、标签、分组等等
]]></content>
      <categories>
        <category>教程学习</category>
      </categories>
      <tags>
        <tag>RustDesk</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Railway 和 Supabase 零成本搭建 n8n 自动化平台</title>
    <url>/posts/f589171e.html</url>
    <content><![CDATA[
我的 n8n 「白嫖」托管新方案。

在前文 使用自动化工作流聚合信息摄入和输出 中，我介绍了如何在 NAS 提供的 Docker 环境安装 n8n，以及 n8n workflow 的使用方式。经过 3 个月的使用，我有了一些新的体会和尝试，重新设计了 n8n 的部署方案。本文将对这套新的方案进行说明，并分享数据迁移和第三方服务接入的实践。

系统架构
系统架构图
我们所要搭建的这套服务有着如图所示的系统关系。

Cloudflare: CDN 和 Proxy，用于加速网站访问，可选组件
Railway: PaaS 平台，提供 Docker 环境运行 n8n 的后端进程
Supabase: 作为数据库供 n8n 使用

完整部署流程Supabase: 创建数据库首先我们要在 Supabase 上注册一个账号，登入之后，点击 New project 创建新的数据库，命名为 n8n，注意要记住创建流程中输入的密码。
定位到 Project settings / Database / Connection info，将图中的信息记录下来即可进入下一步。

Supabase Connection info
GitHub: 创建 Repo在 Railway 上部署服务最便捷的方式就是关联一个 GitHub repo，你可以 fork 我准备好的: reorx/n8n-on-railway
这个 repo 的内容非常简单，其中最核心的就是 Dockerfile，只有一行代码：
它的作用是基于 reorx/n8n-custom 定义新的镜像。Railway 会使用这个 Dockerfile 来自动构建和部署服务。
reorx/n8n-custom 是我个人维护的镜像，基于版本 0.193.5 构建 1，目的是提前使用 PR 的代码，以解决无法接入 Twitter 的问题。如果你对安全性有所担忧，也可以使用官方镜像 n8nio/n8n。
Repo 中还有 example.env 和 export_workflow.sh 两个文件，稍后我们会用到。
Railway: 创建 Project注册或登入 Railway，点击 New Project，选择 Deploy from GitHub repo，找到上一步创建的 repo 名字（n8n-on-railway）并选择，在下一个界面点击 Deploy now 开始部署。
修改域名不需要等待部署完成，我们直接进入 Project，点击代表 service 的卡片，打开 Settings。

Railway Settings Domains
可以看到 Railway 已经为我们的服务分配了一个 .up.railway.app 的四级域名，这将是你访问 n8n Web UI 的入口。如果你对域名没有要求，可以保持不变，将这个域名记录下来；如果你希望使用自己的域名，请参考 Exposing Your App 文档中的 Custom Domains 章节进行设置。
下图是我的域名 n8n.reorx.com 在 Cloudflare 的配置信息。由于 n8n 是一个重前端交互的网站，需要加载很多庞大的 JavaScript 文件，直接通过 Railway 访问效率很低。使用 Cloudflare 的 Proxy 功能，可以让这些静态资源走 Cloudflare CDN，加速网站访问。因此我非常推荐用 Cloudflare 来托管 n8n 自定义域名。

Cloudflare DNS config for n8n.reorx.com
设置环境变量确认域名后，我们要切换到 Variables 页面对环境变量进行设置。

Railway Variables Raw Editor
点击 Raw Editor 按钮，在弹出的输入框中粘贴 GitHub repo 中的 example.env 文件的内容，并调整各变量的值。其中：

DB_ 开头的部分要根据 Supabase 的 Connection info 对号入座
VUE_APP_URL_BASE_API 和 WEBHOOK_URL 填写上一步中所使用的域名。
N8N_ENCRYPTION_KEY 是 n8n 加密 credentials 所使用的 key，请务必使用自己生成的随机字符串。如果没有这个变量，n8n 会随机生成一个并保存到文件系统中，在 Railway 的运行环境下重启后就会丢失，导致已保存的 credentials 无法解密 2。
EXECUTIONS_DATA_PRUNE: 打开 n8n 的自动化数据清理功能，使 n8n 定期清理在 EXECUTIONS_DATA_MAX_AGE 小时以前的执行记录，确保数据库体积不会上升过快 3。（Supabase 的免费额度只有 500M）

以上这些变量均可在官方文档 Configuration 中找到详细说明。
编辑完成后，点击 Update Variables，Railway 会开始新的部署任务。至此，我们就完成了 n8n 在 Railway 上使用 Supabase 数据库的部署流程。
初始化和数据迁移如果一切正常，等 Railway 的部署任务完成后，即可通过 修改域名 环节所确定的域名打开 n8n 网站。第一次访问时，n8n 会引导用户创建管理员账号，安全起见，请尽快完成这一步骤。
Workflow 导入如果你有已经备份好的 workflow，此时就可以进行导入了。先创建一个空的 workflow，然后在左侧菜单点击 “Import from File”，选择已有 workflow 的 json 文件即可完成导入。导入后，原 workflow 所使用的 credentials 会失效，需要手动选择或创建新的 credentials 才可以正常使用。
reorx/n8n-workflows 是我自己使用的一些 workflow，供读者参考。
Workflow 导出出于备份或分享的目的，我们可以导出 n8n 的 workflows。下面讲解如何将运行在 Railway 中的 n8n 的 workflows 进行导出。

准备一个 Docker 环境，包含一个 Docker host 以及命令行工具 docker

安装 Railway 的命令行工具 railway 4

进入 GitHub Repo 所在的目录，执行 railway link，选择 n8n 对应的 project

执行如下命令
EXPORT_ROOT=/path/to/volume railway run bash export_workflows.sh
其中 EXPORT_ROOT 是文件输出路径，将作为 volume 挂载到所要执行的 Docker 容器中。
railway run 会将线上 project 的环境变量注入到当前 shell 中，使最终执行的脚本 export_workflows.sh 使用与线上一致的环境。
执行完毕后，即可在 EXPORT_ROOT 下找到当前日期命名的目录，其中的 json 文件即为导出的 workflows。这些文件是以 workflow 的 id 命名，你还可以使用我的 get_workflows.py 脚本修改文件名为实际的可读名称，并清理其中的无用数据:
python get_workflows.py $EXPORT_ROOT/n8n-$(date +%Y%m%d) workflows/


这个导出方法同样适用于 NAS Docker 中部署的 n8n，只需要去掉 Railway 相关的步骤即可。
接入第三方服务n8n 的强大在于它内置了很多线上服务的 Integrations，仅需简单的配置即可完成接入。虽然官方有文档说明，但仍然有一些不大不小的坑，这里记录下我的一些配置技巧，希望能帮助你节省一些时间。
GoogleGoogle 的接入相对比较复杂，请跟随文档 Integrations: Google 的详细说明进行操作。这里只说下文档中没有提到的一个注意事项。
~在创建 OAuth consent screen 后，要将 Publishing status 设为 Testing，否则 Google 的 OAuth 页面会显示应用未通过审核的警告。还要将想要接入的 Google 账号邮箱加入 Test users 列表，否则无法再 Testing 模式下通过 OAuth 验证。~

以下内容为 2022-09-24 更新

在创建 OAuth consent screen 后，要将 Publishing status 设为 Production，否则一周后 OAuth token 就会过期 5。虽然这种方式会导致 OAuth 认证页面显示应用未通过审核的警告（点击左下角 “Go to …” 可以绕过），但总好过每周重新连接一次的麻烦。

以下内容为 2022-12-01 更新

只有当服务的域名为自定义域名且为 authorized domain 时才可以将 Publishing status 设为 Production，否则一段时间后 OAuth 将不可用，Verification Status 异常。关于如何将自己的域名在 Google 进行验证，请参考 Verify your domain (host-specific steps) - Google Workspace Admin Help.

OAuth consent screen: Publishing status

OAuth warning for Production app without verification
TwitterTwitter 由于这两年来 Developer Portal 的大幅改造，实际操作中可能与文档 Integrations: Twitter 有许多不一致，但只要确保以下几点，应该可以避免大部分问题。

确保创建的 App 在 “Standalone app” 这个分类下
确保 “User authentication settings” 按下图所示配置

User authentication settings

确保向 n8n 填入的 Consumer Key 和 Consumer Secret 来自下图中红框所在的位置

Consumer Keys


Pinboardn8n 没有内置 Pinboard 接入，不过 Pinboard API 设计非常简洁，我们可以手动实现接入。
创建 credential 时选择 “Query Auth”，向 “Name” 填入 auth_token，向 “Value” 填入从 Pinboard password 页面得到的 API Token。完成后，即可在 HTTP Request node 中使用。

HTTP Request node with pinboard Query Auth
GitHubn8n 虽然有内置的 GitHub 接入，但并非所有 API 都被支持，因此我建议使用 HTTP Request 手动配置验证。
GitHub 提供 PAT (Personal Access Token)，与 Pinboard 的 API Token 类似，相比 OAuth 更容易配置。
GitHub API 支持在 HTTP Header 中通过 Authorization 字段进行验证，其值为 Bearer + PAT 6。
首先打开 https://github.com/settings/tokens, 点击 Generate new token，勾选所需权限。具体根据所要请求的 API 来决定，一般来说至少要勾上 repo 和 user。创建完成后复制结果即为 $PAT。
然后在 n8n 中创建 Header Auth，“Name” 填写 Authorization，Value 填写 Bearer $PAT（将 $PAT 替换为上一步的结果）。完成后，即可在 HTTP Request node 中使用。

HTTP Request node with GitHub Header Auth
总结随着 PaaS 和 Serverless 平台的兴起，在很多场景下它们都能够代替 NAS 成为自托管服务的最佳选择。个人使用免费额度一般都绰绰有余，无论对于想要快速试验新产品的开发者，还是喜欢体验 SaaS 服务的业余爱好者，现在都是一个非常好的时代。
之前将 n8n 部署在 NAS 上平均每天会有几十条错误报警，一部分是 SQLite 在机械硬盘上频繁读写触发事务锁竞争，一部分则是代理不稳定造成网络访问失败。在迁移到 Railway + Supabase 的方案后，两个问题都得到了解决。PostgreSQL 有着更好的连接和并发性能；而 Railway 的运行环境本身就处于外网，自然也不会遇到代理失效的问题。
Railway 也可以提供包含 PostgreSQL 的全托管方案，但独立运行 PostgreSQL 不仅资源消耗大，显著占用免费额度，而且不如 Supabase 这种专业的 DaaS 稳定和安全。Cloudflare 的免费 CDN 服务，补充了 Railway 分发能力的不足，也降低了出口带宽的成本。几个平台相互搭配，取长补短，使新的方案可以用最低的成本实现最佳的性能和体验。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
  </entry>
  <entry>
    <title>GitHub Action for Gitee Pages</title>
    <url>/posts/c5bcc62e.html</url>
    <content><![CDATA[
GitHub Action for Gitee Pages
由于 Gitee Pages 的访问速度很快，很多朋友会选择 Gitee Pages 部署项目（如：个人博客、开源项目国内镜像站点）。但是它不像 GitHub Pages 那样，一提交代码就能自动更新 Pages，因为 Gitee 的自动部署属于 Gitee Pages Pro 的服务。
为了实现 Gitee Pages 的自动部署，我开发了 Gitee Pages Action ，只需要在 GitHub 项目的 Settings 页面下配置 keys，然后在 .github/workflows/ 下创建一个工作流，引入一些配置参数即可。欢迎 Star ⭐ 关注本项目。
欢迎体验，若有使用上的问题，也欢迎随时提交 Issues 反馈。
注：

首次需要手动登录 Gitee ，点击 “启动” 进行 Gitee Pages 服务的部署。
由于 Gitee 改版，使用 Gitee Pages 前需要先完成实名认证。

入参参数描述是否必传默认值示例gitee-usernameGitee 用户名是-yanglbmegitee-passwordGitee 密码是-$&#123;&#123; secrets.GITEE_PASSWORD &#125;&#125;gitee-repoGitee 仓库（严格区分大小写）是-doocs/leetcodebranch要部署的分支（分支必须存在）否mastermaindirectory要部署的分支上的目录否srchttps是否强制使用 HTTPS否truefalse

完整示例1. 创建 workflow在你的 GitHub 项目 .github/workflows/ 文件夹下创建一个 .yml 文件，如 sync.yml，内容如下：
name: Syncon:  push:    branches: [main]  workflow_dispatch:jobs:  build:    runs-on: ubuntu-latest    steps:      - name: Sync to Gitee        uses: wearerequired/git-mirror-action@master        env:          # 注意在 Settings-&gt;Secrets 配置 GITEE_RSA_PRIVATE_KEY          SSH_PRIVATE_KEY: $&#123;&#123; secrets.GITEE_RSA_PRIVATE_KEY &#125;&#125;        with:          # 注意替换为你的 GitHub 源仓库地址          source-repo: git@github.com:doocs/leetcode.git          # 注意替换为你的 Gitee 目标仓库地址          destination-repo: git@gitee.com:Doocs/leetcode.git      - name: Build Gitee Pages        uses: yanglbme/gitee-pages-action@main        with:          # 注意替换为你的 Gitee 用户名          gitee-username: yanglbme          # 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD          gitee-password: $&#123;&#123; secrets.GITEE_PASSWORD &#125;&#125;          # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错          gitee-repo: doocs/leetcode          # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）          branch: main
注：

这里我先使用 wearerequired/git-mirror-action 将 GitHub 仓库同步到 Gitee 仓库，再使用 yanglbme/gitee-pages-action 实现 Gitee Pages 的自动部署。如果你已经通过其它的方式，将代码 push 至 Gitee 了，那么可以不使用 wearerequired/git-mirror-action，也不需要配置 GITEE_RSA_PRIVATE_KEY。

branch 参数默认是 master，如果你是部署在 gh-pages(或者 main) 分支等等，务必指定 branch: gh-pages(或者 branch: main)。

branch 对应的分支，必须在仓库中实际存在，请不要随意（不）指定分支，否则可能导致 Gitee Pages 站点出现 404 无法访问的情况。

对于 gitee-repo 参数，如果你的项目在 Gitee 的地址为 https://gitee.com / 用户名 / xxx ，那么 gitee-repo 就填写为 用户名/xxx。#54

对于 workflow 的触发事件，你可以根据项目实际情况，指定为其它的触发事件。比如：
on:  push:    branches: [main, master]
更多触发事件，请参考 Events that trigger workflows


2. 配置密钥密钥的配置步骤如下（可展开看示例图）：

a. 在命令行终端或 Git Bash 使用命令 ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 生成 SSH Key，注意替换为自己的邮箱。生成的 id_rsa 是私钥，id_rsa.pub 是公钥。(⚠️注意此处不要设置密码，生成的公私钥用于下面 GitHub / Gitee 的配置，以保证公私钥成对，否则从 GitHub -&gt; Gitee 的同步将会失败。)b. 在 GitHub 项目的「Settings -&gt; Secrets」路径下配置好命名为 GITEE_RSA_PRIVATE_KEY 和 GITEE_PASSWORD 的两个密钥。其中：GITEE_RSA_PRIVATE_KEY 存放 id_rsa 私钥；GITEE_PASSWORD 存放 Gitee 帐号的密码。c. 在 GitHub 的个人设置页面「Settings -&gt; SSH and GPG keys」配置 SSH 公钥（即：id_rsa.pub），命名随意。d. 在 Gitee 的个人设置页面「安全设置 -&gt; SSH 公钥」配置 SSH 公钥（即：id_rsa.pub），命名随意。

3. 关注 Gitee 公众号关注 Gitee 官方公众号，并绑定个人 Gitee 帐号，用于接收帐号登录通知、以及绕过短信验证码校验，见错误及解决方案 第 3 点。
4. 运行结果如果一切配置正常，并成功触发 Gitee Pages Action ，Gitee Pages Action 会打印出成功的结果。并且，我们会在 Gitee 公众号收到一条登录通知。这是 Gitee Pages Action 程序帮我们登录到 Gitee 官网，并为我们点击了项目的部署按钮。
Run yanglbme/gitee-pages-action@main  with:    gitee-username: yanglbme    gitee-password: ***    gitee-repo: doocs/leetcode    branch: main    https: true/usr/bin/docker run --name e28490f27de0ee43bb49109a40cea0e43202d2_d4911a --label e28490 --workdir /github/workspace --rm -e INPUT_GITEE-USERNAME -e INPUT_GITEE*** INPUT_GITEE-REPO -e INPUT_BRANCH -e INPUT_DIRECTORY -e INPUT_HTTPS -e HOME -e GITHUB_JOB -e GITHUB_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_REPOSITORY_OWNER -e GITHUB_RUN_ID -e GITHUB_RUN_NUMBER -e GITHUB_RETENTION_DAYS -e GITHUB_RUN_ATTEMPT -e GITHUB_ACTOR -e GITHUB_WORKFLOW -e GITHUB_HEAD_REF -e GITHUB_BASE_REF -e GITHUB_EVENT_NAME -e GITHUB_SERVER_URL -e GITHUB_API_URL -e GITHUB_GRAPHQL_URL -e GITHUB_REF_NAME -e GITHUB_REF_PROTECTED -e GITHUB_REF_TYPE -e GITHUB_WORKSPACE -e GITHUB_ACTION -e GITHUB_EVENT_PATH -e GITHUB_ACTION_REPOSITORY -e GITHUB_ACTION_REF -e GITHUB_PATH -e GITHUB_ENV -e RUNNER_OS -e RUNNER_ARCH -e RUNNER_NAME -e RUNNER_TOOL_CACHE -e RUNNER_TEMP -e RUNNER_WORKSPACE -e ACTIONS_RUNTIME_URL -e ACTIONS_RUNTIME_TOKEN -e ACTIONS_CACHE_URL -e GITHUB_ACTIONS=true -e CI=true -v &quot;/var/run/docker.sock&quot;:&quot;/var/run/docker.sock&quot; -v &quot;/home/runner/work/_temp/_github_home&quot;:&quot;/github/home&quot; -v &quot;/home/runner/work/_temp/_github_workflow&quot;:&quot;/github/workflow&quot; -v &quot;/home/runner/work/_temp/_runner_file_commands&quot;:&quot;/github/file_commands&quot; -v &quot;/home/runner/work/leetcode/leetcode&quot;:&quot;/github/workspace&quot; e28490:f27de0ee43bb49109a40cea0e43202d2[2021-11-27 20:16:30] Welcome to use Gitee Pages Action ❤📕 Getting Started Guide: https://github.com/marketplace/actions/gitee-pages-action📣 Maintained by Yang Libin: https://github.com/yanglbme[2021-11-27 20:16:34] Login successfully[2021-11-27 20:16:35] Rebuild Gitee Pages successfully[2021-11-27 20:16:35] Success, thanks for using @yanglbme/gitee-pages-action!
错误及解决方案#错误解决方案1Error: Wrong username or password, login failed .帐号或密码错误，请检查参数 gitee-username、gitee-password是否准确配置。2Error: Need captcha validation, please visit https://gitee.com/login, login to validate your account.需要图片验证码校验。可以手动登录 Gitee 官方，校验验证码。3Error: Need phone captcha validation, please follow wechat official account "Gitee" to bind account to turn off authentication.需要短信验证码校验。可以关注 Gitee 微信公众号，并绑定 Gitee 帐号，接收登录提示。#64Error: Do not deploy frequently, try again one minute later.短期内频繁部署 Gitee Pages 导致，可以稍后再触发自动部署。5Error: Deploy error occurred, please check your input gitee-repo.gitee-repo 参数格式如：doocs/leetcode，并且严格区分大小写，请准确填写。#106Error: Unknown error occurred in login method, resp: ...登录出现未知错误，请在 issues 区反馈。7Error: Rebuild page error, status code: xxx更新 Pages 时状态码异常，请尝试再次触发 Action 执行。也可能为 gitee pages 未初始化，第一次需要手动部署 gitee pages。8Error: HTTPSConnectionPool(host='gitee.com', port=443): Read timed out. (read timeout=6)Error: HTTPSConnectionPool(host='gitee.com', port=443): Max retries exceeded with url: /login (Caused by ConnectTimeoutError(&lt;urllib3.connection.HTTPSConnection object at 0x7f6c889d42e8&gt;, 'Connection to gitee.com timed out. (connect timeout=6)'))网络请求出错，请尝试 Re-run jobs 。#279git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rights and the repository exists..先尝试 Re-run job。#56若仍旧失败，可能是 SSH 公私钥配置有问题，或是使用了带密码的私钥，请参照上文提及的密钥配置步骤进行相应配置。#2910Hexo Gitee Pages 自动部署站点问题。@No5972 详细给出了一种解决方案。#3411"/root/.ssh/id_rsa": invalid format.操作系统环境不同，生成 ssh key 的方式可能有所差别，尝试添加 -m PEM 参数试试。#49.........

谁在使用

查看更多用户，请访问 链接

]]></content>
      <categories>
        <category>教程学习</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub开源合集</title>
    <url>/posts/2de2e452.html</url>
    <content><![CDATA[GitHub开源合集Table of Contents

GitHub开源合集
Table of Contents
miscellaneous
C#
JavaScript
Python
TypeScript
PHP
Go
CSS
Rust
Vue
Kotlin
PowerShell
Jupyter Notebook
Shell
C++
Swift
HTML
Dockerfile
Ruby
Clojure
Java
Dart
Nunjucks
C
SCSS
AutoHotkey
Rascal
Svelte
DIGITAL Command Language
Metal
Less


miscellaneous
jqueryscript/ChatGPT - Curated list of awesome libraries, extensions, tools, apps for ChatGPT.

linyuxuanlin/Wiki_MkDocs - 基于 MkDocs &amp; Material theme 的个人知识库

Correia-jpv/fucking-awesome-stock-resources - 🌇 A collection of links for free stock photography, video and Illustration websites. With repository stars⭐ and forks🍴

pkwenda/notion-site-doc - This is a document generated entirely based on notion-site

hsnadrs/forked—awesome-actions -

WashingMachine94/Youtube-Downloader - A free software to download Youtube videos or audio files. Ensures highest video and audio quality.

matchai/awesome-pinned-gists - 📌✨ A collection of awesome dynamic pinned gists for GitHub

MicroCBer/BetterCEF - 通用 CEF 注入器

shanghaobo/NeteaseCloudMusicDayActions - 网易云音乐日推自动创建新歌单，使用github的actions，定时自动同步，无需服务器。

athivvat/awesome-devtools - 😎 Awesome lists about developer tools.

neuralshare/neuralshare - NeuralShare aims to make any AI model accessible for free from any device, regardless of its hardware resources

Tptr-lateworker/RealESR_Tools - AI图片放大工具, 支持自动遍历文件夹, 支持批量处理.

dxtop/dxtop.github.io - VIPTV - 对标聚合海量电视， 直播，影视，短片，音乐，小说，壁纸等资源

xiaye13579/BBLL - 一个第三方哔哩哔哩TV和Pad客户端，A third-party bilibili client for TV &amp; Pad。

jahnli/awesome-flutter-plugins - 🔥🔥 收集好用的Flutter插件以便更效率的开发

HXHGTS/DeactivationIDM - IDM激活/反激活规则

SocialSisterYi/bilibili-API-collect - 哔哩哔哩-API收集整理【不断更新中….】

wsdjeg/hello-vim - Vim 中文资源整理

phith0n/Mind-Map - 各种安全相关思维导图整理收集

Cyril0563/lanjing_live - 🐋蓝鲸直播源-长期维护的电视直播源接口、TVBox、Pluto Player、猫影视TV、IPTV、BIUBIU TV、IPTV源、直播源、源享家、蓝鲸直播源、等影视及m3u8播放器通用接口都可观看

Bssn520/VideosShareByAliyun - 🤪动漫、电视剧、电影、纪录片分享by阿里云盘🫡

simevidas/web-dev-feeds - A collection of over 1000 RSS feeds for web developers, updated monthly

eastlakeside/awesome-productivity-cn - 绝妙的个人生产力（Awesome Productivity - Chinese version）

akira-cn/moyu - Github 摸鱼大全！

XTsat/rapid-upload-userscript-doc - 秒传链接提取脚本 - 文档&amp;教程

pashangshangpo/AI-Create-Video - AI批量文本一键生成短视频工具，傻瓜式图文生成视频软件，智能配图、智能配音、视频字幕。

whatis-geb/operation - 和运营相关的内容

MarkMindCkm/obsidian-markmind - A mind map, outline and pdf annotate tool for obsidian,It support mobile and desktop

juancarlospaco/awesome-streaming-tools - Awesome Streaming Tools

wekingchen/Rclone-Actions - 使用Actions每天自动调用Rclone同步云盘

Wpenga/webdav-teambition - teambition网盘的webdav协议开源实现

erbanku/awesome - 🌟 My Awesome Repositories List. Automatically updates by GitHub Actions on UTC 00:00 &amp; 16:00


C\
gaojinjin/ChatOpenAI - Unity 与ChatGPT  Open AI 的结合

jenius-apps/ambie - An app that uses white noise, nature sounds, and focus features to boost your productivity.

torum/BlogWrite - FeedDesk (feed reader) and BlogDesk (blogging client).

MeirinRuan/MyPSD2UI - 解析psd文件，生成ui配置

Godwhite001/lanzouyunjiexi - 解析蓝奏云外链-支持带密码解析直链、文件夹

HyPlayer/HyPlayer - 仅供学习交流使用 | 第三方网易云音乐播放器 | A Netease Cloud Music Player

LemonCodeTeam/Lemon-App - 一只在线QQ音乐播放器(PC端)

ichenpipi/unity-pipi-toolbox - 皮皮的 Unity 工具箱，提升日常工作效率，才能多摸鱼！

TGSAN/CMWTAT_Digital_Edition - CloudMoe Windows 10/11 Activation Toolkit get digital license, the best open source Win 10/11 activator in GitHub. GitHub 上最棒的开源 Win10/Win11 数字权利（数字许可证）激活工具！

xpnas/inotify - 一个简易消息通知系统，支持企业微信、电报机器人、邮件推送、内置BARK推送、钉钉群机器人、飞书群机器人，类似Server酱，支持私有Docker部署

OdysseusYuan/LKY_OfficeTools - 一键自动化 下载、安装、激活 Office 的利器。

moonheart/Clasharp - A clash GUI written in C#

Cnicehs/SharpBot - 一个基于百度网盘开放接口的转存机器人

jim60105/YoutubeLiveChatToDiscord - 將Youtube聊天室串流至Discord Webhook (.NET 6 Worker Service in Docker)

o7q/MediaDownloader - A GUI based tool that uses yt-dlp and FFmpeg to quickly download video and audio from virtually any website.

iccfish/ShimoExporter - 一键将个人石墨文档里的所有文档全部导出到本地


JavaScript
bestony/ChatGPT-Feishu - 给飞书准备的 ChatGPT 机器人

eidam/cf-workers-status-page - Monitor your websites, showcase status including daily history, and get Slack/Telegram/Discord notification whenever your website status changes. Using Cloudflare Workers, CRON Triggers, and KV storage.

ticks-tan/NavWebSite - 一个简单的导航网站，使用 Json 做数据源。

tabhub/rss-feeds - RSS feeds created/collected by TabHub.

buildspace/buildspace-projects - The home of our open-source projects.

itorr/anime-grid - 🤖「动画生涯个人喜好表生成器」

ChuksJoshuaa/OpenAI-Project - With an elegant user interface that resembles the ChatGPT app, communication with advanced GPT3 model API, and most importantly, the ability to ask the AI for help regarding JavaScript, React, or any other programming language, giving it code and translating it to another programming language, and much more

Aicirou/goindex-theme-acrou - Google-Drive-Directory-Index | Combining the power of Cloudflare Workers and Google Drive API will allow you to index your Google Drive files on the browser.

noobmaster432/khabrAI - An Artificial Intelligence React News Application that utilizes Alan AI for speech recognition, pulling data from News API and Material-UI for the user interface. The application enables users to control every aspect of the app using just their voice.

Samridhi-98/github-actions-visualizer - A web application capable of monitoring and visualizing GitHub actions metrics across the organization by using GitHub API.

ganeshrvel/openmtp - OpenMTP  - Advanced Android File Transfer Application for macOS

Vaayne/NotionAI - Unofficial NotionAI API

hugoalh/trigger-pipedream-workflow-ghaction - A GitHub Action to trigger Pipedream workflow via SDK or webhook.

Alamantus/FeatherWiki - A lightweight quine for simple, self-contained wikis [MIRROR]

lizhounet/wx-intimate-pro - 贴心小助手客户端,微信机器人, 群管理、头像处理、智能机器人对话、好友互动、定时任务，情侣每日说等功能的配置

ArsFy/tg_channel_to_flarum - 把你的 TG Channel 訊息推送到 Flarum

lgh06/web-page-monitor - Web Site Page Changes Monitor. 网站网页页面更新变更监控提醒。

uduakabaci/Paisley -

Binaryify/NeteaseCloudMusicApi - 网易云音乐 Node.js API service

gozaoo/BlurLyric - 高颜值，高性能的网易云音乐第三方音乐播放器

GitHub-ZC/wp_MusicApi - QQ音乐、酷我音乐、咪咕音乐、酷狗音乐，支持各大排行榜，会员音乐、搜索，QQ音乐逆向，QQ登录，QQ扫码登陆等等的 一款Node.js的音乐接口

LastStranger/unblock_music - 网易云音乐unblock Mac版本,零配置, 开箱即用,随关随停

mmdjiji/hexo-books - 为 Hexo 添加阅读页面，数据来自豆瓣读书

ZLENGANG/fuckCSDN - CSDN自动显示博客全文，去掉广告，重置布局，添加背景图片

DeltaFlyerW/DF_DanmakuExtension - 在B站网页端视频及番剧中添加来自动画疯,NicoNico,Twitch,Youtube的弹幕及评论

satopian/poti-kaini-zh-TW - 繪圖留言板PHPscript POTI-board EVO 繁體中文版本 PHP7.2-PHP8.2 https://paintbbs.sakura.ne.jp/poti/

georapbox/rss-feed-reader - A simple RSS Feed Reader based on web technologies (HTML, CSS, JavaScript)

solo1d/MAC_OS_System - MAC系统使用笔记

daodaolee/portal-widgets-extension - 一个极简风格的谷歌扩展标签页

Louiszhai/tool - 开发效率提升：Mac生产力工具链推荐

EmptyDreams/hexo-swpp - 为 Hexo 博客自动构建 ServiceWorker！

oCoke/uptime-action - 使用 GitHub Action 检测网站 SSL 证书与可访问性。

JimHans/live2d-kanban-desktop - 基于Electron制作的桌面看板娘，支持日程提醒、小窗模式、文字对话、网页搜索、本地moc模型加载与独立设置界面等  | An AI Based live2d Kanban for Desktop Users Using Electron

Apocalypsor/Formatted-RSS-to-Telegram - Highly customizable RSS to Telegram

kazuki-sf/YouTube_Summary_with_ChatGPT - YouTube Summary with ChatGPT is a simple Chrome Extension (manifest v3) that allows you to get both YouTube video transcripts and summary of the video with OpenAI’s ChatGPT AI technology.

feeddd/feeds - 免费的公众号 RSS，支持扩展任意 APP

CallBoson/ChatGPT-node - 微信公众号接入chatGpt

dengxiwang/funtabs - funtabs｜趣标签页，给你不一样的浏览器起始页，清新、简约、不简单！高度的可自定义操作，让您设置属于您专属的独特导航页面，是一款小众但又极其好用的导航网站！

lucaschn/fcgame - FC游戏在线玩，FC在线模拟器，NES在线模拟器，魂斗罗，超级玛丽，忍者龙剑传。可在手机电脑上在线玩FC游戏的网站，近乎完美的还原任天堂FC/NES原版ROM游戏的视频和声音。

jamesmortensen/archiver-for-google-keep - Scrapes notes and checklists from Google Keep™ and writes them out as JSON and markdown archive/backup files. This tool is not affiliated or endorsed by Google™. Google Keep™ is a trademark of Google.

eryajf/eryajf.github.io - 📝 大千世界，何其茫茫。谨此笔记，记录过往。凭君阅览，小站洛荒。如能收益，莫大奢望

Bleu404/PotplayerPanVideo - 利用第三方webdav网盘，实现在potplayer播放百度、迅雷、阿里云盘视频。

yylive/YYEVA - YYEVA（YY Effect Video Animate）是YYLive推出的一个开源的支持可插入动态元素的MP4动效播放器解决方案，包含设计资源输出的AE插件，客户端渲染引擎，在线预览工具。

MRHRTZ/Tiktok-Scraper-Without-Watermark - Download Video From Tiktok Without Watermark, With Watermark and Audio Only.

4ian/GDevelop - :video_game: Open-source, cross-platform game engine designed to be used by everyone.

baumannzone/baumannzone - 🤩 My custom README repo. It gets automatically updated with videos from Youtube and photos from Instagram.

panghujiajia/todayhub-web - react+tailwindcss实现的今日热榜

zltl/sguala - Linux system monitor without agent, and a ssh client.

llnancy/netease-music-box - 🎧 将你最近一周的网易云音乐的听歌记录更新到 Gist。本仓库新增了写入 Markdown 文件功能，可写入 GitHub 个人主页仓库。原仓库地址为 https://github.com/Leecason/netease-music-box

xoobom/wpspaster - 🚀 图文一键粘贴软件，支持从Word、WPS图文复制后一键粘贴到Tinymce、CKEditor、UEditor、KindEditor等富文本编辑器。支持Chrome、360、Edge、Firefox等现代浏览器。适用Window、Mac

fengshangsheng/nice-psdToHTML - .psd设计稿自动转react、vue、html + .png图片

ESHexoN/ESHexoN - 简洁、强大的 Hexo 在线编辑器 | A Powerful Manager For Hexo

neil-pan-s/text-video - 文字视频 - 抖音热门文字旋转效果 自动分割文本 随机文字大小、颜色、旋转方向

lylelove/blread - 🍵以哔哩哔哩专栏为后端进行Github Action自动部署的Hexo博客

alyssaxuu/omni - The all-in-one tool to supercharge your productivity ⌨️

rcy1314/GeekBot - 企业微信机器人主动推送获取信息脚本 | 每日自动推送天气、毒鸡汤、ONE图文、v2ex帖子 &amp; more..

imsyy/Snavigation - 【尚未完成】Snavigation 一个简约的起始页 | 支持自定义搜索引擎，自定义快捷方式，自定义壁纸以及数据备份

JimSunJing/ReviewHelper - A Github Action regulary query Notion Database &amp; send review reminder(email).

ycf1998/greeting-mail - 一个定时给你发问候邮件的网站。目前支持的问候服务有天气预报、舔狗日记、彩虹屁、网易云、朋友圈文案等

luizov/luizov-website - My personal website, built using Next.js/React/Notion API/Tailwind CSS.

xiulizhao/gettable - 获取word表格json数据元素，上传Word表格获取json数据

imageslr/mweb-themes - 30+ 款 Markdown 预览主题，Typo.css、Vue、Bear、飞书云文档等风格，适用于 MWeb、Typora。

opakholis/bookshelf - my personal bookshelf to improve reading experience. built with Notion as databases!


Python
yangchuansheng/DocsGPT - 基于 GPT 的聊天机器人，用于文档搜索和协助

Liner03/tiktok_monitor - 24h监控抖音主页情况变化并进行推送

Mayavi333/Tsunade-auto-filter - I am a auto filter bot with group manage functions.  star 🌟my repo🙏

LAION-AI/Open-Assistant - OpenAssistant is a chat-based assistant that understands tasks, can interact with third-party systems, and retrieve information dynamically to do so.

chidiwilliams/buzz - Buzz transcribes and translates audio offline on your personal computer. Powered by OpenAI’s Whisper.

delta1037/notion-export-client - Notion备份客户端工具，将指定Notion page单向转换为本地markdown文件 | Notion backup client, backup some page to markdown files self-struct

arc53/DocsGPT - GPT-powered chat for documentation search &amp; assistance.

dario-github/notion_auto_backup - Notion Regular Auto Backup to Google Drive

mggger/chatgpt-bot-dingding - Dingding bot with chatgpt

jiggy-ai/hn_summary - Summarizes top stories from Hacker News using a large language model and post them to a Telegram channel.

sachin0raon/Mirror2Gdrive - Hello there, 👽 I am a Telegram Bot that can mirror files to your Google Drive.

wzpan/wukong-robot - 🤖 wukong-robot 是一个简单、灵活、优雅的中文语音对话机器人/智能音箱项目，还可能是首个支持脑机交互的开源智能音箱项目。

babysor/MockingBird - 🚀AI拟声: 5秒内克隆您的声音并生成任意语音内容 Clone a voice in 5 seconds to generate arbitrary speech in real-time

Python3WebSpider/ProxyPool - An Efficient ProxyPool with Getter, Tester and Server

bulutthecat/TalkGPT - An advanced AI voice assistant built off of ChatGPT, carries support for opening web pages, executing commands, and even running python scripts through your voice!

nthack/Shadowrocket-ADBlock-Rules-Easy - 【每天更新】根据gfwlist及AdBlock生成的小火箭规则列表，支持自定义，保持每天更新；Shadowrocket Rules, using GFWList and ADblock List. Update every day, keep fresh and new.

Magisk-Modules-Alt-Repo/json - Magisk Manager JSON file generation for the repository list

caliwyr/free-proxy-list - 🔓 daily updated proxy list Python And NodeJS

skyplane-project/skyplane - 🔥 Blazing fast bulk data transfers between any cloud 🔥

madushadhanushka/github-readme - Collection of GitHub readme widgets

rcy1314/Rss-Translation - RSS翻译转换订阅

okatu-loli/github_to_feishu - 通过webhook将GitHub仓库的变动推送到飞书平台

Tippye/DuPanSync - ☁️百度网盘群文件同步工具

PanDaoxi/enjoy-static-website-generator - 静态下载站生成器

vas3k/infomate.club - RSS feed aggregator with collections and NLP article summarization

xiangsanliu/Rules - 🛫️ 🎵 Shadowrocket Rules: block ads, proxy, netease music unblock.

talengu/rss-translate - rss translate any to any

521xueweihan/GitHub520 - :kissing_heart: 让你“爱”上 GitHub，解决访问时图裂、加载慢的问题。（无需安装）

wangsrGit119/cartoon-media - image or video to cartoon| 图片视频卡通化

NangInShell/VSET - 基于Vapoursynth的图形化视频批量压制处理工具

HYK-X/PowerBox - 一个效率工具  基于Flet，实现番茄钟；todo；倒数日；webdav同步等基础功能

yzbtdiy/alist_batch_add - Alist批量添加阿里云盘链接

hunshcn/gh-proxy - github release、archive以及项目文件的加速项目

BlinkDL/AI-Writer - AI 写小说，生成玄幻和言情网文等等。中文预训练生成模型。采用我的 RWKV 模型，类似 GPT-2 。AI写作。RWKV for Chinese novel generation.

ngc660sec/NGCBot - 一个基于✨HOOK机制的微信机器人，支持🌱安全新闻定时推送【FreeBuf，先知，安全客，奇安信攻防社区】，👯后缀名查询，⚡备案查询，⚡手机号归属地查询，⚡WHOIS信息查询，🎉星座查询，⚡天气查询，🌱摸鱼日历⚡微步威胁情报查询， 🐛美女视频，⚡美女图片，👯帮助菜单。📫 支持积分功能，😄自定义程度丰富，小白也可轻松上手！

DeEpinGh0st/JetbrainsServerFinder - 一个利用Shodan搜索引擎查询Jetbrains系列产品激活服务器的网页端工具

biancangming/wtv - 解决电脑、手机看电视直播的苦恼，收集各种直播源，电视直播网站

TheLovinator1/discord-twitter-webhooks - 🤖Stream tweets to Discord

x7peeps/Rss2Dingtalk-LTS - A Service for feed Rss to Dingtalk Webhook

Elxss/Epic-Free-Games-Alert - Epic Games Free Games Script that send a Webhook when a new Free Games is Available

lyy289065406/steam-discount - steam 特惠游戏榜单（自动刷新）

9bie/rsspusher - 推送rss到telegram和web

Anjok07/ultimatevocalremovergui -  GUI for a Vocal Remover that uses Deep Neural Networks.

jheddings/notes2notion - Import content from Apple Notes into Notion.

jiabh/auto-unlock-music - 自动解锁各音乐平台下载的加密音乐

EssayKillerBrain/WriteGPT - 基于开源GPT2.0的初代创作型人工智能 | 可扩展、可进化

AndersonBY/AIGuiChu - 用AI帮忙制作鬼畜类视频

studycell/Simple_faceswap - 本项目用于对一段连续视频进行AI智能识别，并将指定人脸进行替换。

TakWolf/ark-pixel-font - Open source Pan-CJK pixel font / 开源的泛中日韩像素字体

SokunHeng/DownEdit - Video editor and video downloader in one application. Bulk video downloader for Tiktok and Douyin no watermark, more to be updated.

acheong08/ChatGPT - Reverse engineered ChatGPT API

bupticybee/ChineseAiDungeonChatGPT - 中文版的ai地牢，直接使用的openai的ChatGPT api作为讲故事的模型。

icue/DoubanImageWall - 生成豆瓣电影海报墙/音乐专辑封面墙/图书封面墙。

frankwuzp/coursera-host - 🚀 Auto-Hosts for Coursera website &amp; video. 自动获取 host 的 IP 源，加速访问 Coursera 网站，在墙内也能愉快学习！（每天更新）

jina-ai/now - 🧞 No-code tool for creating a neural search solution in minutes

marqo-ai/marqo - Tensor search for humans.

xenova/chat-downloader - A simple tool used to retrieve chat messages from livestreams, videos, clips and past broadcasts. No authentication needed!

LuoXishuang0712/openpose_motion_rebuild - build a 3d pose from two 2d motion photos

Johnserf-Seed/TikTokDownload - 抖音去水印批量下载用户主页作品、喜欢、图文、音频

kaminolee/RsshubList -

auqhjjqdo/LiveRecorder - 基于Streamlink的直播全自动录播工具，已支持Bilibili、YouTube、Twitch、TwitCasting

btc-99/autotune_remix - 一键生成鬼畜音 mad 视频

rcy1314/notification-action - 企业微信定期发送固定通知

guangzhengli/wecom-notification-action - 企业微信机器人消息发送，支持内容自定义，配置模版

guangzhengli/notification-action-template - A github action template for notification action.

RWoxiN/AsoulNotificationPush - A-SOUL 动态、直播状态获取，并推送到企业微信中。

tbsmcd/notion2hugo - A document written in Notion that is converted to hugo. However, it is currently dedicated to the author’s personal use.

gaoyunzhi/channel_push - Telegram channel/group recommendation bot

HorseSword/tagdox - Tagdox（标签文库）是 python + tkinter + pyinstaller 开发实现的文件标签化管理工具。

TerraceCN/TGRSS - Push RSS Feed through Telegram

cancundeyingzi/Compressed-packet-camouflage - 将压缩包伪装成其他文件,绕过无法上传/分享的限制


TypeScript
bytemate/chatapi-single - Simple and powerful ChatGPT-API-Server

Thecosy/chatgpt-helper -

automatisch/automatisch - The open source Zapier alternative. Build workflow automation without spending time and money.

DukeLuo/wai - 一款可以预防颈椎病的新标签页扩展

shahednasser/cross-post-notion - Integration to cross post articles from Notion across platforms

mymusise/vscode-writer-assistant - 基于生成模型的vscode中文AI写作助手插件

timkmecl/codegpt - A VSCode extension that allows you to use GPT3 inside the IDE

wardvisual/engine-warvil - A comprehensive language tool that can answer questions, generate code, titles, and grammatically correct text, as well as paraphrase, summarize, translate, explain programming code, evaluate mathematical expressions, and create study notes.

forrestchang/readpilot - Read Pilot analyzes online articles and generate Q\&amp;A cards for you. Powered by OpenAI &amp; Next.js.

gitbrent/dream-journal-app - Dream Journal that uses Google Drive

spencerwooo/substats - ( ｀д′) how many followers do i have? how many!

Cside/chrome-notion-search - Search Notion pages on the popup

JonathanWbn/notion-tools - A set of tools to automate things around Notion.

LokerL/tts-vue - 🎤 微软语音合成工具，使用 Electron + Vue + ElementPlus + Vite 构建。

funnyzak/tts-now - 跨平台基于云平台(阿里云、讯飞等)语音合成 API 的文字转语音助手。支持单文本快速合成和批量合成。支持windows、macOS、Linux。

and-action/and-action - Monitoring your GitHub Actions Workflows in your web browser.

GalvinGao/NeteaseRecommendationSync - 同步网易云音乐每日推荐与私人雷达至 Spotify；反向同步 Spotify 喜欢的音乐至网易云音乐（用于持续优化网易云音乐推荐质量）

otelo2/Obsidian-AI - Free GPT powered assistant for Obsidian “inspired by” Notion AI

ahonn/logseq-plugin-weread-importer - 📖 一个用于将微信读书笔记导入到 Logseq 的插件 / A plugin for import WeRead notes into Logseq

zhengbangbo/chat-simplifier - Simplify your chat content in seconds (by OpenAI)

4gray/iptvnator - :tv: Cross-platform IPTV player application with multiple features, such as support of m3u and m3u8 playlists, favorites, TV guide, TV archive/catchup and more.

AbduazizZiyodov/docker-dashboard - 🐳 Simple lightweight GUI application for working with Docker

Kyusung4698/overwolf-poe-convas - A scheduled cron task which fetches posts from a convas.io board and sends updates to a Discord webhook.

SuCicada/su-action-webhook - Posts github action notification to an unit endpoint with your own custom template. SSR

northwang-lucky/chatbot-webhook-client - Webhook calls of custom BOT that support DingTalk, Lark and WeCom.

GetMural/Mural - Mural is a tool for visual storytelling. It’s a program that helps you sequence your visual story, and then generates everything needed for that story to be displayed on most modern web browsers and served from any web server.

flowershow/flowershow - Publish your digital garden, docs or any markdown based site easily, quickly and elegantly

BeiyanYunyi/HexoSharp - 可独立部署也可托管在 Cloudflare 上的现代化静态博客管理器，功能：文章管理、图片管理、反代图床、访客统计、匿名评论、博主说说

linfaxin/MBBS - 🔥轻量级全功能论坛、移动/PC双端适配、无依赖一键启动、技术栈 express + sqlite + react（MBBS论坛托管服务开源版）

Privoce/vocechat-web - VoceChat Web App

Avinier/E-minor - An NFT Marketplace for Music Lovers

snuffyDev/Beatbump - Alternative YouTube Music frontend built with Svelte/SvelteKit 🎧

wangrongding/wallpaper-box - 🏞️ 一个桌面壁纸客户端，可以设置静态 / 动态壁纸，集成了 RunCat 的功能。(A desktop wallpaper client to set static / dynamic wallpapers, integrated with RunCat’s features.)

YunYouJun/valaxy - 🌌 Next Generation Static Blog Framework (Beta) 下一代静态博客框架（支持页面/配置热重载）

maotoumao/MusicFree - 插件化、定制化、无广告的免费音乐播放器

Lu7fer/Dplayer4Halo - 为Halo博客文章添加视频插件

xushengfeng/xlinkote - 无限画布 白板笔记 知识管理

screendriver/ifttt-action - ⚡️ GitHub action that triggers an IFTTT webhooks event

shidenggui/bloghub - 一群自由而有趣的灵魂，终将在此相遇 | 独立个人博客推荐导航

CrazyDiablo/boluo-todo - 像素风格的todo

harryzcy/nodop - Notion Database Operator

alibaba/lowcode-engine - An enterprise-class low-code technology stack with scale-out design / 一套面向扩展设计的企业级低代码技术体系

Kaiyiwing/qwerty-learner - 为键盘工作者设计的单词记忆与英语肌肉记忆锻炼软件 / Words learning and English muscle memory training software designed for keyboard workers

sillsdev/docu-notion - Download Notion pages as markdown and image files, preserving hierarchy and enabling workflow properties. Works with Docusaurus.

brandon-schabel/remix-notion-blog - Lightweight Remix Blog powered by Notion API.

ryannono/Notion-Todoist-Integration - A Node JS web-service/integration that automates and syncs a notion database and its pages with the todoist  app and its tasks

shiyiya/oplayer - :zap: Another HTM5 video player.

SettingDust/obsidian-web-clipper - Clip web page content to Obsidian as Markdown

camellia-app/unsplash-bridge - Cloudflare Worker that provides API for picking random photo from Unsplash collection.

lmcsu/qq-neural-anime-tg - A Telegram bot that converts your photos to 2D anime art via the new AI made by QQ

osmoscraft/osmosfeed - Turn GitHub into an RSS reader

WhiteMinds/LiveAutoRecord - 基于 Electron 的多平台直播自动录制软件

qianjiachun/douyu-monitor - 网页端跨平台斗鱼弹幕助手

damoeb/rss-proxy - RSS-proxy allows you to do create an RSS or ATOM feed of almost any website, just by analyzing just the static HTML structure.

MannyCooper/anzifan.com - Personal blog powered by Notion official API + Next.JS + WindiCSS!

upleveled/notion-backup - Export Notion pages and subpages to a GitHub repo on a schedule (eg. to be used as a scheduled backup)

suemor233/search-start-page - 🔍  一个简单的搜索起始页

Tualin14/OneSS -

fky2015/nexon - Nexon is a Notion-powered blog template built with the Next.js and Vercel. It’s a modified version of https://github.com/transitive-bullshit/nextjs-notion-starter-kit with a special focus on the better blogging experience.


PHP
GraphQLAPI/graphql-api-for-wp - [READ ONLY] GraphQL API for WordPress

wxilejun/Yiso - Yiso搜索引擎开源

Goomento/PageBuilder - Goomento - The Free Magento Page Builder Extension, that allows you to create unique Magento websites using advanced animations, custom CSS, responsive designs, and more, by performing simple actions such as drag and drop.

PGYER/codefever - CodeFever 是完全免费开源的 Git 代码托管服务，支持一行命令安装到自己服务器！CodeFever Community Edition (A Self-hosted Git Services)!

zhuchunshu/SForum - SForum是一个php开发的论坛程序,Multifunctional Forum Program，(原super-forum)

ethanzhao2001/Mailer-Typecho - Typecho上极简的邮件推送插件

guanguans/notify - 推送通知 sdk(Bark、Chanify、钉钉群机器人、Discord、邮件、飞书群机器人、Gitter、Google Chat、iGot、Logger、Mattermost、Microsoft Teams、Now Push、Ntfy、PushBack、Push、PushDeer、Pushover、PushPlus、QQ 频道机器人、Rocket Chat、Server 酱、Showdoc Push、Slack、Telegram、Webhook、企业微信群机器人、息知、一封传话、Zulip)。

zhufenghua1998/bp3 - bp3是一款使用php开发的百度网盘接口程序，百度网盘目录搜索引擎，文件展示搜索目录树，在线目录搜索索引，百度网盘文件下载（含直链）等。

HurryBy/lanzou-directlink - 蓝奏云直链，蓝奏云解析，蓝奏云解析API，蓝奏云带密码解析，蓝奏云文件夹分享解析

wpbkj/moyu_php - 摸鱼办是一个具有娱乐调侃性质的虚拟机构。摸鱼办提醒则提醒各位摸鱼人各个假期何时到来，为摸鱼人种下希望（狗头）。项目整体由PHP构建。

yeuxuan/ccproxy_kami - ccproxy卡密管理系统 生成卡密 激活 用户在线管理 socket 通讯

teakong/liuyan-weixin - 将网站或者博客留言推送到微信

aoaostar/toolbox - 🚀傲星工具箱，一个在线工具箱

pplulee/appleid_auto - 基于密保问题，自动解锁Apple ID，自动关闭双重认证，提供前端账号展示，支持多账号

luolongfei/freenom - Freenom 域名自动续期。Freenom domain name renews automatically.

pmhw/telegram-bot - Tg机器人，自动回复自定义消息回复，私聊回复以及群聊回复，可以进行二次开发，希望你做出更优质的东西，记得@我


Go
Jeadie/notion-rss - Get RSS feeds in notion.so

daichirata/gcsproxy - Reverse proxy for Google Cloud Storage

ginuerzh/gost - GO Simple Tunnel - a simple tunnel written in golang

autobrr/autobrr - Automation for downloads.

aalu1418/rss - Simple script + GHA to aggregate RSS feeds

paescuj/universe - My god, it’s full of stars

lrqtech/smya-go - 神秘鸭使你的语音助手可用来控制PC、笔记本、树莓派或其他物联网设备

houko/wechatgpt - wechatgpt golang版 chatgpt机器人(可docker部署)，目前支持wechat，telegram

grokify/ringcentral-permahooks - Webhook proxy to turn RingCentral webhooks into permanent webhooks for use with services like Zapier Instant Triggers.

tarampampam/webhook-tester - 🔭 The powerful tool to test webhooks and not only

xlzy520/typora-plugin-bilibili - Typora粘贴图片自动上传到Bilibili图床，也可以自定义修改成任意其他图床接口。使用教程：https://b23.tv/urxCc3

CatchZeng/feishu - feishu 是飞书机器人的 go 实现。支持 Docker、Jenkinsfile、命令行模式，module 模式；支持加签安全设置、链式语法创建消息；支持文本（text）、富文本（post）、图片（image）、群名片（share_chat）、消息卡片（interactive）消息类型。

jerryshell/my-flomo-server - 可以自托管的想法记录及回顾服务，开源、免费、简单、专注于核心功能

chengkenlee/wenews - 微语简报推送到微信群

lenye/pmsg - 发送消息的小工具：企业微信群机器人消息，钉钉自定义机器人消息，飞书自定义机器人消息，Slack bot，微信消息，微信客服消息，企业微信消息，企业微信客服消息

songquanpeng/message-pusher - 搭建专属于你的消息推送服务，支持多种消息推送方式，支持 Markdown，仅单可执行文件，开箱即用

kenellorando/cadence - All-in-one web radio software suite. Provides music search, request, artwork, UI, and real-time stream information.

yqchilde/wxbot - ☝🏻 一个好玩的个人微信机器人项目，插件式功能，查天气，ChatGPT聊天，设置定时任务，公众号监控转发…

qydysky/bili_danmu - bili直播、弹幕录制回放工具 go1.19+

aldinokemal/go-whatsapp-web-multidevice - API for Whatsapp Web MultiDevice Version, Support UI &amp; Webhook

echosoar/news - 全网新闻热点每小时自动聚合排序，基于SimHash算法聚合相似内容

irth/tg2fedi - A bot to repost messages from a Telegram channel to a Mastodon account.

LinuxSuRen/yaml-readme - A helper to generate the READE file automatically from YAML-based metadata files.

os7blue/dobby - 钉钉，飞书，企业微信，email，以及公众号消息推送服务

aixinge/aixinge - The backend code of AiXinGe

Sunbalcony/note - note是一款优美，轻便的文档共享工具，支持一键分享，多人协作在线编辑，好用到上天，网页打代码不是梦！

MiaoMint/g8ink - 一个短链接生成程序

shenweiyan/WebStack-Hugo - WebStack 网址导航 Hugo 主题，无需服务器，支持导航一键配置的纯静态网址导航网站。


CSS
guaguaguaxia/weekly_report -

ycjcl868/readme-gpt - Generate your Github Readme with OpenAI and Vercel Edge Functions.

sunyctf/css-effects - ⭐ 前端css特效，持续更新。喜欢的话就Star一下吧！

dragonjie233/Message - 留言条 · 就留下一句你想说的话吧

Pings1031/nimingly - 一个免费的匿名留言程序，可做匿名留言树洞，对接公众号做 匿名留言送信邮局

bradtraversy/nodejs-openai-image - Web app that uses Node.js and OpenAI to generate images

xiangjianan/lks -

ZxBing0066/pixel-converter - 图片转像素风，可生成 box-shadow 像素风图片

emperinter/auto-generate-navigation - A plugin which  can generate a navigation  catalogue on your WordPress post!

mizoreyo/hexo-theme-insnow - insnow, a simple hexo theme.

zkeq/news - 前后端均基于 vercel 的轻量级每日早报项目，支持一键部署，支持部署至服务器。后端由 FastAPI + BeautifulSoup 实现。

Tokinx/Wing - Simple, smooth, data-driven, responsive WordPress theme

mgilangjanuar/teledrive - The Google Drive/OneDrive/etc alternative using Telegram API

qumuchegi/notion-docsify - a tool builds doc from notion pages, backup your notion data


Rust
qdrant/qdrant - Qdrant - Vector Search Engine and Database for the next generation of AI applications. Also available in the cloud https://qdrant.to/cloud

MicroCBer/BetterCEF-Installer - 一键安装 BetterCEF

morphy2k/rss-forwarder - Checks RSS feeds for new entries and forwards them

mbround18/redirect - Simple redirection tool! Ready to use, docker capable, Kubernetes friendly, any Linux based env ready!

tw93/Pake - 🤱🏻 Turn any webpage into a desktop app with Rust.  🤱🏻 很简单的用 Rust 打包网页生成很小的桌面 App

limitcool/bilistream - B站直播转播工具,,一键转播Twitch,Youtube(支持youtube预告类型直播自动转播)

YangchenYe323/Danmuji - :hamster: 用Rust + React编写的Bilibili弹幕姬，感谢礼物，自动回复，定时任务弹幕助手


Vue
lxchinesszz/dev-springlearn2 - 极客导航2.0

HanaYabuki/otto-hzys - 电棍otto语音活字印刷生成

ybw0014/guizhan-builds - 由 Github Actions + Vue2 + Nuxt.js + Github Pages 驱动的构建页面, 支持 Maven, Gradle 项目构建

4350pChris/slack-vuesualizer - Display your Slack export and search through messages!

citrtoj/dirty-meter - Vue app that calculates the dirtiness of (mostly) any song’s lyrics

debug16/LuoYiMusic - 基于 vue3 + vite + pinia + vue-router4 实现的一个简约美观的音乐播放平台，使用 pake 打包桌面端，只有1M+，欢迎大家体验和star

imsyy/SPlayer - 🎉 一个简约的在线音乐播放器，项目尚未完成，不保证可用性

a7650/h5-editor - 📕h5可视化编辑器，支持添加图片/文本/形状等，拥有图层/参考线/标尺/自动吸附对齐等功能

xp-bear/note_wall - 留言墙功能可以让用户在网站上发表留言，以便其他用户可以看到并回复。它可以帮助网站的用户更好地交流，提高网站的互动性，增加用户体验。使用技术栈: vue3+express+mysql,觉得还可以的话,可以给一个star~

one-among-us/tg-blog - Display offline telegram channel data like a blog

FTLIKON/EachStar - 🌟在线互助Star社区🌟，基于 Github API 和 Element Plus 开发，致力于帮助开源项目积累初始影响力！

canwdev/page-craft-vite - Web page rapid generation tool inspired by Minecraft | 网页快速设计生成工具

fyl080801/vjdesign - Vue 界面可视化设计器，支持任何 html 标签以及项目中引用的组件，可实现仅通过配置文件就能增加支持的组件和组件属性

Thecosy/IceCMS - 🌈冰激凌内容管理系统🍦,实现MacWK资源站，社区图片视频圈子CMS，支持网页端移动端小程序🌟适合做 资讯商城，社区论坛，聊天交友 社区，博客，圈子，论坛，图片，视频，社交。

chrisj74/vue-rss-blog - An embeddable to pull an RSS feed into your website

Edward-Brock/Booop-Navigation-Next - ✨ 网站导航练习项目

UniScratch/gitscratch-frontend - GitScratch 社区前端

fayazara/feedful - A fast, jamstack, opinionated rss reader for tech news.


Kotlin
Ashinch/ReadYou - An Android RSS reader presented in Material You style.

mumu12641/Lark - Your NetEase Cloud music

pppscn/SmsForwarder - 短信转发器——监控Android手机短信、来电、APP通知，并根据指定规则转发到其他手机：钉钉群自定义机器人、钉钉企业内机器人、企业微信群机器人、飞书机器人、企业微信应用消息、邮箱、bark、webhook、Telegram机器人、Server酱、PushPlus、手机短信等。包括主动控制服务端与客户端，让你轻松远程发短信、查短信、查通话、查话簿、查电量等。（V3.0 新增）PS.这个APK主要是学习与自用，如有BUG请提ISSUE，同时欢迎大家提PR指正

heyanLE/EasyBangumi - 纯纯看番，使用 Compose 开发的看番软件，支持多番剧源

avatsav/linkding-apps - [WIP] Native apps for Linkding self-hosted bookmark service

gyakkun/qq-mht2html - 转换QQ导出的MHT文件到HTML和图片文件, 支持按日期、行数自动分页, 支持多线程, 支持150G+文件


PowerShell
marticliment/WingetUI - WingetUI: a graphical user interface for Winget and Scoop

SummonHIM/Bestdori-Music-Downloader - A script that automatically downloads music from Bestdori and fills in the music information(Song title, Artist, Album, Composer and Front cover)


Jupyter Notebook
Conchylicultor/automations - Automated scripts for APIs

dmarx/video-killed-the-radio-star - Notebook and tools for end-to-end automation of music video production with generative AI

invoke-ai/InvokeAI - InvokeAI is a leading creative engine for Stable Diffusion models, empowering professionals, artists, and enthusiasts to generate and create visual media using the latest AI-driven technologies. The solution offers an industry leading WebUI, supports terminal use through a CLI, and serves as the foundation for multiple commercial products.

Sahilvohra58/ai-subtitle-video-editor - A complete microservice that takes a video from the user, generates its subtitles, asks the user to edit them and reproduces the video with those subtitles as the part of the video.

Baiyuetribe/paper2gui - Convert AI papers to GUI，Make it easy and convenient for everyone to use artificial intelligence technology。让每个人都简单方便的使用前沿人工智能技术


Shell
lingeringsound/10007_auto - ZH: 自动更新去广告的hosts ，En: Automatically update ad hosts

aviaryan/awesome-no-login-web-apps - 🚀 Awesome (free) web apps that work without login

RightToPrivacy/snowflake-tor-service - Automated 🧅 Tor ❄️ Snowflake Proxy (any Linux device). Run install.sh and you have a new Snowflake ProxyService  (every boot)

lyy289065406/mstream-docker - docker 一键部署 mstream 私人云音乐

Jason6111/OpenWrt_Personal - Jason6111’s OpenWrt source 在线集成自动编译环境

xs-web-lhdd/vitepress-template - vitepress模板，直接开箱即用，不用再配置导航侧边栏等内容，直接写内容即可


C++
newsboat/newsboat - An RSS/Atom feed reader for text terminals

FrzMtrsprt/QtUnblockNeteaseMusic - A desktop client for UnblockNeteaseMusic, made with Qt.

MucheXD/CloudMusicDownloader - 网易云音乐在线下载器&amp;缓存转换器 / 本程序允许你批量下载网易云音乐上几乎所有的歌曲，你可以在程序内搜索并下载几乎所有非付费歌曲。同时，你也可以转换网易云音乐客户端生成的缓存文件 (.uc/.uc!) ，将你播放列表中的文件保存到本地。

liangxiongsl/Netease-url-crawling - 网易云音乐直链批量获取

itisyang/playerdemo - 一个视频播放器，开源版 potplayer ，用于总结播放器开发技术。

ilovecplusplus97/MahiroBox - 一款绪山真寻的键盘监控小软件

xfangfang/wiliwili - 专为手柄控制设计的第三方跨平台B站客户端，目前可以运行在PC全平台和Nintendo Switch上  | Yet another Bilibili client


Swift
Mnpn/Taberu - A simple RSS feed parser for macOS which lives in the menu bar

HTML
phaze-the-dumb/status - A status page built on github actions

orelmizrahii/Web-AI-Archive - AI Archive is a GitHub project dedicated to collecting and preserving data about artificial intelligence (AI) systems. Our mission is to create a comprehensive archive of AI systems and the data they generate, providing a valuable resource for researchers and developers.

qdlmcfresh/GuilloArchive - Archiving @GuillotineTea on Twitter

YangguangZhou/Cards - 个人名片 Cards

gh0stkey/gh0stkey.github.io - 个人博客 https://gh0st.cn 模版来自：https://github.com/heiswayi/the-plain 在原基础上增加了分页、网易云音乐播放器、图片放大查看等功能（做了一些排版细节上的调整）

dontpanic92/embedded-netease-music-player - 网易云音乐外链播放器 - Embed a netease music player into your web page

xiaowansm5/Onlinemusic - 在线音乐播放器

evan-gyy/XQFTools - XQF办公自动化小工具

moyuban/moyuban.github.io - 摸鱼办

sangyuxiaowu/HackerScreenSaver - .NET develops a screen saver. .NET 开发一款屏幕保护程序，Hacker Screen Saver 是一款 .NET 设计的屏幕保护程序，可以显示 HTML 页面，你可以将黑客模拟器的网页，摸鱼时需要的windows更新，或者爱心代码网页设置为你的 Windows 电脑屏保。

cf-pages/Telegraph-Image - Free Image Hosting solution, Flickr/imgur alternative, make it easy for users to share their images. Using Cloudflare Pages and Telegraph.

tjy-gitnub/win12 - Windows 12 网页版，在线体验，纯html/css/js静态网页 点击下面的链接在线体验

songquanpeng/go-file - 基于 Go 的文件分享工具，仅单可执行文件，开箱即用，内置图床和视频播放页面. File sharing tool based on Go.

qinlili23333/ctfileGet - 获取城通网盘一次性直连地址

wxxxcxx/ms-ra-forwarder - 免费的在线文本转语音API

JingShing/Pixel-Art-Filter-Web - A web version pixel art filter can render image, gif and video. https://pixel.jingshing.com/

ZutJoe/Koala_hacker_news - Koala hacker news 周报内容 每周二0点左右自动更新

LiuYuYang01/BookMark - BookMark 是一款轻量、简洁雅观的书签导航项目 你可以将它设置为你的浏览器主页 告别杂乱无章的浏览器书签栏。相信你会喜欢它的! 🎉

asksowhat/ownrss - 一个极简的RSS在线浏览工具

WangGuibin/weather-action - Github action自动化每天早上自动推送新闻简报  配合快捷指令使用https://www.icloud.com/shortcuts/1a05b4fcde9743fab4ef8aa7a8908f80


Dockerfile
appleboy/telegram-action - GitHub Action that sends a Telegram message.

appotry/docker-hexo - hexo docker 一键部署环境。增加CJK中国环境适配和常用软件，hexo 插件等易用设置。开箱即用。

jaywcjlove/reference - 为开发人员分享快速参考备忘清单(速查表)


Ruby
freeCodeCamp/devdocs - API Documentation Browser

Clojure
Minoro-Ltd/kleene_ai.doctor - The base for a github action that creates notion documentation based on markdown files in your repo

Java
LoveLifeLoveCat/WechatBackupNoRoot - 免ROOT微信聊天数据备份/导出工具

Hello-hao/Tbed - Hellohao图床 | 图像托管 | 云相册，分享/水印、存储源分发、图像管理、前后端分离。https://tbed.hellohao.cn

Cruii/bilibili-helper-hub - 🚀 Bilibili每日任务托管平台

Clay-Ferguson/quantizr - Quanta is an open-source Social Media (Fediverse) platform for wikis, micro-blogging, collaboration, publishing, secure messaging, file sharing, and video/audio sharing. Browser-based, and written in Java and TypeScript.

april-projects/april-zh-hotspot-push - 知乎热点推送

tonydon140/star-movie - 星星同步播放器，一款可以同步播放视频的软件。具有一起看电影、同步播放、弹幕互动等功能。

ZhongFuCheng3y/austin - 消息推送平台:fire:推送下发【邮件】【短信】【微信服务号】【微信小程序】【企业微信】【钉钉】等消息类型。

jeequan/jeepay - Jeepay是一套适合互联网企业使用的开源支付系统，支持多渠道服务商和普通商户模式。已对接微信支付，支付宝，云闪付官方接口，支持聚合码支付。

Jarrettluo/document-sharing-site - “全文档”(All Docs)，Word, Excel, PPT, PDF, Pic等文档在线预览、存储、共享的工具，并且支持全文搜索的所有的文档信息。

MUedsa/BilibiliLiveTV - Bilibili Live APP for Android TV

FlyRenxing/RenxingPush - 任性推是一个消息推送机器人，用来通知自己消息的免费服务，目前支持QQ、Telegram两个平台。通过调用API接口，实现机器人给你发送消息的功能。通俗易懂点就是有什么重要通知需要及时知道，可以让任性推第一时间给你发消息。


Dart
maheshmnj/pastelog - PasteLog is a simple, fast, and powerful pastebin. It is powered by firebase in the backend. It allows you to publish your logs, and access them from anywhere and any device via a unique link.

Nunjucks
Uvacoder/productnews -

C
nesbox/TIC-80 - TIC-80 is a fantasy computer for making, playing and sharing tiny games.

Kingtous/Fclash - Clash fronted client by Flutter (Linux[arm64|x86_64]/Windows/MacOS supported). 🐱 支持Linux[arm64|x86_64]/Windows/MacOS的更好的Clash客户端，支持自动设置代理，兼容RULE-SET特性。


SCSS
nostalgic-css/NES.css - NES-style CSS Framework | ファミコン風CSSフレームワーク

AutoHotkey
no5ix/sux - An alternative to Alfred+Wox+Listary+OneQuick+CapslockPlus.一个只有2M+大小的强大效率工具

shizengsong/taskSwitcher - 改进windows任务窗口操作，鼠标移动到屏幕右下角，即可启动选择任务。详见文件

dbgba/PCtoiOSClipboardSync - 电脑与iOS互相剪贴板同步 Computer and iOS clipboard sync with each other


Rascal
y1yang0/hosts - :statue_of_liberty:最新可用的google hosts文件。国内镜像：

Svelte
beromir/Servas - A self-hosted bookmark management tool.

DIGITAL Command Language
RenaLio/Mux2sub - 自动获取订阅📋，订阅定时检查🚀，存放订阅😀

Metal
yangKJ/Harbeth - Metal API for GPU accelerated Image and Video and Camera filter framework. Support macOS &amp; iOS. 🎨 图像、视频、相机滤镜框架

Less
MaLuns/hexo-theme-text - 一款简约、轻量的Hexo主题

By rcy1314/some-starts

使用 GitHub Pages 快速生成一个项目介绍页：https://pages.github.com/ 网页内容来自我们在仓库中书写的 Markdown 文档
浏览器插件「GitHub 加速」：提高中国开发者访问 GitHub 的速度，提升克隆 Git 仓库的速度，提升下载 release 包的下载速度。 https://chrome.google.com/webstore/detail/github加速/mfnkflidjnladnkldfonnaicljppahpg/related?hl=zh-CN
GitHub 加速下载：http://toolwa.com/github/ 输入 GitHub 项目链接，就能下载仓库的所有内容
快速入门 GitHub：https://xie.infoq.cn/article/8600676300c46bea520c6a896  
使用梯子更快地打开 GitHub：https://mp.weixin.qq.com/s/hmdzbFsmP1Re2bpO47insQ 
GitHub 个人页美化：https://mp.weixin.qq.com/s/kYx3Txa3mMzpmY8fAj5UkQ 
GitHub Proxy：GitHub 文件 , Releases , archive , gist , raw.githubusercontent.com文件代理加速下载服务 https://ghproxy.com/ 输入 GitHub 项目链接就可以下载
好的 GitHub 项目
Mac 上开源免费的分屏工具 Rectangle：https://github.com/rxhanson/Rectangle  
GitHub 中文排行榜：https://github.com/kon9chunkit/GitHub-Chinese-Top-Charts 帮你发现高分优秀的中文项目  
下载B站视频的命令行工具 BBDown：https://github.com/nilaoda/BBDown  
用 Swift 语言来搭建博客 Publish：https://github.com/fatbobman/PublishThemeForFatbobmanBlog 博客效果见：https://www.fatbobman.com/ 
Hexo 博客主题：
Butterfly https://github.com/jerryc127/hexo-theme-butterfly  #Hexo
Hexo 主题 hexo-theme-sagiri：https://github.com/DIYgod/hexo-theme-sagiri 由 RSSHub 的作者 @DIYgod 开发   主题很二次元，效果见：https://diygod.me/
计算机算法学习、求职刷题：https://github.com/chefyuan/algorithm-base  
汇总各大互联网公司容易考察的高频 leetcode 题目：https://codetop.cc/home 项目地址：https://github.com/afatcoder/LeetcodeTop
解锁网易云音乐客户端变灰歌曲：https://github.com/meng-chuan/Unlock-netease-cloud-music  
类似的项目：https://github.com/nondanee/UnblockNeteaseMusic 
将点赞的 Twitter 动态发送到 Telegram：https://github.com/NeverBehave/Tweet2Telegram 需要申请 Twitter API，使用 GitHub Actions 自动实现 具体实现的教程：https://blog.never.pet/2021/01/08/tweet-to-telegram 
CSS 框架 Tailwindcss：https://github.com/tailwindlabs/tailwindcss   
苹果电脑版微信消息防撤回插件 https://github.com/Sunnyyoung/WeChatTweak-macOS  （慎用，可能会被封号）
解除海外访问优酷和土豆的限制 - #浏览器插件 Unblock-Youku：https://github.com/uku/Unblock-Youku
生成 Wifi 二维码「Wificard」：https://github.com/bndw/wifi-card  扫描二维码就能连上 Wifi 工具的网址：https://wificard.io/  
Windows 系统电脑护眼工具 Project Eye：https://github.com/Planshit/ProjectEye 在小众软件论坛看到的 
浏览器广告屏蔽插件 uBlock Origin：https://github.com/gorhill/uBlock 
免费开源的安卓应用列表（安卓开源软件下载）：https://github.com/offa/android-foss   #Android#  
OBS 多平台直播推流插件：https://github.com/sorayuki/obs-multi-rtmp  
Joplin：开源的笔记软件  https://github.com/laurent22/joplin  官网地址：https://joplinapp.org/
nativefier：把网页应用封装成本地的原生应用  https://github.com/nativefier/nativefier  
GitHub 设计师 @Brian 开源的个人网站代码：https://github.com/brianlovin/brian-lovin-next  
ITraffic-monitor-for-mac：Mac 网速监控工具  https://github.com/foamzou/ITraffic-monitor-for-mac  
代理工具 Clash 下载：https://github.com/Fndroid/clash_for_windows_pkg/releases/tag/0.15.9
Mac 上的菜单栏图标隐藏工具 Hidden Bar：https://github.com/dwarvesf/hidden  开源免费，已上架 Mac App Store
MusicPlayer2：音频播放器  https://github.com/zhongyang219/MusicPlayer2/
纯纯写作桌面版：https://github.com/PureWriter/desktop 桌面版需要与安卓版配合才能使用（纯纯写作目前已从酷安下架，作者主动选择下架）
免费可商用字体整理：https://github.com/wordshub/free-font  
100 天学会 Python：https://github.com/jackfrued/Python-100-Days 
GitHub 上适合新手的开源项目（Python 篇）  https://zhuanlan.zhihu.com/p/280039778
VNote：开源的笔记软件  https://github.com/vnotex/vnote  
Aerial：Windows 上的屏保程序，在屏保时自动播放 Apple TV 的屏保视频 https://github.com/OrangeJedi/Aerial   Mac 版：https://aerialscreensaver.github.io/  
浏览器翻译插件 - 划词翻译 ：https://github.com/lmk123/crx-selection-translate  
B 站收藏夹视频批量下载工具 - 哔哩下载姬：https://github.com/FlySelfLog/downkyi 
Typora 主题：https://github.com/liangjingkanji/DrakeTyporaTheme  
蚁阅：在线的 RSS 阅读器  https://github.com/anyant/rssant 首个月可免费获得会员，会员到期后订阅的链接无法更新，年费 30 元
前端面试手写题：https://github.com/Mayandev/fe-interview-handwrite 等着哪一天想转行前端就来看
将富文本转换为 Markdown 格式：https://github.com/domchristie/turndown  
GitHub 个人主页的各种玩法：https://zhuanlan.zhihu.com/p/161029860 来自 GitHub Daily
游戏
在线玩 2048：https://github.com/akfish/Q-Learning-Flappy-2048
疯狂管道鸟 X 2048：https://github.com/hczhcz/Flappy-2048
Pornhub 风格图标生成器：https://github.com/bestony/logoly 在线网站：https://www.logoly.pro/#/  项目的作者：白宦成
Notion 搭建博客：
nextjs-notion-starter-kit：https://github.com/transitive-bullshit/nextjs-notion-starter-kit 本博客就是使用这个开发者提供的方法，他的博客更炫酷 https://transitivebullsh.it/
Spencer Woo《Powering my blog with Notion》  https://blog.spencerwoo.com/2021/02/nextjs-blog-notion  
Nobelium：一个使用 NextJS + Notion API 实现的，部署在 Vercel 上的静态博客系统。为 Notion 和所有创作者设计。  https://github.com/craigary/nobelium/blob/main/README-CN.md  
在 GitHub 个人主页添加数据统计  https://github.com/anuraghazra/github-readme-stats  在知乎文章《5分钟“白嫖”我使用Github 5 年总结的这些骚操作（小技巧）》看到的
将 GitHub issues 变成评论区：开源项目 https://github.com/utterance/utterances    https://utteranc.es/
公众号 Markdown 排版渲染工具
Markdown Nice https://github.com/mdnice/markdown-nice
Wechat-format https://github.com/lyricat/wechat-format
mpvue：一个使用 Vue.js 开发小程序的前端框架 http://mpvue.com/
微信小程序开发资源汇总 https://github.com/justjavac/awesome-wechat-weapp
Particles.js https://marcbruederlin.github.io/particles.js/ 网页背景棱状动画效果
FreeMove：将安装在 C 盘的软件移动到别的盘 https://github.com/imDema/FreeMove
RSSHub：万物皆可 RSS，可以给任何奇奇怪怪的内容生成 RSS 订阅源 https://github.com/DIYgod/RSSHub
中文文案排版指北 https://github.com/sparanoid/chinese-copywriting-guidelines
下载工具 Motrix https://github.com/agalwood/Motrix/blob/master/README-CN.md
PandaOCR：文字识别工具 https://github.com/miaomiaosoft/PandaOCR
CleanMyWechat：PC 版微信第三方清理工具 https://github.com/blackboxo/CleanMyWechat
Best App：收集&amp;推荐优秀的 Apps/硬件/技巧/周边等 https://github.com/hzlzh/Best-App
Mac 生产力工具推荐 https://github.com/Louiszhai/tool
VS Code 知乎插件 https://github.com/niudai/VSCode-Zhihu
TranslucentTB：让 Windows 任务栏变透明 https://github.com/TranslucentTB/TranslucentTB
Beslyric-for-X：网易云歌词制作工具 https://github.com/BesLyric-for-X/BesLyric-for-X
web-clipper：网页剪藏插件，支持 Notion、OneNote、Bear、Yuque、Joplin https://github.com/webclipper/web-clipper
QuickLook：Windows 上的空格预览软件，点击空格就能预览文件内容 https://github.com/QL-Win/QuickLook
藏起来！哔哩哔哩：将网页版的 B 站缩放成一个很小的播放窗口，摸鱼用 https://github.com/chitosai/bilimini
免费中文字体合集 https://github.com/zenozeng/Free-Chinese-Fonts
科技爱好者周刊 https://github.com/ruanyf/weekly
互联网上的免费书籍 https://github.com/ruanyf/free-books
PicGo：图床工具，一个用于快速上传图片并获取图片 URL 链接的工具 https://github.com/Molunerfinn/PicGo
京价保：一个帮助你自动申请京东价格保护的浏览器拓展 https://github.com/sunoj/jjb
CopyTranslator：https://github.com/CopyTranslator/CopyTranslator/blob/master/README_zh.md 复制即翻译
动态排名数据可视化：能够将历史数据排名转化为动态柱状图图表 https://github.com/Jannchie/Historical-ranking-data-visualization-based-on-d3.js
设计工具合集：https://github.com/phh95/Awesome-design-tools
谷粒：Chrome 浏览器插件英雄榜 https://github.com/zhaoolee/ChromeAppHeroes
表情包博物馆：https://github.com/zhaoolee/ChineseBQB （与上面的项目是同一个作者）
在线制作表情包：https://github.com/xtyxtyx/sorry 
Listen 1：音乐平台聚合搜索工具 https://github.com/listen1/listen1_chrome_extension
Gimp：图片处理工具 https://github.com/GNOME/gimp
百度脑图离线版：https://github.com/NaoTu/DesktopNaotu
稳部落：https://github.com/YaoZeyuan/stablog 专业备份导出微博记录 ，有 Win 和 Mac 版
新浪微博爬虫：https://github.com/nlpjoe/weiboSpider 用python爬取或分析他人微博账号的数据
Parser：小程序富文本插件（html 渲染），支持微信、QQ、百度、头条、uni-app https://github.com/jin-yufeng/Parser
自由钢琴：https://github.com/WarpPrism/AutoPiano 一个在线的钢琴模拟器
团子翻译器：基于 OCR 技术的翻译工具，可实时翻译日语和英语 https://github.com/PantsuDango/Dango-Translator 使用教程：https://www.bilibili.com/video/BV1gp4y1Q7Ts
GitHub-Dark：GitHub 黑夜模式浏览器插件 https://github.com/StylishThemes/GitHub-Dark 安利文章：https://juejin.im/post/5ee2df3cf265da771c780138 《【译】原来 GitHub 还有这些骚操作？》
微博图床：将图片上传到新浪微博图床并返回链接 https://github.com/Semibold/Weibo-Picture-Store
参考文章
掌握 3 个搜索技巧，在 GitHub 上快速找到实用软件资源 https://sspai.com/post/46061
Github 搜索官方帮助文档 https://help.github.com/cn/github/searching-for-information-on-github/about-searching-on-github


]]></content>
      <categories>
        <category>教程学习</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Pake Plus</title>
    <url>/posts/89d7ccdc.html</url>
    <content><![CDATA[前言Pake Plus  是一款开源且免费的跨平台应用打包工具，旨在将任何网页打包成客户端应用程序。通过这个工具，你可以轻松地将你的网页或Web应用程序转化为桌面应用，支持多个平台（如Windows、macOS 和 Linux）。其主要优势在于可以将网页嵌入到独立的窗口中，提供类似本地桌面应用的体验。
主要特点：
💎 比 Electron 小约 20 倍（小于 5MB！）并且速度快 10 倍。
🚀 PacBao 采用 Rust Tauri 构建，比基于 JavaScript 的框架更轻、更快。
📦 具有丰富的内置功能 - 支持快捷方式、沉浸式窗口和简约的自定义。
👻 PacBao 是一款极简主义工具，它使用 Tauri 取代了跨平台桌面应用程序的传统包装。
📲 使用原生框架打包 Android 和 iOS 应用程序 — 比 Tauri2 更小、更快。
🤗 易于使用——只需一个 GitHub 令牌即可获得桌面应用程序。
🌹 无需在本地安装复杂的依赖项——使用 GitHub Actions 进行基于云的自动打包。
🧑‍🤝‍🧑 国际化支持——自动遵循您的系统语言。
💡 支持自定义 JavaScript 注入——编写您自己的 JS 注入到页面中。
🎨 美观且用户友好的用户界面——为初学者提供更好的体验，支持中文包装名称。
📡 可直接通过网络使用，但客户端提供更强大的功能，值得推荐。
🔐 数据安全——您的令牌仅存储在本地，并且您的项目安全地保存在您自己的 Git 存储库中。
🍔 支持本地打包，无需安装任何依赖环境，本地打包仅需30秒。
🥥 没有 Github Token 也可以，本地打包简单方便，不需要 Token。
⚔️ 支持在 JS 脚本中调用系统级 API，例如下载文件/执行命令/打开新窗口等。
🍀 支持静态文件打包 - 从 Vue/React 放入已编译的 dist 文件夹或 index.html 来创建客户端应用程序。
🐞 支持调试模式——在预览或发布期间查找并消除错误。
💬 如果您遇到任何问题，请随时加入我们的技术社区寻求帮助。

使用场景：
网页应用转客户端：对于一些基于网页的应用，可以利用 Pake Plus 打包成客户端应用，用户无需每次都打开浏览器访问。
轻量级桌面应用：适用于一些功能简单、更新频繁的桌面应用，Pake Plus 提供一个快速的打包和更新解决方案。
自定义桌面工具：可以将网页作为工具，嵌入到独立的桌面窗口中，提升操作的便捷性。

项目官网：https://pakeplus.com/zh/
GitHub 仓库：https://github.com/Sjj1024/PakePlus
如何打包桌面端到官网下载自己需要打包的平台比如我的是MAC-IntelX64平台新建项目根据自己的需求打包即可
主要是准备自己的logo可以自己设计或者去这个网站下载
如何打包移动端APP移动端打包需要配置tokentoken获取可以参考官方网站https://pakeplus.com/zh/guide/token.html
我打包的示例1.2fa
3.music
4.alist
5.证件照
7.memos
]]></content>
      <categories>
        <category>教程学习</category>
      </categories>
  </entry>
  <entry>
    <title>大江大河 40 年：改变命运的七次机遇</title>
    <url>/posts/c6161845.html</url>
    <content><![CDATA[2018 年，电视剧《大江大河》在全国热映，口碑爆棚。这部片子以三个贫穷青年的奋斗历程为主线，观众们透过步步推进的剧情，看着他们考大学、办窑厂、卖馒头、做生意等，一路从底层拾级而上。这种老百姓喜闻乐见的逆袭故事，迎合了时代的宏伟叙事，受到了官方和民间的双重追捧。
津津有味的观众，不应该忽略这样的问题：在过去的四十年里，普通中国人到底有多少次改变阶层的机会？
阶层和阶级，历来都是能拨弄群众神经的词汇。在改革开放前，经过多年运动的碾压，中国社会形成了工人阶级、农民阶级和知识分子阶层组成的 “两阶级，一阶层” 的格局，对此梁晓声曾经这样比喻 [3]：生产力就像一把梳子，在落后的时代，梳齿稀少，只能将人群划分成几个有限的群体。
但扁平只是表面现象，底下早已暗流涌动。1978 年前的平均主义和群众运动，碾碎的只是家庭积累的经济资本，而阶层跃迁的另外两个重要的资本——政治资本和知识资本——正在悄无声的沉淀和聚集。这两种压抑多年的力量，将在日后成为撬动阶层分化的重要元素。
1978 年之后，中国的经济进入腾飞的四十年，而中国的阶层也以前所未有的速度重塑。革命导师说过：历史是由人民群众创造的。人民群众在铸造伟大时代的同时，他们自己本身也有 7 次较大的改变阶层的机遇，应该说中国几千年以来，这样高密度的跃迁时机屈指可数。
四十年过去了，昔日的扁平结构如同被篦子犁过一般，早已层级复杂。人们在社交媒体上宣泄着固化的焦虑，而那跃迁的秘密却逐渐从大众视野里褪去，隐藏在偷摸开工的乡镇作坊、亟待填补的干部断层、双轨套利的薄纸批文、昼夜不停的印钞水闸等看似不相关的历史细节里。
穿越阶层的秘密和方法，是治愈固化焦虑的良药，看得清昨日是如何发生，才能辨得明未来该怎样前行。
第一次： 高考归来!

我的时代在背后，突然敲响大鼓。
——1978 年，北岛

1977 年 10 月夜色蒙昧，四川达县钢铁厂，一个名叫罗中立的年轻人在锅炉房劳作了一天后匆忙背起画架，沿着大巴山下的州河，抹黑走了十几里的山路去报名参加全国高考。他每次进城都要走河边，大雾聚集。母亲是当地的知识分子，文革中受到冲击，被剃阴阳头，渴望儿子能够借此改变命运 [1]。
这一年，跟罗中立一同参加高考的还有 570 万考生，比如在黑龙江插队、日后成了国务委员的王毅，和在内蒙插队、后来官至银保监会主席的郭树清。同样参加了这届高考，后来成为清华经管学院院长的钱颖一字字铿锵：我们这代人，就是高考改变命运。媒体更是这样讴歌：1977 年，没有冬天。
通过考试改变命运，在中国历史悠久，这是朝堂和民间之间长达千年的默契。
自隋唐以来，科举制度就是中国社会底层向上流动的重要通道。“朝为田舍郎，暮登天子堂”，这种通道给了天下读书人以希望，从某种程度上保证了社会稳定。清末，运行千年的科举制度被废除，普通人再想要通过读书改变命运，摆在他们面前最重要的路变成了：考大学。
建国之前，大学在中国是个货真价实的精英事物，各大高校招生都是自己考录。新中国成立后，各校的招生权被逐步收回，先是同一地区联合招生（1950 年），再是大行政区统一招生（1951 年），最后是全国统一的高考（1952 年），一直到 1966 年被废除，此间 15 年共招生合计 231 万人。
1966 年，风向骤变。6 月 11 日，以孔丹为代表的北京四中高三 (五) 班的革命学生，察觉到风向的变化，瞅准时机给毛主席写信呼吁立即废除高考。这封信以独特的方式传到最高层，随即便登上 6 月 18 日的《人民日报》，5 天后，《人民日报》发表社论，宣布要将高考“扔进垃圾堆里去”。
于是很快，高校招生就变成了 “自愿报名，基层推荐，领导批准，学校复审” 的四条方针。
凡是走 “推荐 + 批准” 的路子，葫芦里到底是什么套路，老百姓心里是有数的。比如 1973 年王石从军队复员，来到郑州铁路局水电段做工人，彼时他父亲正在柳州铁路局担任领导。工作仅仅一年，王石就脱颖而出，拿到了整个郑州局两个推荐上大学名额中的一个，你说厉不厉害。
1977 年，第三次复出的邓小平主抓科教工作。8 月份，他组织了有 30 名科学家参加的科教工作座谈会，会议期间武大教授查全性言辞激烈，狂批当时的招生制度并谏言恢复高考，邓小平当机立断，让坐在旁边的教育部长刘西尧追回已经发出的招生文件，重新组织统一考试。
卷子是抽调《毛泽东选集》第五卷的纸张印的，这种寓意极强的动作令人感慨万千。而恢复高考的消息传出去之后，举国青年为之振奋。历史证明，“开科取士”是稳定知识青年的最佳手段。1984 年，这批赶上了改变命运第一次机遇的大学生们，在国庆阅兵时打出了 “小平您好” 的标语。
1977 年~ 1979 年上大学的这批人，作为知青上山下乡，在农村都有过摸爬滚打的经历，用他们自己的话说，身上都有一股韧劲儿，求知若渴，比如根据同窗回忆，当时在北京大学法律系就读的现任总理，那会儿终日揣着一叠自己做的英文单词卡片，用橡皮筋儿一扎，一有空就拿出来背。
时代亏欠这代人的东西，会用另一种方式进行补偿。他们不知道的是，这种补偿会是无比的丰厚。
十年动乱，国家的人才供应出现了严重断层，干部年轻化成为一个必然趋势。1982 年，陈云提出要大量选拔中青年干部 [2]：“现在，中央、省、地三级党委的主要领导同志大多数在六七十岁左右。到这些干部成批离去的时候，就将构成一个重大的问题。因此，现在就要下决心挑选一批四五十岁的人上来。”
这为即将毕业的大学生们留下了充足的发展空间。这几年的大学生，毕业后或供职政府机关，身居要职，或下海经商，终成巨贾，或投身文艺，名扬海内。77 届、78 届等几批早期上大学的毕业生，逐渐占据了社会最顶尖的资源，政界、学界、商界、文艺界 ········ 都有他们的影子。
1977 年到 79 年，三年高考录取人数大约有 100 万，被称为 “百万雄师”，绝大多数人的命运都得到了彻底的改变。
在整个 80 年代甚至 90 年代的大部分时间里，大学生仍然是稀缺资源，是社会公认的 “天之骄子”，考上大学依然是贫寒子弟阶层跃迁的最简捷的方式。当然，1999 年大学扩招之后，普通高校已经很难承担阶层跃迁的职能，需要 211、985 甚至更高的学校，才能有机会改变命运。
昔日挑战制度的韩寒，也在成年后这样写道：

“通过教育可以大概率改变命运和阶层这个窗口期的时间不会很长，可能也就几代人…… 几代人后，社会的阶级基本固化，改变命运就会变得更难了…… 趁现在，大家都尼玛自然吸气，你赶紧多吸几口，让自己排量大一些吧。”

有一个故事很说明问题：昔日带领一群北京四中高干子弟呼吁废除高考的孔丹（父亲是中央调查部部长），虽然没读大学，但动乱结束后直接考上了社科院的研究生，后来做了中信集团董事长；而当年瞎起哄的 “白卷英雄” 张铁生（毫无背景的农民子弟），则足足坐了 15 年的牢。
这正如韩寒所总结的：成熟的向上流动通道，寒门子弟应高度重视和充分利用，学别人那样潇洒地弃如敝屣，最终倒霉的都是自己。
第二次：乡镇企业!

我们完全没有预料到的最大的收获，就是乡镇企业发展起来了。
——邓小平，1987 年

1980 年冬天，一场汽配展销会正在山东胶南县城里的一个破旧体育馆里举行。令人感到不解的是，体育馆内冷冷清清，馆外的一个不起眼的地摊儿前却挤满了人，35 岁的鲁冠球正在热情地接待着顾客，正当他扯着嗓子推销着自家产品时，有人从突然楼上泼下一盆冷水，把他们浇了个透心凉。
这是展厅里心生妒忌的同行送给鲁冠球的一个下马威。虽然连脚底破洞的解放鞋都被淋湿了，但鲁冠球依旧开心的嘴不合拢。他们产品的价格比体育馆里的那些 “正规国营厂家” 优惠足足 20%，没几天的光景，就拿到了 200 多万的订单。在那个年代，这绝对是个天文数字。
这 200 万只是一个开始。半个世纪后，鲁冠球手里的这个小作坊，一步步变成了一家民营汽车零配件巨头。从小吃不饱饭的鲁冠球，完成了一个农民到企业家的的人生跃迁。
农民，几千年来都处于中国社会的最底层，是食物链的最末端，改变阶层的机会少之又少。
1955 年，旨在消灭农民私有制的 “合作化” 运动兴起，农民加入合作社后集体劳动，吃大锅饭，而后全国兴起了 “割资本主义尾巴” 风潮，禁止农民自养牲畜、发展家庭副业。这股风潮一致持续到改革开放。生产资料被没收，中国农民传统靠劳动发家致富的可能性，也几乎被消灭殆尽。
1978 年，安徽凤阳小岗村 8 位不堪忍受穷困生活的村民，用生死状撕开了中国农村经济改革的一道口子，农村生产力得到释放。家庭联产承包责任制让农民获得了温饱，但仍然无法改变农民的身份和阶层，此时，一批脑子活的农民开始寻求新的出路，在 70 年代末 80 年代中，乡镇企业借势崛起。
早在 1969 年，鲁冠球就带着同村的 6 个庄稼汉创办了宁围公社农机修配厂，在此之前，他进城当过铁匠，开过面粉厂，六年换了 7 个地方，都因 “割资本主义尾巴” 的罪名无疾而终。这次，精明的他学了个新办法，他说服了大队干部，让他使用农机修配的招牌，大队给鲁冠球记工分，赚了钱归大队。
到了 1979 年，脑子灵活的鲁冠球将修配厂转向汽车零配件——万向节，厂子也更名为萧山万向节厂。这时候，计划经济的威严还笼罩在这个国家的上空，社会的主流声音对乡镇企业噤若寒蝉。想要参加汽车展销会却拿不到资质的鲁冠球，想到了开头摆地摊的办法，这就有了本章开头的那一幕。
事情在 1984 年迎来转机。这年，中央下发了 4 号文件，第一次明确了乡镇企业的含义和地位。文件中，将农名户办、联户办的企业与原有社队集体企业统称为乡镇企业。并且提出鼓励三者共同发展，要求各级政府对乡镇企业与国营企业同等对待，一视同仁，给予必要的扶持。
在整个乡镇企业历史上，有两次大的飞跃期：第一次是 1984~1988 年，第二次是 1992~1995 年。到 1995 年时，乡镇企业创造的工业附加值已经占到全国工业附加值的的 1/3 左右，不仅如此，乡镇企业的崛起还解决了大量的农民就业问题，“到 88 年前后差不多能达到 1700 万到 1800 万”。
除了鲁冠球，今天我们还可以列举出很多一穷二白，面朝黄土背朝天、白手起家的农民企业家案例。新希望集团的刘永好兄弟、华西村的吴仁宝、横店集团的徐文荣、福耀玻璃的曹德旺、温氏集团的温北英 ······80 年代的乡镇企业，给了农民第一次翻身实现阶层跃迁的机会。
这是中国历史上，农民群体唯一的一次大规模 “由农入商”，有相当一部分人摆脱了土地的束缚，完成了阶层跃迁。而随着城镇化接近尾声，这种机遇恐怕也将成为绝响。
第三次：双轨生意!

这一场春天的雷暴，不会将我们轻轻放过。
——骆一禾，1989 年

如前文所述，家庭三大资本中的知识资本和政治资本，在 1978 年之前缺乏套现的土壤，但在 80 年代，政治资本迎来了第一次大规模兑现高潮：价格双轨制套利。
价格双轨制是 80 年代的一种特殊经济制度。1979 年后，国家对原材料实行价格管制，同时又允许企业生产自销产品，这就形成了 “计划” 和“市场”的两个价格。从 1984 年提出到 1989 年十五届三中全会“双规变单轨”，价格双轨制只存在了短短数年时间，却催生了一个一夜暴富的阶层：倒爷。
倒爷们利用关系，拿到计划经济下商品供应的批条儿，用计划内的低价买来，再用计划外的市场价卖出，赚取官方价格和市场价格价差利润，“空手套白狼”。这对于有政治资本积累的部分中国人来说，无疑给了他们一种合法的套现通道，他们疯狂地复制这种倒卖，赚取暴利。
新华社一名记者曾讲过这样一个真实的故事 [12]：在天津的一个旅馆里，一个倒腾钢材的“倒爷” 将一张钢材提货单卖给同房的另一名 “倒爷”，每吨加价 200 元；第二名“倒爷” 再顺手把提货单卖给第三名“倒爷”，然后第三名又找到第四名…… 最后提货单还没出旅馆，价格就由每吨 700 元涨到 1600 元。
80 年代靠倒爷发家的人很多，上到红头批文，下到日用百货，几乎没有什么不可以拿来倒卖牟利的。
比如 1988 年冯仑去海南筹建海南体改所，苦于没有经费。临行前，中央体改所给了冯仑 1 万台彩电的批文作为开办费。彩电当时是紧俏的商品，一纸批文价值不菲。到了海口，冯仑将 1 万台彩电批文递给一外贸公司老总，外贸公司老总立马拍出了 30 万元，这批文比支票还好使。
出身交通系统的王石也没闲着。1983 年，王石通过从北方倒卖玉米到深圳，在短短几个月内赚到了 300 万，这是他的人生第一桶金，也是后来创办万科的底子。当然，也不是所有人都能像冯仑和王石那样 “幸运”，同样加入倒爷大军的柳传志，就被骗子骗走了 14 万，当时他工资每月才 104 块。
1989 年，《党的建设》杂志刊登了一篇文章，其中讲道：“时下有句顺口溜：辛苦一辈子，不如倒爷一阵子。”
倒爷阶层赚取的暴利，归根结底还是来自于国家和老百姓。曾经有学者做出估计：因为价格双轨制而流出的财富高达几百亿。这是一笔惊人的财富转移，让一整批人完成了原始积累和阶层跃迁。但这场财富狂欢，是 80 年代社会不公的主要表现，产生了极大的副作用，最终成为诸多事件的导火索。
利用制度的缺陷和窗口进行套利，在 90 年代还会发生很多次，甚至直到现在，我们都能看到它们的影子。
第四次：九二下海、

40 年代全民扛枪，50 年代全民炼钢，60 年代全民备荒，70 年代全民下乡，80 年代全民经商，90 年代都想把大款当当。
——民谣，1990 年代

1992 年 5 月，黑龙江省绥芬河市市长赵明非早晨 5 点起床，带着一件夹克、两个饭盒、一套牙具、一台收音机和几瓶蜂王浆，在贸易市场的街边摆起了地摊。没过一会儿，电视台、工商局、派出所的人就先后赶来，拍摄的拍摄，吆喝的吆喝，一起为 “市长摆摊” 的这场作秀添油加火。
这场真人秀后来引起轰动，主要是因为这位摆摊市长是总设计师的外甥女婿 [13]，而后者刚刚在 3 个月多前，完成了那场影响中国历史的南巡。
春江水暖鸭先知，看清方向的人已经开始蠢蠢欲动。1992 年南巡讲话结束后，两个里程碑式的文件《有限责任公司规范意见》和《股份有限公司规范意见》出台，使得 1992 年成为中国公司的元年。到了 10 月份，中共十四大召开，“市场经济” 被写进党章，直接引爆了下海经商的热潮。
资源丰富、嗅觉灵敏的官员们，成为下海的主力，长长的名单包括：泰康人寿创始人陈东升、华泰保险创始人王梓木、中诚信创始人毛振华、爱国者集团总裁冯军、汇源果汁创始人朱新礼、巨人集团创始人史玉柱、中国国际期货公司董事长田源、北京中坤集团董事长黄怒波……
陈东升给他们这群人起了个响亮的名字 “92 派”，根据统计，1992 年体制内官员的下海经商的官员和知识分子数量至少有 15 万。
这批人在下海前，大都在体制内拥有体面的待遇：华泰的王梓木是国家经贸委综合司副司长，汇源的朱新礼是副县长的热门人选、中诚信的毛振华在国务院政策研究室担任处长，中坤的黄怒波在中国市长协会担任副秘书长，建业的胡葆森已经是河南外贸部门的正处级干部……
放弃体制内的舒适待遇，显然是看到了更丰饶的蜜糖之地。比如，92 派下海多从事房地产、金融等 “政策密集型” 的管制行业，巧妙地避免了在纯市场化的行业里厮杀。陈东升后来总结道：“用计划经济的余威，抢占市场经济的滩头。”这句话里，“余威”是关键词。
当然，下海潮并非只属于体制内的官员，也属于普通的知识分子。在 1992 年前后，复旦大学青年老师郭广昌辞职，成立广信科技咨询公司；北京大学青年老师俞敏洪辞职，成立了北京新东方学校；而 34 岁的河南舞阳钢铁厂车间主任许家印，也在 1992 年辞职南下，投入到商海大潮中。
在农民群体于 80 年代出现大规模 “由农入商” 之后，知识分子（官员也属于知识分子）也终于挽起袖子投入市场经济。这意味着，1978 年前中国的 “两阶级一阶层” 中，已经有两个群体中率先向 “私营企业主” 这个新兴阶层转移。在这种大转移中，相当一部分人改变了自身的阶层。
清华大学李强教授将建国后中产阶级的形成渠道分成三类 [5]：教育渠道、专业技术渠道和市场渠道。这三条路径翻译成白话就是：考大学、学技术、做生意。其中“做生意” 是最直接的途径，无论是面朝黄土的农民，还是满腹经纶的书生，只要有能力，都可以在市场经济中赚取改变阶层的财富。
而 “两阶级一阶层” 中剩下的工人阶级，需要经历 1998 年国企阵痛和 2001 年世贸开门，才会成规模地向私营领域转移。在工商鼎盛的年代，其实每个人都有机会。
第五次：资源巨潮!

我很怀念煤老板做投资人的日子，他们特别好，除了要求找女演员以外，没有别的任何要求。
——汪海林，著名编剧

2005 年 9 月，北京建外 SOHO 开盘，来自山西的煤老板豪掷 5 个亿，买了接近一半的楼盘；2006 年，煤老板杨三俊联合亲友团，一口气买下了北京二环外的 100 套房源；2007 年，煤老板耿建平娶亲，12 辆悍马车队亮瞎全国；2012 年，柳林首富邢利斌 7000 万豪门嫁女，陪嫁了 6 辆法拉利。
曾在历史上名噪一时的晋商在 2000 年后再度崛起，主人公从乔家大院换成了煤老板，暴富是他们身上第一个标签。
有 “中国富豪杀猪榜” 美誉的胡润排行榜曾经这样统计过山西的黑金财富：截止到 2017 年，山西家庭资产超过 600 万元的有 49000 户，拥有千万资产的 16300 户，拥有亿元资产的 1460 户，超过 70% 的富人都来源于煤焦产业。相比之下，2017 年，中国城镇就业人员年平均工资为 7 万元。
煤炭，成了山西大地上新的造富图腾，暴富神话就像失控的火山口，挖煤、洗煤、贩煤、设备、运输甚至路边的饭店，也都跟着腾飞起来。伴随着煤价的疯涨，曾经落后贫困的山西突然迎来了煤炭行业高歌猛进的十年，而这背后，正是 2000 年后中国第一个工业化黄金期。
2001 年，加入 WTO、城镇化提速、制造业崛起等一系列因素，推动中国进入前所未有的重化工业进程，中国对以大宗商品为代表的原材料需求以惊人的速度增加。到了 2009 年，中国的钢消费已经占据世界的 50%、铜消费占 36%，铝占 41%，锌占 40%，铅占 41%，大豆占 24%。
货币对资源价格的上涨，也起了推波助澜的作用。加入 WTO 后，国家外汇储备从 2000 亿突破 3 万亿美金。以外汇为锚的货币发行机制，导致国内出现货币供给宽松的局面，加速了资产水平价格的上涨。而作为一个典型的周期性和资源型行业，煤炭价格完美的享受到了这一拨超级红利。
行业黄金十年的起点是 2002 年。在这一年，国家发文取消电煤指导价，煤价开始蹭蹭上涨，从 2000 年的每吨 129 元，涨到了 2007 年的 330 元，并在 2011 年突破了 800 元。煤炭行业收入占 GDP 的比重，也从 2000 年的不足 2%，一直攀升至 2011 年的 6.5%。这是一场史无前例的资产价格飙涨。
黑金狂潮下，内蒙古鄂尔多斯、陕西榆林等城市强势进入大众视野，并贡献了无数关于权谋、香艳、暴力和挥霍的故事。
笔者曾认识这样一位煤老板：90 年代承包国营煤矿的坑口，一吨煤只能赚几块钱，遇到市场谷底，堆成小山一样的煤即使白送也没人愿意来拉。2002 年后煤价坐上火箭，开始日进斗金，2006 年拒绝了同行 3.6 亿的收购，2009 年被矿难困扰，最后以 13 亿的价格卖给了一家国有煤炭公司。
煤老板的财富故事，曲终人散于 2008 年。这一年，山西襄汾发生尾矿库溃坝事故，277 人在灾难中死亡，这场事故是压倒骆驼的最后一根稻草。随后，山西用强力的行政手段进行煤炭整合，大量煤老板的矿被国进民退，整个山西的办矿主体从 2200 多家减少到 130 家，血煤逐渐退出历史舞台。
历史的讽刺还在于：煤老板被国营煤矿整合时，通常都拿到了丰厚的补偿款或者转让款，多数人转手就去买了大量北京上海的房子，避开了 2012 年之后煤价的暴跌。而当年背景够硬可以不被整合那些煤老板，反倒是在煤价暴跌中负债累累，甚至没能熬到供给侧改革的那一天。
如果把视野放到全球，这波大宗商品超级牛市里的煤老板以及同样逻辑的钢老板、铜老板、铝老板等，是每一个超级经济体崛起必然会出现的一个群体，可以与之类比的是美国 19 世纪诞生的石油富豪阶层。但由于中国的制度因素，他们的财富额、影响力和活跃度远低于西方国家的可类比群体。
所以，随着中国基建周期的临近尾声，以及资源领域持续的 “大鱼吃小鱼”，矿产老板们的野蛮故事，未来已经没有重现的可能。
第六次：楼市疯狂!

我不认为在我的有生之年，能看到房价大幅下降的情况。
——任志强，2016 年 10 月

2001 年，《温州晚报》选了 8 月 18 号这个吉利的日子，组织了 150 多个温州人，挤满三节火车车厢来到上海，花了时间三天狂扫 100 多套房子，豪掷 5000 万元。
消息像野火一样在温州这个三线城市的小圈子里传播着，一批又一批的温州人踏上北上的火车，6800 万、8000 万、1.2 亿，不断刷新的金额终于引爆了大众舆论，“温州炒房团” 正式登上历史舞台。在第二年，单是《温州晚报》一家组织的购房团，就买掉了上海价值 2.5 亿元的几百套房子。
现在回过头来看，专业炒房团是市场嗅觉最灵敏的食利者，他们的线索通常来自新闻联播和权威报纸，政策的变化，往往就隐藏在那些公文格式的句子里。
政策的松动始于 1998 年。当年为了抵御亚洲金融风暴的影响，国务院决定将房地产作为经济发展的支柱产业，以 “取消福利分房，实现居民住宅货币化、私有化” 来推动房产改革。这开启了中国的商品房时代，伴随着中国城镇化的狂飙猛进，房地产开启了“黄金十年”。
中国历史上最大的单一品类资产价格牛市到来了，无数人被疯涨的房价而改变了财富地位，也同样有无数人被疯涨的房价抛落了时代火车。
根据天风证券的统计 [13]，“黄金十年” 的数据惊人：从 1998~2007 年，房地产投资平均增速 24%，拿地面积平均增速 21.1%，新开工面积平均增速 17%，商品房销售面积平均增速 20%，而同期中国经济增速只有 12%。在这期间，无论是豪掷千金的专业炒房团，还是多供一套的老百姓，都获利丰厚。
2008 年金融危机之后，房地产突飞猛进的十年告一段落，一二线城市积累了大量难以消化的库存，但随后而来的 “四万亿” 和央行货币政策的松绑，拯救了岌岌可危的房地产市场，2009~2010 年之间房价再次全面上涨，直到中央连续出台严厉的调控政策，才将疯狂之势摁了下去。
从 2004 年到 2014 年，中国 GDP 从 16 万亿增长到 64 万亿，涨幅 4 倍，但大部分一二线城市的房价涨幅都远超这个水平。当然，房地产的最后疯狂还没有到来。
2014 年下半年，央行再次降息，南方的深圳楼市率先开涨，并逐步蔓延到京沪。2015 年 9 月 30 号，央行降低首套房首付比例，4 个月后更是降低到 20%，去库存的号角吹响，楼市烈火烹油。到了 2017 年，一二线溢出的资金与棚改货币化一道，疯狂地涌入二三四线城市，全国呈现燎原之势。
如果说之前的房价是从 1 涨到了 5，那么这次就是从 5 涨到了 10，涨幅虽然没有之前可观，但付出的代价却更大：居民部门的住房贷款按揭余额在 2014 年突破 10 万亿，2015 年达到 14 万亿，16 年更是直接达到了 19 万亿。这些增加的负债，将在很长一段时间内压缩居民的消费空间。
应该说，无论是不是炒房，凡是在 1998~2014 年这期间购买了多套房的人，都获得了可观的财富，这些财富足以改变很多人的阶层。
东亚经济圈对房子的热爱有目共睹，日本、韩国、台湾、香港都经历过房价疯涨、泡沫、破灭的周期轮回，大陆的群众也未能免俗，并且将房子与择偶等个人生活深度捆绑。电影《甲方乙方》里刘蓓说：“没有爱情的婚姻是不幸福的。” 葛优回答：“没有房子的婚姻才是不幸福的。”
一个开放商曾不无幽默地总结：在旺季，你要打出 “欢迎温州看房团” 的横幅，神经紧张的本地人肯定来抢；在淡季，你花钱找一帮人凌晨 1 点在售楼处排队，还在观望的客户就会上钩；在熊市，你要敢于雇人砸售楼处，让媒体惊呼“降价巨大引发老业主不满”，尾盘便会被迅速清光。
在各种因素的环绕下，楼市具备了门槛低（大部分普通人都能参与），时间长（上涨时间长达二十年），涨幅大（多数城市房价涨幅超过 10 倍），带杠杆（可以方便的按揭）等众多特点。这是既是一次史无前例的价格牛市，也是一场全民都能参与的资产游戏，前无古人，后无来者。
当然，房价的上涨让所有的参与者都获得了财富增值，但要到改变阶层的程度，条件还需要进一步压缩：一二线城市 + 3 套以上住房 + 无负债或者少量负债 ≈ 从小康跨入了富裕。尽管条件严苛，但在北上广深人口接近 1 亿的背景下，中国达到这个标准的家庭至少是百万的量级。
如果按照代际的观点看，出生在 1970-1985 年之前的人充分享受了房地产大牛市的红利。对于 85 后和 90 后来说，属于他们的同级别机会，可能还要等很多很多年。
第七次：网络红利!

50 年代嫁英雄，60 年代嫁贫农，70 年代嫁军营，80 年代嫁文凭，90 年代嫁富翁，2000 年代嫁码农。
——民谣，2015 年

水木论坛上曾有这样一个提问：为什么北京南城房价远低于北城？一个网友神回复：因为南城是一个程序员到不了的地方。
改革开放后中国有四波创业浪潮：84 派、92 派、99 派和 11 派。以 BATJ 为代表的 99 派和以 TMD 为代表的 11 派是典型的 “互联网创业家”，这两波创业者都是依托经济发展史上的第五次经济周期——信息技术革命的红利发展而来。这波技术创新肇始于上世纪 90 年的美国，千年后逐步转移到中国。
信息技术革命带来社会阶层的明显变化，就是 IT 精英的崛起。例如美团上市，近五万员工中，造就了 4614 名百万富翁。小米上市，据说工号 1000 以内的都能一把付得起北京的首付了，其中一位没有上海户口的老码农松了口气：2000 万的财富，小孩上学毫无问题，国际学校一年也就才多交 30 万。
早在 2005 年，在纳斯达克上市的百度一夜之间造就 240 多个百万富翁，那时候百度只有 750 人。2014 年阿里巴巴上市是当时全球第一大 IPO，号称史上最大规模的互联网上市造富运动，不仅让马云成为荣登首富宝座，还创造了上万名的百万富翁，直接大幅拉升了杭州的房价，直逼缺乏互联网公司的上海。
2015 年后，赴美赴港上市的互联网公司更是如过江之鲫，众安保险、爱奇艺、B 站、映客 ·、搜狗、阅文、拼多多 ····· 还有排上日程的头条、滴滴、蚂蚁金服……
中国第一波互联网创业者多为 60 后和 70 后：马云（1964 年）、李彦宏（1968 年）、丁磊（1971 年）。第二拨互联网创业者则多以 80 后居多：王兴（79 年）、程维（83 年）、张一鸣（83 年）。第一拨创业者抓住了互联网普及的红利，而第二拨创业者则抓住了移动互联网兴起的红利，
受益的不仅仅是创业者。1999 年，高校开始扩招，计算机专门作为热门专业，吸纳了大量储备人才。高歌猛进的人才培养和互联网公司的腾飞在这 20 年形成了一个漂亮的双曲线。大量的资本涌入，IT 产业化应用的黄金时代，这些都是推升程序员走上社会高收入人群的推手。
程序员阶层的高收入，已经是有目共睹。在号称中国硅谷的海淀中关村，有着全国密度最大的高科技企业，独角兽企业近百家。20 多年前，这里荒草丛生，仅仅是北京海淀北街的一个破公共汽车站，房价只有两三千。如今海淀黄庄紧邻中关村三小等重点小学的房子，单价已经逼近 10 万。
这个价格，早已超出了普通工薪阶层可以承受的范围。而任职互联网公司的码农，则成了房产中介最爱的人选。一个拿着热包子，喝着豆浆，穿着冲锋衣或者格子衫，背着双肩包在西二旗挤地铁的码农，很有可能月薪五万 +，手里握着价值几百万元甚至更多的股权，秒杀 90% 以上的北漂。
中国很多行业都享受过过所谓的 “风口”，如钢铁、煤炭、地产、金融、电子等领域。但跟这些领域出现的“老板吃肉，高管喝汤，员工苦逼” 不同的是，互联网在风口释放的红利更加普惠，主要原因在于互联网是人才密集型行业，商业模式杠杆高，单位密度产出高，激励制度更加合理。
尽管距离中国人合法拥有财富只有短短四十年，但企业家群体已经有了 old money 和 new money 之分。应该说，崛起过程原罪较少（但不是没有）、创始人履历透明阳光、基础员工收入高企、企业社会形象健康（当然也有很烂的）的互联网行业，就是中国 new money 的代表。
站在当前时间点上，移动互联网的红利期接近结束，估值泡沫尚待消化，但互联网行业的新模式、新技术、新生态仍然层出不穷。因此，只要中国工程师红利没到殆尽的那一天，通过这个行业实现阶层逆袭的大门，就仍然没有关上。

尾声!

改革开放四十年的七次的阶层跃迁的机遇，到今天仍然具有指导意义。我们把这其中的方法论总结为：合法通道、制度套利、行业风口和资产红利。
合法通道：目前在中国，通过读书和考试改变命运，仍然是可以走通的模式，高考、考研和考公务员都是成熟的向上通道。这些通道尽管有种种问题，但还是比较依赖个人的智力和勤奋，而且受制于社会舆论，它们的大门会变窄，但很难被完全关闭。
对于毫无背景的年轻人来说，合法通道是他们改变阶层的第一次机遇，应该坚决地抓住。但可惜的是，大部分学生都没有这样的觉悟，很多人在参加工作后才追悔莫及。
制度红利：过去四十年是一部经济发展史，也是一部制度改革史。这意味着在改革的进程中，总会有短暂的制度红利释放出来。双轨套利是利用了定价机制的漏洞，而乡镇企业和九二下海则是抓住了计划经济向市场经济过渡期间的空白期，实现了企业和个人的原始积累。
中国的制度改革还有相当长的路要走，因此制度红利的机会还会不断出现，如农村土地流转、国企改革、垄断行业准入等，当然，它们给普通人参与的机会也越来越少。
行业风口：无论是财大气粗的煤老板，还是待遇优厚的程序员，都受益于自身行业的快速发展。俗话说 “男怕入错行，女怕嫁错郎”，选择比努力更重要。对于两个同样能力的年轻人，新兴行业和传统行业赋予的职业回报往往相差十倍。
对于普通人来说，想要依靠行业红利来穿越阶层，主动寻找一个有前途的行业，跟在一个衰落的行业里摸索折腾，前者的难度会更小，成功率也更高。
资产红利：周金涛说过：十年前你在中信建投找了一份工作不重要，十年前在朝阳门的中信建投证券旁边买了一套房子真的很重要。资产红利是人们在勤奋劳动之外的一条极为重要的阶级跃迁通道，至少在过去十几年里，如果不去主动参与，不但无法完成阶层跃迁，甚至还有跌落阶层的风险。
在地产牛市已经临近尾声的时点，普通中国人希望通过资产红利来翻身和跃迁，可能只能寄希望于证券市场的长牛和长红，而像匹凸匹和比特币这种 “机会”，普通人还是不要参与的好。
综合来说，在不同阶段，各个要素对人发财致富的作用不同。计划经济时代，收入平均化，考大学填补干部空缺，办乡镇企业填补市场空缺，均能获取最大回报；市场经济全面启动后，下海经商成为阶层跃迁的重要途径；而到了新世纪，选择开始大于努力，资产升值和行业风口变得比个人勤奋重要。
这些改变命运的机遇，大约 5~7 年会出现一次，绝大多数中国家庭都离其中的 2~3 次非常之近。如果一次都没能抓住，大概率四十年原地踏步甚至倒退；抓住一次就不会被这个时代所抛下；抓住两次，便能大幅提升家庭在社会上的阶层；抓住三次或三次以上的，基本上就是国民级的励志故事了。
以许家印为例：1978 年以周口市第三的成绩考入武汉钢铁学院（抓住第 1 次机遇），毕业后被分配到河南舞阳钢铁公司工作。1992 年辞去国企工作来到深圳下海（抓住第 4 次机遇），1996 年创办恒大专注于房地产行业（抓住第 6 次机遇）。连续三次踏准节奏，让许家印成为中国首富。
不过在品读励志故事的同时，我们需要清楚地认识到：尽管过去四十年中国人的生活得到了翻天覆地的变化，但大多数人在社会中的相对位置其实并没有改变。
从种地的贫寒农民，到富士康的流水劳工，这并没有改变阶层；从陋巷的拮据市民，到艰难经营的街边店主，这并没有改变阶层；从车间的蓝领工人，到写字楼里的廉价白领，同样也没有改变阶层。普通人改善生活际遇不难，但要改变在社会里的相对位置，几千年来都是一项艰巨的修行。
趟过阶层的河流，需要善于向时代借力的智慧，需要勇于做关键选择的睿智，也需要敢于告别舒适的魄力，作为普通人的我们来说，永远都不该有放弃努力的那一刻。
【参考资料】
[1] 央广网，罗中立忆 1977 年高考[2] 组工通讯 [J]. 第 164 期，第 194~195 页[3] 梁晓声，中国社会各阶层分析 [M]. 北京：经济日报出版社[4] 陆学艺，当代中国社会阶层流动 [R]. 北京：中国社会科学院[5] 李强，社会分层十讲 [M]. 北京：社会科学文献出版社[6] 吴晓波，激荡三十年 [M]. 浙江：浙江人民出版社[7] 财经人物周刊，鲁冠球的工人梦 [Z][8] 张刚，向 “92” 派致敬[J]. 中国企业家，2012[9] 新闻 1+1，高考 40 年：揭秘 1977 年恢复高考制度内幕 [Z][10] 李培林，当代中国社会阶层流动 [M]. 北京：社会科学文献出版社[11] 李路路，石磊，朱斌，固化还是流动?—当代中国阶层结构变迁四十年，社会学研究，2018 年[12] 南方都市报，1988：抢购席卷全国，2008[13] “政策市” 绥芬河，中国企业家，2011[14] 镀金时代：房地产行业的未来十年，天风宏观，宋雪涛团队  
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>让工作更高效的五个小习惯</title>
    <url>/posts/4d6a77cd.html</url>
    <content><![CDATA[你可以让 35 小时的工作等同于 80 小时的工作效率么？作为一名程序猿的资深创业者 Jess Martin 的答案是可以。他过去为了提高效率，曾试过没日没夜的工作，但是现在他找到了更好的方法。也许你不能相信，人们并不是生来就有 get-it-done 的基因。提高效率需要你去尝试，修正错误并反复练习。甚至是允许自己在一段时间内倦怠。
Jess 说当他依赖天赋去度过宝贵的大学时光时，他走的非常艰辛。他其实是一个 “能力受害者”。因为升学对他来说一直很容易，他并没有经历修炼和提升的程序。不可避免地，当 Jess 的天赋只能带他走到这么远时，他第一次发现上学对他来说有点难。
更加有趣的是，直到 Jess 触及到他天赋壁垒的时候，他才开始真正做成事情。下面他跟我们分享了这一过程中他所学到的最有价值的课程。
限定工作时间：你不能保证每个小时都高效在他研究生毕业后的第一份创业工作里，Jess 在他的盘子里放了太多东西。从全责开发到项目管理，他把每周 80+ 小时投入工作。这显然不可持续，然后理所应当的，他崩盘了。
从那时候 Jess 开始限定工作时间。相比于之前让工作充斥于他生活的每分每秒，甚至占据了他吃饭和睡觉的时间，他强制自己每周工作只工作 35 小时。
帕金森定律表明，有时投入更多的时间只会使工作变得更为繁琐。所以 Jess 严格执行他的 35 小时工作制。“这是学习流程作业的开始，也让我理解了效率和效用的真正含义”，他补充到，“突然间我就可以用 35 小时完成四项工作了”。
保持平和心态对 Jess 而言，让自己变得更高效的过程经历了一个艰难的学习曲线。在没能高效利用时间的时候，Jess 学会了宽容自己。如他所言，你不能保证所有时间的效率都一样，它们之间差远了。
这样的例子有很多：他可以只用一个小时规划接下来 100 天的工作，紧接着却花费很多时间去回复一堆邮件；对于后者，他在学着接受这样的状况。
“当我意识到我本可以在一个小时内更高效，但我没有做到，我就会产生负罪感”，他解释到。但是很快，他发现这并没有给自己带来任何好处。
“负罪感并不能成为驱动力。如果你在刚刚的一段时间内状态很糟，那么自责并不能给你任何帮助，它只会让这个错误延续下去”。对此 Jess 的策略是过去的就让他过去，向前看，关注下一小时。
摆脱负罪感并向前看有时很难，但当他终止这样的低效率输出后，他的负罪感往往可以得到缓解。即使暂时没有达成目标，他也不会要求自己非完成不可。为此，他发明了留出空档时间这样的创造性方法。
留出空档时间Jess 相信，要想真正实现高效，就不要把每天安排的太满。他将事件之间的空余时间称为空档，这给了他一段自主的时间去切换到下一个事件。日历工具常常诱导人们把事情排的一个接一个，然后很快就几乎没有喘息的时间了。一个没有空档的日程表简直是你搭乘倦怠列车的车票。
Jess 喜欢用满负荷的高速公路做类比。一个满负荷的高速公路其实和一个满员的停车场没什么差别，你无法满足任何额外的需求。哪怕你只是犯了一个小错误，结果都会是一场车祸。
每个人对空档时间的利用都不尽相同，对 Jess 来说，这是帮他找到工作和生活间平衡点的好办法。
找到你的平衡点Jess 说，完美的一天需要精神和肉体的多重激励。为了从精神上激励自己更好的完成任务，他试图在工作和生活间寻找一个平衡。
在驱动项目的日子里，每当他埋头代码几小时后，他就会找个时间去和朋友小聚。“这样我可以和别人交流”，给繁重的技术日程加入社交的元素，让他觉得自己依然鲜活，并且很容易保持效率。
有时，运动是他克服繁重工作的另一个方法。“像我现在就穿着运动服，这个上午效率非常低，所以稍后我打算去跑一会步，我希望这可以提升接下来的效率。” 体力运动对 Jess 来说有两个目的：一方面可以先回退一步，然后站在未来视角重新评估现在的进度，另一方面内啡肽的释放也可以让他为项目注入更多能量。
构想美好前景构想最终结果是开始一个项目的非常高效的方式。当 Jess 打算花时间构思新项目时，他通常会从结果入手。
“我试着先去设定最终结果，然后从结果去逆推我该如何达成这个目标”。Jess 还喜欢在构想结果时提高标准，他认为这样可以降低无法完成任务的风险。
举个例子，如果他正在写一篇博客，他会在给定的时间内设置一个更早的截止。因为当他真正需要的是做文章大纲的时候，他可能会花费太多的额外时间进行网上搜索或者起草一个吸引人的介绍。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>国内开源镜像站点汇总</title>
    <url>/posts/97e9ea5a.html</url>
    <content><![CDATA[国内开源镜像站点汇总一、站点版（一）、企业站
网易：https://mirrors.163.com/（2021.2 已用容量估计：13.9T）
搜狐：http://mirrors.sohu.com/
阿里云：https://mirrors.aliyun.com（部分镜像同步延迟超过 1 天）
首都在线科技股份有限公司（英文名 Capital Online Data Service）：http://mirrors.yun-idc.com/
华为云：https://mirrors.huaweicloud.com/
腾讯云：https://mirrors.cloud.tencent.com/
平安云：https://mirrors.pinganyun.com/
开源社 / Azure 中国：http://mirror.azure.cn/
OpenTuna/AWS 中国：https://opentuna.cn/（2021.2 已用容量估计：21.94T）

（二）、教育站
中国科技大学：https://mirrors.ustc.edu.cn/（2021.2 已用容量估计：46.1T）
清华大学：https://mirrors.tuna.tsinghua.edu.cn/（2021.2 已用容量估计：77.7T）
北京外国语大学：http://mirrors.bfsu.edu.cn/（2021.2 已用容量估计：81.4T）
北京交通大学：https://mirror.bjtu.edu.cn/
北京理工大学：http://mirror.bit.edu.cn/web/
兰州大学：http://mirror.lzu.edu.cn/
上海交通大学：http://ftp.sjtu.edu.cn/，ftp://ftp.sjtu.edu.cn/（华东南地区教育网出口）
大连东软信息学院：http://mirrors.neusoft.edu.cn/（2021.2 已用容量估计：10.6T）
浙江大学：http://mirrors.zju.edu.cn/
重庆大学：http://mirrors.cqu.edu.cn/（当前已用容量估计：3.93T）
南阳理工学院：http://mirror.nyist.edu.cn/
中科院高能物理研究所：http://mirror.ihep.ac.cn/，http://mir-cern.ihep.ac.cn/
西北农林科技大学：https://mirrors.nwafu.edu.cn/，https://mirrors.nwsuaf.edu.cn/
华中科技大学：http://mirror.hust.edu.cn/（华中地区教育网出口，2021.2 已用容量估计：4.06T）
大连理工大学：http://mirror.dlut.edu.cn/（大连地区教育网出口）
山东女子学院：http://mirrors.sdwu.edu.cn/
西安交通大学：https://mirrors.xjtu.edu.cn/（西北地区教育网出口）
上海交通大学 SJTUG：~http://mirrors.sjtug.org/~（已关闭） https://mirrors.sjtug.sjtu.edu.cn/
南京邮电大学：http://mirrors.njupt.edu.cn/
南京大学：http://mirrors.nju.edu.cn/
同济大学：https://mirrors.tongji.edu.cn/
华南农业大学：https://mirrors.scau.edu.cn/
东莞理工学院：https://mirrors.dgut.edu.cn/（2021.2 已用容量估计：5.55T）
重庆邮电大学：http://mirrors.cqupt.edu.cn/https://mirror.redrock.team/（当前已用容量估计：1.68T）
云南大学：http://mirrors.ynuosa.org/index/（镜像站列表）,http://pypi.opensource.ynu.edu.cn/（收录 pypi）
哈尔滨工业大学：https://mirrors.hit.edu.cn/
南方科技大学：https://mirrors.sustech.edu.cn/

（三）、教育站校内
西安电子科技大学：https://linux.xidian.edu.cn/mirrors/（镜像仅供校内使用）
南开大学：http://ftp.nankai.edu.cn/（镜像仅供校内使用）
天津大学：http://mirror.tju.edu.cn（镜像仅供校内使用，另一域名为 zyrj.org）
南京师范大学：http://mirrors.njnu.edu.cn/（镜像仅供校内使用）
电子科技大学：http://ubuntu.uestc.edu.cn/（西南地区教育网出口西南，首页近一年无人维护，内容可访问）
中央音乐学院：http://fundawang.lcuc.org.cn/（镜像仅供校内使用）
青岛科技大学：http://mirrors.qust.edu.cn/（镜像仅供校内使用）

（四）、其他
常州贝特康姆软件技术有限公司 (公云 PubYun)：http://centos.bitcomm.cn/，http://mirrors.pubyun.com/（当前已用容量估计：2.3T）
豆瓣 pypi：http://pypi.doubanio.com/，https://pypi.doubanio.com/
v2ex 的 pypi：http://pypi.v2ex.com/（首页有 https 异常 NET::ERR_CERT_COMMON_NAME_INVALID）
淘宝 NPM：https://npm.taobao.org/
Ruby China 的 RubyGems：https://gems.ruby-china.com/
淘宝 TAEMaven 仓库镜像：http://mvnrepo.tae.taobao.com/content/groups/public/
阿里云 Maven 仓库镜像：http://maven.aliyun.com/nexus/content/groups/public
阿里云 Jcenter 仓库镜像：http://maven.aliyun.com/nexus/content/repositories/jcenter/
LinuxEye：http://mirrors.linuxeye.com/
移动云镜像站：http://mirrors.bclinux.org/
Cloud-Stack 镜像站：http://mirrors.cloudstack-china.com/
cn99(常州贝特康姆旗下)：http://mirrors.cn99.com/
龙芯开源社区：http://mirrors.loongnix.org/（只收录龙芯镜像）
英荔教育：https://mirrors.e-ducation.cn/
injdk.cn 的各版本 JDK 镜像：https://www.injdk.cn/
百度 Go Module 仓库代理：http://goproxy.baidu.com/

（五）、确认关闭的镜像站
北京航空航天大学：http://mirror.buaa.edu.cn/，http://mirror.buaabt.cn/（2012 年建立，2014 年关闭。镜像站关闭后不久，未来花园 BT 关闭。）
青岛大学：http://mirror.qdu.edu.cn/，https://mirror.osqdu.org/（2009 年建立，2012 年关闭，OSQDU 主要管理人员无法继续维护）
炼数成金 Apache 镜像：http://apache.dataguru.cn/（2016 年关闭）
猫扑 Apache 镜像：http://labs.mop.com/apache-mirror/（2016 年关闭）
人人网 Apache 镜像：http://labs.renren.com/apache-mirror/（2016 年关闭）
开源中国社区：http://mirrors.oss.org.cn/，http://mirrors.oschina.net/（2015 年关闭）
希网网络 cn99：http://ubuntu.cn99.com/（域名 CNAME 跳转到网易镜像, 2016 年 9 月重建）
ZMX - IT 技术交流论坛：http://mirrors.itzmx.com/（域名跳转到清华镜像）
中国科学院：http://www.opencas.org/mirrors/（2016 年 5 月关闭）
电子科技大学 LUG 镜像：http://mirrors.uestc.xyz/（2016 年 4 月关闭）
北京邮电大学：ftp://ftp.bupt.edu.cn/pub/mirror/（2016 年 9 月关闭，清空 FTP）
西南大学：http://mirrors.linuxstory.org/，http://mirrors.swu.edu.cn/（2016 年 6 月关闭）
电子科技大学星辰工作室：http://mirrors.stuhome.net/（2016 年 8 月关闭）
noc.im：http://mirrors.noc.im/（2016 年 8 月关闭）
LUPA：http://mirror.lupaworld.com/（2016 年停止同步，无实质内容）
远景：http://mirror.pcbeta.com/（2016 年 6 月关闭）
山东理工大学：http://ruby.sdutlinux.org/（2016 年 9 月关闭）
新浪：http://mirrors.sina.cn/，http://mirrors.sina.com/（只收录 CentOS，2015 年 3 月上线，2016 年 10 月关闭）
中国地质大学：http://mirrors.cug.edu.cn/（2016 年 11 月关闭）
北京化工大学：http://ubuntu.buct.edu.cn/（2016 年 11 月关闭）
中国互联网络信息中心：https://mirrors.cnnic.cn/（只收录 Apache 镜像，2017 年 4 月关闭，现 CNAME 到清华大学镜像）
腾讯 Bugly：http://android-mirror.bugly.qq.com:8080/（只收录 Apache 镜像，2017 年 4 月关闭）
海波网络镜像：http://mirrors.hypo.cn/（2017 年 5 月关闭）
吉林大学：http://mirrors.jlu.edu.cn/（2017 年 10 月关闭）
厦门大学：http://mirrors.xmu.edu.cn/（无实质内容）
中山大学：http://mirror.sysu.edu.cn/（无法访问）
东北大学：http://mirror.neu.edu.cn/（2017 年后接近无人维护状态）
郑州大学：https://mirrors.zzu.edu.cn/（无法访问）
电子科技大学凝聚网络安全工作室：http://mirrors.cnssuestc.org/（无法访问）
南京信息工程大学：http://mirrors.duohuo.org/（无法访问）
江苏开放大学：http://mirrors.jstvu.edu.cn/（无法访问）
上海科技大学：https://mirrors-wan.geekpie.org/（无法访问）
南京信息职业技术学院：https://mirrors.njcit.cn/（无法访问）
南京邮电大学通达学院：http://mirrors.tdsast.cn/（无法访问）
燕山大学：http://mirror.pret-page.com/（无法访问）
上海大学：https://mirrors.shu.edu.cn/（无法访问）
中国电信天翼云：http://mirrors.ctyun.cn/（无法访问）
开源镜像文件搜索：http://mirrors.org.cn/（无法访问）
Linux 运维派：https://mirrors.skyshe.cn/（无法访问）
北京鹏博士宽带：http://mirrors.btte.net/（无法访问）
Fayea 工作室：http://apache.fayea.com/（无法访问）
黔东南开源镜像站：https://mirrors.gzqdn.org/（无法访问）
联创团队：https://mirrors.hustunique.com/（无法访问）

二、软件版（一）、操作系统类
Ubuntu


网易：http://mirrors.163.com/ubuntu-releases/
首都在线科技股份有限公司：http://mirrors.yun-idc.com/ubuntu-releases/
阿里云：http://mirrors.aliyun.com/ubuntu-releases/


Centos


网易：http://mirrors.163.com/centos/
搜狐：http://mirrors.sohu.com/centos/
阿里云：http://mirrors.aliyun.com/centos/


Centos-vault (Centos 的旧发行版源)


阿里云：http://mirrors.aliyun.com/centos-vault/
清华大学：https://mirror.tuna.tsinghua.edu.cn/centos-vault/
南京大学：http://mirrors.nju.edu.cn/centos-vault/


树莓派 Raspbian


搜狐：http://mirrors.sohu.com/raspbian/
中国科技大学：http://mirrors.ustc.edu.cn/raspbian/
浙江大学：http://mirrors.zju.edu.cn/raspbian/
重庆大学：http://mirrors.cqu.edu.cn/raspbian/


FreeBSD


ChinaFreeBSD：http://chinafreebsd.cn/article/chinafreebsd-resouce
中国科技大学：http://mirrors.ustc.edu.cn/help/freebsd.html

（二）、服务器类
Tomcat、Apache


清华大学：https://mirrors.tuna.tsinghua.edu.cn/apache/
北京理工大学：http://mirror.bit.edu.cn/apache/


Nginx


搜狐：http://mirrors.sohu.com/nginx/


MySQL-ftp


网易 163：http://mirrors.163.com/mysql/Downloads/
搜狐：http://mirrors.sohu.com/mysql/
USTC：http://mirrors.ustc.edu.cn/mysql-ftp/Downloads/


MySQL-repo


OpenTuna/AWS 中国：https://opentuna.cn/mysql/yum/
平安云：https://mirrors.pinganyun.com/mysql/yum/


PostgreSQL


浙江大学：http://mirrors.zju.edu.cn/postgresql/
中国科技大学：http://mirrors.ustc.edu.cn/postgresql/


MariaDB


清华大学：https://mirror.tuna.tsinghua.edu.cn/help/mariadb/
中国科技大学：http://mirrors.ustc.edu.cn/help/mariadb.html


mongodb


阿里云：http://mirrors.aliyun.com/mongodb/
清华大学：https://mirrors.tuna.tsinghua.edu.cn/mongodb/


VideoLAN


大连东软信息学院：http://mirrors.neusoft.edu.cn/videolan/
中国科技大学：http://mirrors.ustc.edu.cn/videolan-ftp/

（三）、开发工具类
AdoptOpenJDK


清华大学：https://mirrors.tuna.tsinghua.edu.cn/AdoptOpenJDK/
南京大学：http://mirrors.nju.edu.cn/AdoptOpenJDK/


eclipse


大连东软信息学院：http://mirrors.neusoft.edu.cn/eclipse/technology/epp/downloads/release/（推荐，维护及时）
中国科技大学：http://mirrors.ustc.edu.cn/eclipse/technology/epp/downloads/release/
北京理工大学：http://mirror.bit.edu.cn/eclipse/technology/epp/downloads/release/


Oracle JDK


华为云：https://repo.huaweicloud.com/java/jdk/


安卓源码 AOSP


清华大学：https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/
中国科技大学：https://lug.ustc.edu.cn/wiki/mirrors/help/aosp


Docker/k8s 容器镜像 (docker.io、gcr.io、k8s.gcr.io、quay.io、ghcr.io、nvcr.io 等常见公共容器镜像仓库)


DaoCloud：https://hub.daocloud.io/
阿里云：https://dev.aliyun.com/search.html
中国科技大学：http://mirrors.ustc.edu.cn/help/dockerhub.html?highlight=docker
azk8s.cn：http://mirror.azure.cn/help/docker-registry-proxy-cache.html(仅 Azure 中国 IP 可用)


GitLab-CE


清华大学：https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/
南京大学：http://mirrors.nju.edu.cn/gitlab-ce/


PyPi


豆瓣：https://pypi.doubanio.com/simple
阿里云：https://mirrors.aliyun.com/pypi/simple/
清华大学：https://pypi.tuna.tsinghua.edu.cn/simple/,https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/


前端公共库（jquery/vue/angular/bootstrap 等）


cdnjs.net：https://cdnjs.net/
BootCDN：https://www.bootcdn.cn/
baomitu/360 前端：https://cdn.baomitu.com/
七牛 / staticfile：http://www.staticfile.org/
新浪：http://lib.sinaapp.com/

三、官方镜像列表状态地址
CentOS：http://mirror-status.centos.org/#cn
Archlinux：https://www.archlinux.org/mirrors/status/
Gentoo：https://www.gentoo.org/downloads/mirrors/#CN
Ubuntu CD：https://launchpad.net/ubuntu/+cdmirrors
Ubuntu 软件源：https://launchpad.net/ubuntu/+archivemirrors
Debian：https://www.debian.org/mirror/list，https://www.debian.org/mirror/list.en.html，http://mirror.debian.org/status.html
Kail-image：http://cdimage.kali.org/README.mirrorlist
Linux Mint：https://linuxmint.com/mirrors.php
Fedora Linux/Fedora EPEL：https://admin.fedoraproject.org/mirrormanager/mirrors
openSUSE：http://mirrors.opensuse.org/
PackMan：http://packman.links2linux.org/mirrors
FreeBSD：https://www.freebsd.org/doc/handbook/mirrors-ftp.html#mirrors-cn-ftp
Apache：http://www.apache.org/mirrors/#cn
Cygwin：https://www.cygwin.com/mirrors.html
CRAN：https://cran.r-project.org/mirrors.html
CTAN：http://www.ctan.org/mirrors/，http://www.ctan.org/mirrors/mirmon#cn
CPAN：http://www.cpan.org/SITES.html
Ruby：https://www.ruby-lang.org/en/downloads/mirrors/
树莓派 Raspbian：http://www.raspbian.org/RaspbianMirrors
深度操作系统 deepin：https://www.deepin.org/mirrors/releases/
Scientific Linux：https://www.scientificlinux.org/downloads/sl-mirrors/
Sabayon Linux：https://www.sabayon.org/mirrors/
MySQL：http://dev.mysql.com/downloads/mirrors/
KNOPPIX：http://www.knopper.net/knoppix-mirrors/
QT：http://download.qt.io/static/mirrorlist/
VideoLAN：http://www.videolan.org/videolan/mirrors.html
eclipse：http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/luna/SR2/eclipse-java-luna-SR2-win32.zip&amp;format=xml
repoforge：http://mirror-status.repoforge.org/#cn
Jenkins：http://mirrors.jenkins-ci.org/status.html#CN
MariaDB：https://mariadb.com/kb/en/mirror-sites-for-mariadb/

四、几个官方 cn 子域解析
FreeBSD：ftp://ftp.cn.freebsd.org/&lt;—&gt;ftp://www.freebsdchina.org/FreeBSD China
Debian：http://ftp.cn.debian.org/&lt;—&gt;https://mirrors.ustc.edu.cn/debian/ 中国科学技术大学
Debian：http://ftp2.cn.debian.org/&lt;—&gt;https://mirror.tuna.tsinghua.edu.cn/debian/ 清华大学

五、镜像站搭建参考
清华大学镜像管理器脚本，https://github.com/tuna/tunasync
搭建开源镜像站 - FPs，http://fangpeishi.github.io/build_opensource_mirror.html
科大开源软件镜像是怎样炼成的，https://ring0.me/2013/09/how-ustc-mirror-works/
北京交通大学同步脚本，https://github.com/ideal/mirror
中国科学院同步脚本，https://github.com/opencas/mirrors
浙江大学同步脚本，https://github.com/zjulug，https://github.com/ZJU-NewMirrors
重庆邮电大学同步脚本，https://github.com/CQUPTMirror
兰州大学同步脚本，https://github.com/LZUOSS/Mirror
教育网主干节点分布，http://www.cernet.com/aboutus/gyce_jgsz.htm
教育网 CERNET 八大主干节点及地区节点，http://blog.csdn.net/gsls200808/article/details/75099728
教育网 41 核心节点，http://www.cernet20.edu.cn/family.shtml

六、镜像站异动情况
2016-11-13: 新浪镜像站全网无法访问，由 17ce 提供测试结果
2016-11-13: 北京交通大学镜像首页访问出现 403Forbidden
2016-11-13: 哈尔滨工业大学镜像目录被清空
2016-11-13: 中国地质大学镜像站全网无法访问，由 17ce 提供测试结果
2016-11-13: 北京化工大学镜像站全网无法访问，由 17ce 提供测试结果
2016-11-13: 云南大学 pypi 镜像地址无法访问
2016-11-13:Linux 运维派镜像首页访问出现 404
2016-11-26: 新浪镜像站截至目前已经失联 51 天，移至关闭列表
2016-11-26: 首都在线移至企业站列表，首都在线是国内的一家主机商，有国内节点和海外节点
2016-12-10: 哈尔滨工业大学镜像目录截至目前已经超过一个月无法访问，移至关闭列表
2017-1-5: 北京化工大学镜像截至目前已经超过两个月无法访问，移至关闭列表
2017-1-5: 中国地质大学镜像截至目前已经超过两个月无法访问，移至关闭列表
2017-1-5: 新增南京信息职业技术学院镜像，这个镜像在 2016 年 11 上线
2017-1-5: 新增龙芯开源社区镜像，这个镜像应该是很早（2015 年之前）就建立了只是不对外，目前只更新龙芯镜像
2017-1-6: 新增上海交通大学 SJTUG 镜像，据 v2ex 上的消息，这个镜像于 2016 年上线用来替代原来的上海交通大学镜像，不过目前这个镜像的发展情况也不乐观
2017-5-17:cnnic 镜像，腾讯 bugly 镜像于 2017 年 4 月关闭
2017-5-17: 海波镜像于 2017 年 5 月关闭，新增南京邮电大学通达学院、燕山大学、黔东南开源镜像站 3 个镜像
2017-5-17: 新增南京邮电大学镜像
2018-1-19:ubuntu 的 cn 子域 cn.archive.ubuntu.com 不再指向阿里云，改为指向美国 IP(91.189.91.26)（18 号 DNS 切换，全网无法正确解析）
2018-5-16: 更新上海交通大学 SJTUG 镜像，新地址已经包含了原先的 ftp.sjtu.edu.cn 大多数镜像，且新增了大量现代源
2020-11-2: 清华大学和中国科技大学 11 月 30 日接到热心用户投诉，移除了 deepin 软件源，原因是设计商业软件重分发授权。参见：https://bbs.deepin.org/post/204649
2020-11-2: 东北大学镜像通过近两年来的访问监测，2017 年后无更新内容，移动到关闭列表。
2020-11-17: 哈尔滨工业大学镜像重开
2021-2-5: 因 Oracle JDK 8u203 开始改变授权模式，无法免费商用，新增替代版免费 JDK：AdoptOpenJDK

]]></content>
      <categories>
        <category>教程学习</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>讲演：如何通过记录生活感想，获得自由？</title>
    <url>/posts/89700c7d.html</url>
    <content><![CDATA[上周应 36 氪朋友的邀请，我做了一次有关个人成长主题的分享，标题是：「如何通过纪录生活感想，获得自由？」。下文是这次分享的 PPT 内容。
整个分享持续 2 小时，是我过去几年的全总结，分为三部分：
第一、我的故事 —— 讲述我如何从焦虑中走出，实现了三项收入和职业转换的全过程。
第二、写作价值全流程 —— 分享我通过写作创造价值的所有秘密。
第三、启发 —— 讲述如何通过系统把愿景与每日践行关联，适用于每个普通人。
通过本次分享，我希望让大家理解到：
第一、精神自由与财务自由并不矛盾
第二、普通人可以通过简单的方法，成为更好的自己，最终获得自由
第三、实现梦想的关键是把自己当成一个开放系统去运营，同时朝着目标，每日践行。
一些额外的福利给知识星球的辉友，在置顶消息中有高清版本的 PPT（PDF 格式），「驱动人生的一页纸」和「极简工作日报指南」。
除此之外，本次分享的现场录音（100 分钟左右），会在知识星球中分享出来（可能会分段发出，也可能一次发出），请辉友们最近三天多刷置顶消息 —— 这段语音价值千金，因为它纪录了我改变的所有关键行动和感想。
如果你意犹未尽，想知道我在两个小时的时间都讲了哪些关键细节，欢迎来知识星球的置顶消息中获得现场分享的录音。讲演部分语音（长约 100 分钟）从周日开始上传知识星球。
仅仅是这段 100 分钟的讲演录音，其真实价值就远超 1000 元。
参考文章：讲演：人生的未来之路，以「开放系统」的方式运营人生  
前一篇文章：写不动怎么办？
365 天，每天坚持写作之 322/365，爱上你的每一天！
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>运用潜意识来控制信念</title>
    <url>/posts/19328004.html</url>
    <content><![CDATA[信念的力量有多大？这是一个无以估量的结果。或许从亨利成功后的话语里，可以领略一点：“当我相信时，它就会发生！” 你肯定从电视、报纸等媒体的传播中得知人类曾创造了很多生命奇迹的真实故事。譬如，人与沙漠中遇险，并在不可能的情况下幸免于难；在遇到地震后，于饥饿、干渴中挑战生命的极限……
这些故事都有一个共同点：处在绝境中的主人翁，有一个信念在支撑着，他们才得以活下来。心理学家表明：人的行为受信念支配**，你想要做出什么样的成绩，关键在于你的信念。**所谓信，就是人言，人说的话；所谓念就是今天的心。两个字合起来就是，今天我在心里对自己说的话。
若一个人在心里老是不停的埋怨自己，我不行！很难想像 &lt;/wbr&gt;，他会在今后的人生中做出怎样的成绩；相反，若一个人在心底深处总 &lt;/wbr&gt; 是不停地鼓励自己，我能行！那他在人生中获得成功的机会就大 &lt;/wbr&gt;。人只有相信自己，才能成功。
人的信念就是所谓的意识和潜意识，一般人学习的时候 &lt;/wbr&gt;，都是运用意识的力量。然而，世界潜能大师博恩 · 崔西曾经说过：&lt;/wbr&gt;“潜意识的力量比意识大三万倍以上。” 所以，任何的潜能开发 &lt;/wbr&gt;，任何的希望要实现，都要依靠我们的潜意识。
那我们怎样运用我们的潜意识呢？

运用潜意识的第一个方法，就是不断地想像，改变自我内在的一个影像 &lt;/wbr&gt; 和图片；
第二个影响潜意识的方法，也就是要不断地自我暗示 &lt;/wbr&gt;，或是所谓的自我确认。每当我们想要实现任何一个目标的时候，就不断地重复地念着它。

假设我们想要成功，就念我会成功，我会成功，我一定会成功 &lt;/wbr&gt;；假设我们想赚钱，你就念我很有钱，我很有钱，我一定会很有钱 &lt;/wbr&gt;；假设我们想要自己的成绩提高，就告诉自己，我的成绩不断地提升 &lt;/wbr&gt;，不断地提升，我的成绩一定会不断地提升；假设你想存钱 &lt;/wbr&gt;，就不断地告诉自己，我很会存钱，我很会存钱，我很会存钱。
这样不断地反复地练习，反复地输入，当我们潜意识可以接受 &lt;/wbr&gt; 这样一个指令的时候，所有的思想和行为都会配合这样一个想法 &lt;/wbr&gt;，朝着我们的目标前进，直到达到目标为止。
很多人试了这个方法，没有效果，原因是因为他们重复的次数不够多 &lt;/wbr&gt;。影响一个人潜意识最重要的关键，就是要不断地重复，不断地重复 &lt;/wbr&gt;，再一次地重复，大量的重复，有时间随时随地不断地确认你的目标 &lt;/wbr&gt;，不断地想着你的目标。这样的话，你的目标终究会实现的。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
  </entry>
  <entry>
    <title>阳志平：职业十二问</title>
    <url>/posts/e5c73aed.html</url>
    <content><![CDATA[人生不同阶段，总会面临各种重大抉择，其中最重要最难的就是职业。年轻人如何选择职业？人到中年，如何转变职业生涯？在三四线城市如何发展？创业者最重要的事是什么？阳志平老师这篇《职业十二问》能给你参考。Part 1：如何选择职业？Q1.  选择职业时的注意事项？
Q1：阳老师关于选择职业有什么特别强调的？

答：职业选择方面可以注意这三点：
第一，轻度脑力劳动 + 中度体力劳动。所谓重度脑力劳动、重度体力劳动；轻度脑力劳动、轻度体力劳动。虎行似病，鹰立如睡；人不能同时从事重度脑力劳动 + 重度体力劳动，如翻译这类职业，此类活动容易导致大脑崩溃，我们的大脑并不是围绕这类模式设计的。我们的大脑最擅长胜任「轻度脑力劳动 + 中度体力劳动」类的活动。医生则是属于「重度体力劳动 + 中度脑力劳动」类职业。
人类容易高估自己胜任重度脑力劳动的概率，各类心理疾病由此引发。为了你的身心健康，请尽量选择「轻度脑力劳动 + 中度体力劳动」。二十几岁时可以从事「重度脑力劳动」，到了三四十来岁，通过不断锤炼技能，降低工作复杂度，则成了「轻度脑力劳动」。你不要逞强，三四十岁时还在干重度体力劳动或者重度脑力劳动，那是反人性的。你的每次重要职业生涯选择，应当能逐步降低你的劳动烈度。
第二，鹰击蛇行，各行其道。如果你是一个草根，请尽可能不要装精英，否则会放大你的性格弱点。
什么样的人适合走精英路线？那些学霸出身，本科北大清华，硕博哈佛耶鲁等，这样的人适合走精英路线。但大多数人由于各种原因，父母一代积累不足，再加上年少时不懂事，努力不够，这时就适合走草根路线。何为草根路线？早早工作，早早进入社会实践，早早地观察社会，然后通过行动来改变社会。
精英路线自上而下，先影响少数人，再影响大众。草根路线则是先影响大众，自下而上。这两种路线会自然结合，随着年龄增长，成长起来的草根会学习精英的做事方法，真正的精英也在学习草根如何接地气。
第三，基础概率大于个人意志力。凭借个人意志力杀出重围是反人性的。反之，顺其自然会更好。好的职业生涯发展要在一个好环境下，得到高人指点，然后获得大量练手机会。比如，在中关村与三四线城市找科技公司的工作，中关村更容易。这就是基础概率不同导致的差异。一般来说，从基础概率出发，选择职业需要注意：地点 ＞ 行业 ＞ 导师 ＞ 职业＞ 公司 ＞ 薪资。
Q2. 如何选择一生志业？
Q2：请问阳老师，如何选择一生从事的志业？自己目前凭直觉有一个小的方向，但如何判断这个方向没有受到大众审美影响？对普通人来说，如何选择一份安心踏实又适合自己的工作?

答：  志业是涌现出来而非事先选择的。在你刚毕业，开始工作时，尽可能寻找到你认识的最聪明的团队去工作，这样很多问题会迎刃而解。尽可能在一个智力密集型而非人际关系密集型的团队中工作。在工作时，你可以遵从保罗 · 格雷厄姆（Paul Graham）《如何才能去做喜欢的事》的建议，尽可能创造一个令人觉得不可思议的作品，这样能更好地帮助你找到一生喜欢从事的事业。
年轻时受制于生理周期、理性发育周期，多数时候是不靠谱的。此时，典型表现是做事情不容易有始有终。为什么容易出现这类行为？因为人类容易高估自己的位置，倾向以为上级领导、同事清楚自己在想什么。但是人家其实不知道你在想什么。所以，在职业生涯早期，即使没有找到志业，也尽可能让自己做事有始有终。怕的是借寻找一生志业的借口，不断损人品。
更多可以参阅我的《工作谈：高阶模型》一书（电子版地址：http://t.cn/RIek5Ka ，访问密码：openmind ）与《记住你的样子：写给毕业生的十篇文章》系列文章。
Q3. 看得见的未来不叫未来
Q3：阳老师是否会做长期规划并定期调整？还是在大时间周期的某个原则指引下直接向前推进？

答： 我不建议精密规划。正如图灵奖得主 Richard Hamming 所言，「在许多领域，通往卓越的道路不是精确计算时间的结果，而是模糊与含糊不清的。没有简单的模型成为伟大。」
我更建议的是，从好的学习习惯系统、好的知识创造系统等「细节正确」的事情入手，保证每天有心流产生。现在这个社会很多人希望自己成为厉害的人，但实际上这点不重要，因为你永远会碰到比你更厉害的人。
比如我的很多好友在不少方面都比我厉害，甚至各位同学的普通话都比我标准。但我接受自己的不完美，慢慢的，十来年过去之后，很多东西都变得不一样了。我不喜欢做长期规划，如果非要说有的话，那么我的长期规划就是成为一名内在动机驱使的人，其他随意。比如我早年从事心理测量，现在从事认知科学，跨越这两个不同领域，都是内在动机驱使的结果。
看得见的未来不叫未来。未来一定是看不见的，你难以预测自己的未来走向，全神贯注，拼搏当下，获得自增长。在职业生涯多数时候，没有人会花心力来肯定你，因此，人们常常将误解为对自己的肯定。比外在肯定更重要的是，你得成为一名内在动机驱使的人。
Part 2：如何转变职业生涯？Q4. 如何转行？
Q4：在体制内工作多年，想职业转型，如何提高成功的可能性？

答：先说两个案例。我的一位朋友，原来在武汉一所高校教统计学，三十多岁转行去了上海，现在是业界知名的数据科学家。他的成功转型主要有几点：1、内在动机驱使———数据科学是自己的兴趣；2、坚持输出——多年坚持写 R 语言的博客，数据科学圈的人都认识他，请他去做分享，很多工作机会自然而然来。 3、给自己设置缓冲器。刚开始转行时，他不介意起点低、收入低，把它看作一个过渡期。
说了成功案例，再说一个转型失败的案例。以一位在事业单位工作多年的人为例。她原来在小地方工作，生活稳定，但情感不太顺利而单身，在当地成了大龄男女青年。然后三十来岁，去深圳工作。因为路径依赖，以前擅长做财务、工作岗位是做会计，应聘时依然是会计，这样就坑死自己了。
在一线城市工作，她发现自己还是跳不出以往的循环。这就是大多数人职业转型的状况，用十来年的时间，为高三时一个月做出的错误选择承担责任。职业转型要尽可能跳出路径依赖，不要受过往的思维定势束缚，可以选择一个全新的行业全新的职业，带来的机遇更大。
总的来说，第一，职业生涯转型退一步进两步；第二，尽可能的跟社群在一起，让社群来给自己做缓冲；第三，尽可能从事未来的职业，而不是过去的职业；第四，职业生涯转型一定要越转越符合自己的内在动机，千万不是越转越符合外在声望，那样你未来碰到的大坑会越来越多。
Q5. 可能的自我
Q5：阳老师，转行有什么推荐的思想资源？

答： 从来没有哪一个年代，转行变得司空见惯：创业、跳槽不再新鲜；斜杠青年、间隔年成为时尚。转行有风险，并不是每次都会带来好结果。职业生涯转变，我推崇可能的自我理论。什么是「可能的自我」？它是由斯坦福心理学家马库斯（Hazel Rose Markus）提出的，根据马库斯的定义，「可能的自我」是三我：希望我、预期我与恐惧我：

希望我：希望自己达到的自我；

预期我：预期自己能达到的自我；

恐惧我：害怕自己成为什么样的人的自我。


你是由许多个自我组成，这些自我部分不仅仅像传统观念认为的那样，由你的过去决定，它很大程度上也会取决于你目前的环境以及你对未来的希望和恐惧。
「真实的自我」植根于过去；而「可能的自我」立足于现在与未来。一部分「可能的自我」通过你当前所做的事情和我们现在所在的公司确定；另一些「可能的自我」却仍然模糊不清，只存在于你的个人梦想之中。
马库斯的学生埃米尼亚 · 伊瓦拉 (Herminia Ibarra) 写了一本书叫《转行》，将「可能的自我」理论应用到职业之中，向人们揭示了成功转变职业生涯的新方法。这套新方法揭示了太多反鸡汤的科学研究。比如，你需要放弃寻找那并不存在的「真实的自我」，应努力去发现「可能的自我」；痛苦并非成功之母，它只会带来行为瘫痪；成功的转行是先做后想而非先计划后实施。
Q6. 平台之辩
Q6：从事金融行业，是不是最好去一些很大的平台？在大平台大公司的背景下，如何获得个人发展？但是如果无法选择大平台的时候，个人怎样来提升自己的视野和思路呢？

答： 年轻人成长无非两条路：赶上一条大船启航，获得了足够多的练手机会；自己走了与众不同的路，用时间换练手，给自己创造了足够多的练手机会。多数人只看到第一条路，而忘记了第二条路，就像坎贝尔所说，「你是否能忍受十年的默默无闻？」
平台没有你想象中的那么重要。一旦想象只能活一年，你马上发现平台一点都不重要。如果在这个假设下，你依然觉得还是离不开平台，说明你和平台捆绑得太紧密了，可能会有一点点危险。如果在这个平台中你始终是很弱的一方，这意味着平台对你还是有价值的。如果你发现在平台上已经是老大了，你要赶紧离开这个平台，开始跃迁。
即使是金融行业，平台的作用也在削减。未来多数行业，标准化产品可能都没有太多的机会。标准化的产品做得再好，都会被财团垄断。多数创业机会是由精英小团队运营的非标准化产品。以金融行业举例，一个人工智能武装的精英小团队会胜过一个又一个平台。
整个世界最核心的力量有三：教育、技术与设计。判断你是不是跟这个世界的主流趋势一致，就是你有没有掌握教育、技术和设计这三个核心武器。第一个教育，它的本质是人人交互。第二个设计，它的本质是人机交互，能否创造一种新的人机交互方式。第三个是技术，它的本质是机机交互，能否创造一个新的协议，使得机器和机器之间更高效通讯。这三个武器相互融合，对这三个武器的掌握能使你更好的理解世界的运作，得以用有限的知识撬动无尽的世界。更多参阅我的老文：《人性与暴力：论智力侵略》。
Part 3：世界人与高铁人Q7. 不同职务序列的成长周期
Q7：如何选择合适自己的职务序列？

答：伴随越来越多高素质人才参与创业，创业逐步演化为兵团作战格局，一个能坚持到最后的创业团队日益需要七项全能：1）产品；2）技术与设计；3）运营；4）市场与销售；5）融资；6）支持。7） X。
如果你是一位刚出茅庐的新手，在不同方向之间迷惘。按照我的老文《心智工具箱（8）：资本论》，将个人成长需要的资本理解为：心理资本、技能资本、社会资本与政治资本四大类。各个职务序列要求的资本优先级分别是：

产品： 心理资本 &gt; 技能资本 &gt; 社会资本 &gt; 政治资本

技术与设计：技能资本 &gt;  心理资本 &gt; 社会资本 &gt; 政治资本

运营：技能资本 &gt; 社会资本 &gt; 政治资本 &gt; 心理资本

市场与销售：社会资本 &gt; 政治资本 &gt; 心理资本 &gt; 技能资本

支持：心理资本 &gt; 技能资本 &gt; 社会资本 &gt; 政治资本

投融资：政治资本 &gt; 社会资本 &gt; 技能资本 &gt; 心理资本


![][img-8]  
上述各资本，培养周期最漫长的是政治资本，什么是政治资本？简而言之，你能作为左派、右派、九零后创业者的代言人，是谓政治资本；培养周期最快的是技能资本，相对来说，在具备天赋潜力的前提下，市场与销售 &gt; 运营 &gt; 产品 &gt; 技术 &gt; 设计。心理资本则更多关乎性格、乐观等，受环境与基因等影响颇深；社会资本则是人人看重，但其实是职业生涯早期最无需投入力气做的事情 —— 当你是人才了，人才自然会聚齐到你身边。
更详细的解释参考我的老文：《工作谈 011：不同职务序列的成长周期》（参见 《工作谈：科技公司基础技能》一书，电子版地址：http://t.cn/RMsVS8Z ，访问密码：openmind ）。
Q8. 产品经理的养成
Q8：产品经理如何结合自己的成长目标，设计学习成长路径，挑选最源头最有价值的学习材料，系统地建立、深入的知识体系和产品能力？

答：产品经理这一行极其特殊。产品经理的培养可以类比飞机驾驶员。不要高估自己的产品能力。90% 的人不适合做产品经理，就像 90% 的人不合适开飞机。不合适的人要去选择更适合自己的职业。
如何高效成为产品经理？天赋很重要，要有很好的逻辑思维与审美能力。但除了天赋之外，更重要的是有锻炼机会。看书不重要，建立知识体系也不重要，有搞砸几款产品的机会最重要。跟飞机驾驶员的培养一样，重要的是这种实战机会。
驾驶员在飞行员培训班有初阶训练，类似产品经理会画原型与拍需求，但那只能成为三流的产品经理。如果你想成为准一流的产品经理，要尽量寻找那种能搞砸几款产品的机会。从 0 开始，快速成功快速失败，一旦参与多了，很多事情就自然明白了。
产品经理难培养的原因，跟没那么多飞机给你开的道理是一样的。没有这种机会怎么办？可以去开模拟机。你可以通过翻译来提高写作，拿自己的翻译跟张爱玲、余光中的翻译来对比。类推到产品能力培养上，你可以提前预判一些新产品，或者回溯成熟产品的版本记录。一般来说，下述这些要点都是产品经理基本功：

看过行业中百分之七十以上的竞品，形成了对行业的直觉；

拜访过行业 top10 中的至少 2 家公司及其 CEO，明白媒体报道之外的更多内隐知识；

每周至少实际接触一位用户，在不同产品周期下与不同数量的用户交朋友；

拥有不错的信息架构设计能力，能够将看似个性的需求整合到一个简单清晰的信息架构之下；

经常在头脑中推演用户交互或使用的各种可能，提前发现产品逻辑可以再打磨的地方；

善于沟通与决策，能确定需求的关键次序；

审美不错，文字表达清晰，能够减少设计师、程序员反复修改的时间。


如果说产品团队的核心能力有三：商业设计；产品架构；运营体系，对于产品团队来说，最容易提高的是产品架构能力与运营能力；最难提高的是商业能力。商业训练，恰巧是绝大多数产品经理训练忽略的部分。这点是要格外提醒大家的。
Q9. 三线城市如何感受同侪压力
Q9：1) 随着在开智部落阅读经典著作，发现自己的惰性很强，学习习惯不好，自己又身处三线城市，线下聚会难参加; 2) 在三线城市如何感受更多同侪压力？3) 在三线城市如何去打造一个更近未来的时间源头？

答：我在 2016 年生日答疑时，提出了世界人与高铁人的概念。精英青年的未来趋势是成为世界人 + 高铁人。成为世界人是向源头走，利用信息差与智力差套利。比如经常前往硅谷等时间源头，拥有国际化视野与未来眼光，将极大提升竞争力。成为高铁人是指年轻人每一两个月去 「二三线城市」，而非 「五六线城市」呆上一阵。
中国正在形成以高铁为链接纽带的十大超级城市集群。一线城市的人才聚集优势日益明显，对于吸引年轻人才有极大优势。这些年轻人才在一线城市感到巨大的同侪压力，此时很容易产生不自信等现象。
周边的人很优秀，短期内赶不上，总觉得自己努力没成效。但是成为高铁人，一两月跑上几趟二三线城市，就能明显感觉到自己的成长速度。还能了解大众生活，接地气，有助于成长。
反之，在三线城市生活，也可以不断往返一线城市。比如每隔一段时间来硅谷、北京待上两周，多请一些朋友吃饭聊聊。而不是像以前一样，仅仅是为旅游而旅游，现在是为行动而行动。
比如开智部落一个同学，他在威海参与创办了一个青年组织，再不断往返一线城市，做得非常不错。并非所有人要把家人扔在老家，自己来一线城市工作。这种决策不符合我的审美观。我的审美观是「最小成本」，我更推崇顺其自然。所以三四线城市的同学通过高铁及各种方式，也能形成自己的新天地。没有源头，就自己创造一个源头！
Part 4：成为创业者Q10. 我是否应该加入创业公司？
Q10：我是否应该加入创业公司？如何评判一个创业公司？

答：评判创业公司首先要看创始人的初心，如果创始人只是随大流、投机主义，比如看到市场 O2O 很火爆他也去搞，那么这种创始人就不能选择；第二是看创始人是否有维护初心的能力。
2016 年 Hacker news 上有一篇文章 Big Company vs. Startup Work and Compensation  引起了轰动。原因很简单，因为这篇文章击中了 Hacker news 读者痛点。作为科技创业者，人人都以为自己能改变世界、从事有趣的事情、且能在创业中学到更多经验与更多东西。
然而，在这篇文章中，作者 danluu  使用 YC 孵化器等公开数据，一一质疑了创业公司的三个假设：到创业公司工作比较容易赚钱，创业公司的工作比较有意思以及学东西比较快。作者的论证过程，你可以直接去看原文：http://t.cn/R4yWiKQ 当然，看 Hacker News 评论更精彩：http://t.cn/R4yWiK8
创业公司几乎所有的优点都是有问题的。YC 孵化器的创业者本身水准已经超过了多数创业者的水准。去创业、加盟早期创业公司，注定是高风险低回报。那么，我们为什么还喜欢走这条路呢？此时，有请诗歌上场。
「我们读诗、写诗并不是因为它们好玩，而是因为我们是人类的一分子，而人类是充满激情的。没错，医学、法律、商业、工程，这些都是崇高的追求，足以支撑人的一生。但诗歌、美丽、浪漫、爱情，这些才是我们活着的意义。」同样，我们创业、加盟创业公司并不是因为它们好玩，而是因为「创造」才是人类活着的意义。
未来的趋势一定是创业公司越来越多，这是为什么呢？我们仍然可以用信息量的角度来分析。自从人类社会步入 2010 年后，信息量日益增长，信息指数级跃迁已经完成。信息透明与信息爆炸会带来一个什么样的问题？
原本混日子的，以及评定指标不清晰的，直接感受到了来自社会大环境的压力，于是，绩效日益两极分化。未来逐步会有更多优秀个体成为公司 CEO ，几乎所有的大公司都会发展出自己的投资基金、内部孵化器、创业生态链。除了创始人之外，最合适加入创业公司的有这么几类人：

职场新手：穷、资源少、经验少、人脉少、机会成本低、时间多、体力足、喜欢新东西、学新东西速度快；

职业生涯转型者：有一定行业积累、年龄略大、机会成本高、时间宝贵、体力下降、学习新东西速度慢一些；

终身学习者：喜欢冒险与挑战自我，喜欢从事新行业新职务。当很多新行业出现了，比如人工智能，之前压根没有类似行业，从哪找工作？此时，加入创业公司，陪着新行业一起成长，是一个上佳选择。


这三类人的本质是什么呢？第一类人是用时间换机会，扩大自己的生存空间，博取更大的机会，反正失去成本不高，加盟大公司与加盟创业团队，成本类似；第二类人则是用金钱买机会，因为对以往的职业生涯不满，希望获得更大提升，乐意为此付出非常昂贵的金钱，但需要短时间内解决问题；第三类更多希望获得新行业新岗位带来的机会。
![][img-12]
因此，当判断自己是否合适加入创业团队的时候，得停下来，想一想，我究竟是 偏向机会？偏向稳定的新职业？还是偏向在一些炫酷的新行业玩？不同动机决定了不同人是否合适。
从动机到性格，较好的关联是。如果是性格偏顺从，内在动机从小不强的人，那么加入创业团队不一定是好事。在一个稳定的大团队中，这类性格反而会发挥更多优势。
如果从小性格偏独立，很小的时候就学习依赖内在动机，个人有很多乐趣、想玩的事情，那么这类人更合适加入偏新行业的创业团队。对于职场新手来说，则问题简单，判断自己是否合适加入创业团队的关键就是，是不是有好的导师带自己？
无论如何，对于这三类人来说，最重要的是自己能否获得足够多的机会。机会源自什么？来自与大量的人、大量的机器的交互。它们可以是用户，也可以是专家；还可以是机器与数据。在一个只能给我提供认识 10 个大牛的创业团队，与一个像开智一样，能提供认识 100 个大牛的创业团队，我选开智。
在一个只能接触到一百个妈妈的幼儿园工作，与加盟爱贝睿，在一个能认识百万妈妈、从事儿童教育的公司工作，我选爱贝睿。甚至机器也是如此，我会选择一个能跟数万台服务器而非几台服务器打交道的公司。（长期欢迎各位给我投递简历，职务描述参见：http://t.cn/REAh6l7 同时也可以参考：开智元范）
Q11. 创业者如何与历史趋势共舞？
Q11：阳老师您如何看待全民创业？

答：这轮全民创业潮与以往极大的区别是，有太多新行业在快速出现，比如，人工智能、虚拟现实、大脑科技。
它的驱动力来自三点：1）专业人士的解放。一夜之间，中层都可以出来单干了，并且失败了，重新回去仍然被认可，试错风险不大。2）九零后的成长。90 后借助微信等平台快速进入成人圈，备受信息轰炸，个人得以快速成长。3）中国对外的智力输出。中国企业到了面向国际输出智力的时候，部分企业已经具备国际竞争实力了。这种示范效应，将日益明显。
现在的问题无关是否反对「全民创业」，而是如何在「全民创业」成了时代主题曲的时候，你如何平衡家庭事业；如何平衡自己的过去利益与未来长期利益；如何平衡创业与投资。无论如何，创业不要违背历史趋势。
举个例子，公司证劵化是未来十年历史趋势之一。将优质公司赶到资本市场上去，同时将其证券化，公募市场能参与。这是中国未来十年最大的经济事件之一。它一方面是对冲国家信用拐点带来的各类风险；另一方面，也是用经济信用换政治信用，所谓金钱换时间的制度性建设。
另一个趋势是能数字化的就数字化，程序员会一直短缺。工业自动化之后是工业信息化再是工业智能化。中国的软件业已经走到智能化这一步；轻工业走到信息化这一步；重工业则将完成自动化。所以未来跟数字化相关的产业一直颇有机会。
假定「真实的自我」、「理想的职业生涯」、「顺利的创业」不存在，然后基于「试错机制」，自然浮现出「伟大」。对于个体来说是残酷的；对于社会来说，是正常的。进化保留的机制，会让每个人都以为自己会「伟大」，所以创业者容易高估自己的能力，但大的趋势比个人努力有时更重要。比如在经济下滑趋势下，做教育其实是比较稳妥的；其次是健康；再次是娱乐。经济下滑周期，选择 教育 / 健康 / 娱乐 这三个大行业，错不了太多。
Q12. 创业者最重要的是什么？
Q12：如果 BP 只能写一页，阳老师您认为什么最重要？另外，您认为对于创业者来说，最重要的是什么？

答：最重要的是与众不同的思维模式。目前风险投资界普遍流行的话语体系是基于战争隐喻，如 A 轮 / B 轮 / C 轮，如赛道如卡位如布局。然而，决定早期创业公司成败的从来不是竞争，而是成长。谷歌不是因为想与雅虎竞争而诞生；Facebook 不是因为想与 MySpace 竞争而诞生；iPhone 不是因为想与诺基亚手机竞争而诞生。
你可以采取另一种更容易使创业成功的思维模式：从战争隐喻到树形隐喻。在树形隐喻视角下，我不再是为了跟谁竞争而诞生，不是为了别人而活，而是为了自己的成长而活。具体而言，创业的树形隐喻包括这样的一个逻辑：最小支点 =&gt; 最小产品 =&gt; 最小团队。

最小支点是大树的根。你要告诉我，你的根是什么。未来五年十年后，你的创业项目始终在捍卫什么？这个最小支点从语言学角度来说，它是名词；它不可再切分。

最小产品是树浮出地面之上的部分。围绕这个最小支点，你们搭建了什么样的产品模式？选择了什么样的信息架构与商业模型？

最小团队是树的守护者。你们团队有什么资质或者气魄，能够证明自己未来五年十年内，能够不断保护这棵树的成长？


作为早期创业团队，如果说最重要的事情，或许就是一个与众不同的思维模式。■
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>黄有璨：写在开始奔四的这一年</title>
    <url>/posts/441f74f.html</url>
    <content><![CDATA[【  众生记  】  
《三节课 • 众生记》是一个记录一系列互联网人和他们的真实经历、故事的原创内容栏目。
借众生，看自己。
编辑写在前面的话：
黄有璨，三节课的发起人之一，他是领我进三节课的人，也是现在我的 BOSS。
当初来三节课面试时，我就惊讶，这个看起来并没有比我大多少的年轻人，竟然有着如此清晰严谨的思维，对职业和对公司都有着明确可操作的规划，并且整个人就像一个小太阳，不断向外传播着积极向上的能量。
我也是后来才知道，那时他刚刚三十岁。
三节课从正式有了自己的办公地点，初具创业公司的形态以来，到现在为止，差不多是正好一年。老黄也从三十而立，逐渐演变为他自己说的 “奔四” 的人了。
公司在成长，老黄也在成长。那么老黄又是怎么看待他的这一年，怎么看待他的成长，看待他这一年的得与失的呢？以下是正文部分

到今天，此刻，我走完了开始奔四的第一年。
这是有趣而又令我享受的一年。
一曲我极其喜欢的《礼物》，送给自己和你们。

礼物 音乐： 许巍 - 时光 · 漫步 ![][img-1]  ![][img-2] 
差不多一年前，我迈过自己的 30 周岁关口，开始奔四。
按照国人传统的说法，从彼时开始，我便已 “步入而立”，理应进入到人生的全新阶段。
今天回望起来，这一年对于我而言，的确是很不同的。
1.
我有个朋友曾经说过：一个成年人所遭遇的 90% 以上的问题往往都来自于对自我认识的不够清晰。
我对此则深有同感。
某种意义上，我相信一个人，唯有既看透了这个世界的本质，又充分看清了自己之后，你才能够更清楚地得到某种 “使命感”，知道自己在这个世界上到底该何去何从。
而我也相信，为了看清自己，你往往需要先经历足够多的事，得到足够多的反馈，才能以此为参照去不断审视自身，最终得出某些可以让你 “心有所信” 的结论。
因此，自我 2008 年进入互联网行业开始工作之后的 5-6 年时间里，我一直在找寻和探索着自己的方向。
在那段不短的时间里，我给了自己足够开放的空间去接触各种环境、各种人、各种事。我去过外企互联网公司，在央视体系下短暂驻足过，创过业，去过一线巨头型的互联网公司，先后负责过媒体、社区、平台、工具等各类产品，既经历过从 0 起步做过几万付费用户，也经历过用户近百万之后与竞争对手的激烈搏杀，也看过一个千万用户体量的产品是如何运作的。
在有了这些足够丰富的体验之后，围绕着 “我到底对哪些事更有兴趣” 以及 “我到底更适合去做些什么” 这样的问题，我开始渐渐有了一些若隐若现的答案。
而到了这一年，我发现这些答案开始越发变得聚焦和异常清晰起来。
比如说，我越来越发现，我对于 “学习” 这件事，是存有一些执念的。用我的话讲，我这辈子注定了一定是要好好围绕着 “学习” 做点事的，以及在内心深处，我也相信 “学习” 是一件美好的事情。
又比如说，可能恰恰是因为我经历过的产品和环境足够多足够丰富，我发现，针对 “运营” 这个互联网行业中大家公认是很难讲清楚的“玄学”，我似乎慢慢开始可以找到一些自己的逻辑和方式能够把它稍稍讲得更清楚一点点。
再比如说，我也渐渐发现，我对于 “内容” 和“文字”方面的敏感和某些驾驭能力，似乎是要显著强于大多数人的，我善于通过内容和文字把价值传递给其他人。
并且，与大多数人做内容都喜欢追求瞬间短暂的爆发不同，我做内容的逻辑更多是细水长流厚积薄发型的，我渐渐有了某种强烈的自信：做内容，如果是要比短时间内追热点造势做 10W+，可能我比不过很多人。但若是把时间周期拉长，要比的是在三年五年甚至更长的时间周期内是否能够持续产出优质、有穿透力的内容，我相信少有人能比得过我。
如果要举个不一定恰当的比方，我也许不擅长百米短跑，但要是比的是马拉松，我相信能比得过我的人有限。
2.
当我有了上述那些越来越清晰的答案后，我开始慢慢觉得，有些事情，可能天生就应该是属于我的使命和责任——一方面，我相信这些事是有价值的；另一方面，我也相信，对于做好这些事，我是一个 “对的人”。
进而，我就会特别想要在这些自己真心相信的事情上去践行，去产出，去试着证明和留下一些什么。
古人亦有言之：三十而立。因有此说，很多人通常也会把 30 岁看作是人生旅程中的分水岭——你的人生后续走向如何，也许在你三十岁前后，即可窥见一斑。
或许与上面提到的两方面因素都有关，在整个这一年中，我时常都会有一种特别强烈的 “时不我待” 的感觉——我开始迫切的想要让自己要去完成或实现些什么。
我觉得，也许每个人的生命中，都会遇到一些时刻和场景会让你觉得 “自己注定就应该是在这里留下些什么的”，对一个心有念想的人来说，这样的时刻和场景如果错过了，你会遗憾终生。
对我来说，我觉得我就正处在这样的时刻中。
3.
与此同时，也是这一年里，我开始真正找到了一种方式，可以不妄求，不受外界影响，不被恐惧和欲望所绑架，而是让自己可以长久保持内心的平静。
我猜，这其实与 “看清自己” 也息息相关。
举个不一定恰当的例子，如果是在 3-4 年前，一本别人都在交口称赞的书拿到我手里我却死活看不进去的时候，我总是会倾向于认为这是自己的问题，然后开始玩命跟自己较劲拧巴。
然而，在今天，同样一本别人口中的 “好书” 我尝试了 2-3 次仍然发现自己无法吸收或消化其中的内容，我会认为这是这本书不适合我——至少是现阶段不适合我，从而心安理得的把它扔到一边。
同样类似的一个例子是，在 3-4 年前，我总是更关注自己身上有哪些短板，以及该如何补足它们，而到了今天，我更加关注的东西，渐渐变成了如何找到自己身上的长板，然后将其发挥到极致。
这样的变化，让我可以更加专注和心无旁骛。
在 2013 年年底我结束自己的第一次创业之旅时，我就开始跟很多人说：我越来越相信，失败并不那么可怕，真正可怕的事，是你失去了内心的平静。
而到了今年，我觉得我才真正做到了可以让自己远离我口中那些 “可怕” 的事。
4.
因为一系列的因缘巧合和变化，这一年里，我也常常会觉得，我进入到了我人生当中迄今为止最好的一个阶段。我隐隐感觉，这似乎注定会成为我生命中至关重要，甚至是里程碑式的一年。
在过去整整一年时间里，我在绝大多数时间里基本都保持着每天至少工作 12 小时以上，没有周末，在我印象中，上一次我处于这种高强度的工作状态中，还是 4 年前自己第一次创业的时候。
但，与 2012 年我第一次创业时的感觉截然不同，这种忙碌的状态带来的不是焦虑、紧张和压力，而更多的是专注、充实、心无旁骛和乐在其中，于我个人，这是前所未有的。
这种状态带来的直接效应，就是我个人在产出在这一年里变得前所未有的高，前所未有的丰厚。比如——

在这一年里，我跟 luke、老布一起全职创办了三节课（sanjieke.cn）——这是我个人的第二次创业，截止到目前，它已经是一家 30 人规模、拥有稳定收入来源的公司，并且我可以毫不夸张的讲，三节课的团队，是我十多年职业生涯里迄今所亲历过的氛围最好的团队，我为自己能够参与打造出来一个这样的团队而自豪；

在这一年里，我写完了一本销量应该不会太低的书——《运营之光》，迄今为止，这本书在豆瓣的评分是 8.6 分，如果你熟知豆瓣站内的评分体系，你会知道这个分值其实还挺高的，这还是在这本书目前的第一个印刷版本在排版、字号、图片等方面被很多人大量吐槽的现实前提下；

在这一年里，粗粗算来，我先后已完成了累计超过 400 小时的各类分享，并录制完成了接近 100 小时的课程（如果算上哪些 NG 掉的录制内容还会更长）——由此，我可能成为了过去一年的国内互联网行业里在 “运营” 这个类目下的课程生产制作第一人；

还是在这一年里，我从带着两个实习生开始，几乎是纯粹依靠着在 “内容” 方面的输出和努力，就造就了一个在互联网业内口碑良好，且影响力还在越来越大的微信公号：三节课。


上面这几件事，客观讲，任意一个人在一年内能做成其中一件已经很不容易，但我却在这一年里全部实现了它们，这给了我巨大的成就感和自我认同。
5.
大概在 3 年前，我第一次创业的第二年，我就有了一种极其深刻的感受——一个人的进步和提升，往往是受到环境牵引的。你在合适的时候被放到合适的环境和事件中去，自然就会得到巨大的提升和进步。
从那时开始，我总是会试着把自己放到一个 “正确的” 环境中，这些环境往往既需要我动用我的一些已有技能努力工作来供给价值，又对我存在大量陌生、有挑战、需要去学习和了解的成分，还能让我借由这个环境能够尽可能接触到更多比我厉害的高手们，我认为这样的环境将会最有助于我个人的不断提升和成长。
在这一年里，状况也正是这样——

因为要不断讲课、写书和对外表达，我的 “讲课” 和“写作”这两项技能开始真正趋于成熟——那是一种你能够有种 “收放自如” 的感受，以至于，我开始可以越来越准确的去拿捏和衡量用户在看到一堂课程和读到一篇文章时心理状态和体验的高低起伏；

因为在做三节课，我接触了比此前多得多的投资人和行业高手，也跟三节课的同学们一起分析了比我此前分析过的所有产品还要多得多的产品，这一过程让我看待很多问题的视角和立场开始变得越来越宏观，也越来越可以直击本质——比如说，我越来越发现，那些在在行上约我的人，我越来越可以清晰准确的帮助他们锁定问题，并给出有价值的建议。

因为要做课程和写书，我不得不被迫去思考很多更加冗杂混乱的问题，比如说，运营与商业模式间的关系是什么，不同产品的增长引擎差异到底是如何造成的，为什么有些产品好使的运营手段放到另一些产品身上却不那么灵光，等等。必须要说，这些思考往往既费时又痛苦，但当我真的把这些问题都想清楚了之后，我发现，似乎我看待很多问题的视角都已悄悄变得不同，以及，我也越来越觉得，我真的对 “运营” 这件事的理解变得越来越深刻的。

凭借着持续的内容产出，我在小圈子里也算是声名鹊起。这带来的直接价值就是，主动找上门来寻求合作和帮忙的人开始越来越多，我也越来越可以轻松结交到更多牛逼高段位的朋友们。


必须要说，这种似乎每 2-3 个月你自己身上就会发生一点蜕变的感受，是很爽的。
6.
还是在这一年里，变得越来越好的，还有我的家庭。
这背后，有一个漫长、动人和不平凡的故事，或许等到某天时机成熟，我会把它再仔细讲给你们听。
总之，开始奔四的这一年，我幸运的处在一种 “有念想，有坚守，有事做，有人爱” 的状态中，我为此感到幸福和幸运。
7.
如果要说有什么遗憾，这一年里最大的遗憾，就是我踢球的时间开始越来越少。
在我跨过了三十岁的门槛之后，足球——这个陪伴了我接近 20 年，曾经无数次在我疲惫不堪时带给我能量的好伙计，第一次开始从我的生活中渐渐淡出——因为这次创业带来的忙碌和投入，我总是一次又一次地错过球队的训练和比赛，我也曾多次试图挽救和回归球队，但总是短暂而难以持续。
于是，从 2006 年开始，连续 10 年代表同一支业余球队每年至少出战 30 场比赛这个让我骄傲的记录，2016 年在我身上正式终结。
当然，我猜在 “踢球” 这件事上我是不会放弃的，即便从 08 年受过一次大伤之后，我的膝盖已经越来越糟，以至于我们去草原玩的时候，仅仅只是骑了不到 1 小时马，我的双膝就已经疼痛不已无法支持下去。
我曾经给自己许下无数个承诺，其中有一个，就是 “我要努力让自己踢到 50 岁”。
我有一个小笔记本，里面悄悄记着这些许给自己的全部承诺，它们当中的大多数我都成功兑现了，即便没有兑现的，我也切实为之做出过我力所能及的尝试和努力，这一次，我想也不会例外的。
8.
一年前的今天，我发布了一篇文章《站在三十岁面前，我的破、信、立》，在那篇文章中，我写下了这样的内容：

“我发现，我自己越发趋近于相信，每个人在这个世界上都会有一个属于自己的独一无二的位置去发光发热。这个位置在哪里，是由你前三分之一的生命经历决定的。你将会用自己中间这三分之一的生命经历去探寻出这个位置在哪里，以及为了它而去付出行动。然后，你中间这三分之一生命时光里是否真的找到了自己的那个位置，以及是否真的为了在那个位置上可以更好的发光发热而认真努力付出过和获得过产出，则决定了你最后这三分之一的时间里会过得怎么样，是可以臻于圆融清净，还是仍然劳心累骨不得安宁。
以我自己为例，我现在无比笃定视之为使命要去尽力做好的那件事，便源自于我在年少时的前三分之一时间里曾经得到的喜悦、满足和曾经承受过的痛苦，因为曾经被深深刺痛过和被拯救过，才会如此笃定。
这个逻辑，我称之为：是什么拯救了你，你就会想要用它来拯救这个世界。但，这一切的前提，都是你必须得先拥有过足够丰富和深刻的经历和体验。
而中间这三分之一的时间，是用来承上启下的。也即通过探寻自己的过去以明确自己将来的方向，并为之付出行动和有所产出。
探寻，会是一个漫长和艰苦的过程，今天在这里所讲的这些，我之所以能知道并深信不疑，很大程度上源自于过去这 10 年时间里我的探寻和验证。回想起来，这期间的每一件事，从升职加薪到跳槽，从做传统行业到做互联网，从创业到散伙，还有各种数不胜数的或成功或失败了的尝试，没有哪一件不是在做功课。没有这么多的探寻和验证成果在背后帮我背书，这些话，即便我讲得出来，底气也不会那么足。
因而，我也相信，人人都有自己的功课需要做，那些没有做好的和欠下的，总归要还。
这里的探寻一旦完成，有了方向和指引，再需要的就是行动和产出。行动和产出的成果如何，将直接决定了你那最后三分之一的时间可以有多少值得拿出来回味和细细咀嚼的东西，以及中间这三分之一的过程是否无愧无悔，也决定了你那最后三分之一的时间是不是能够心安。
所以，对老黄而言，既然自认已经想得和探寻够清楚，也有自己的相信，那么接下来一个阶段，很明确，将是用心做事的阶段了。
这中间三分之一的阶段，对我而言，才刚刚开始。”

站在今天向回看，我觉得自己在整个这一年当中的经历，可能正是以上这段话的写照和折射。
在佛教思想中，人生常被比喻为一条时时刻刻都在流动变化的河流，所谓诸行无常，一切都在变化。
但与此同时，佛家也提倡，人应当要在这样的 “无常” 中找到某种内心的“定”，从而能够无畏于无常。
我很庆幸的是，我渐渐越发能够理解这两句话。
我也记得，我还有一个朋友讲过一句让我铭记至今的话——
“生活即修行，做事即悟禅。”
站在这个特别的时刻，以这句话收尾，与你共勉。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>关于工作与成长的 121 条具体建议</title>
    <url>/posts/b8b21a05.html</url>
    <content><![CDATA[关于面对批评
01. 没有人对被批评感到高兴。如果有，TA 撒谎。
02. 面对批评，得体的第一反应是 “不急于**解释，不反唇相讥**”。
03. 每天，或者最长每周养成习惯，把自己存在的问题和造成的麻烦用最重的形容词想一遍，诚实的对待自己。当被批评时，会觉得一切还在掌握之中。
04. 很多批评的发生是因为误会。所以，首先建立情感层面的信任，其次澄清事实，然后才是消除误会。这三步能解决大部分因批评带来的关系问题。
05. 被批评时，思考的重点应该是 “我应该从哪里入手解决问题”，而不是 “对不对”。
06. 对 “评论” 不理不睬，对 “批评” 高度重视。
07. 如果对批评有不同意见或者不明之处，直接问当事人的完整意见。别回避。
关于单身生活
08. 单身过的不愉快，有伴侣之后也不会愉快。
09. 单身且愉快，一个重要前提是有较高收入且未来可期。
10. 单身时最值得花时间去做的是投资一切长本事长能耐的事儿：学习、进修、放纵好奇心，因为在有伴侣以后很难再有大块时间可以自由支配。
11. 拥有联系非常紧密的至交好友，且能够共同成长，两个条件缺一不可。不够紧密则对彼此生活缺少实际支持，不能同步成长则无法长期维持关系。
12. 建立自己的生活秩序，但要有弹性。弹性是指随时可以接纳一个因伴侣而带来的新秩序。很多人被动长期单身的原因是因为沉浸在自己的世界里、过度缺乏弹性以至于无法接纳别人。
13. 积极参加有意思的社交活动，认识陌生人，多交朋友。
14. 尽快建立一套自己的 “生活资源系统”：从保姆小时工到相熟的专车司机、发型师、健身教练、全科医生、可 24 小时喊出来帮忙的亲友、直到旅行代理人，把自己的生活置入一种由专业人士服务的环境中。
15. 无论以戏谑或者认真的方式哭诉单身狗的身份，都应该尽量减少。因为最有吸引力的单身是貌似不知道是否真的单身的单身男女。
16. 即使非常享受单身生活，也要保持 “可勾搭” 的待机状态，因为促进荷尔蒙分泌有益身心健康。
17. 选择偏保守的理财方式，给自己买足额的大病保险，小心对待自己的钱。
18. 和婚姻生活质量较高的人交朋友，人在面临重大选择时需要榜样和示范。
19. 不要上来就用长期关系的标准来要求对方，关系是递进的：可见、可约、可睡、可长期交往，然后才是可固定长期关系。在不同阶段，标准不一样。
20. 多参加打球、逛街、饭局、旅行，少参加茶会、禅修、面壁，不要给自己机会沉浸在自怨自怜伤春悲秋的情绪里。
21. 主动点。对一切事。
关于个人形象管理
22. 对普通人来说，“好看” 的意思其实等同于 “体面”。做到体面，完全是任何人能力范围内的事情。并非苛求。
23. 认真看两部《Suits》这样的职场美剧，就知道形象管理的红线在哪里。
24. 清洁是最低标准。对于在现代化城市工作生活的职场人来说，清洁的定义就是每天洗澡每天换衣服擦皮鞋。
25. 你看起来像什么地位，你就是什么地位。
26. 请看起来形象最好的朋友推荐发型师，然后和发型师成为朋友。考察一个好发型师的标准之一是他会给你相对而言最简单的方案而不是最贵的。
27. 把衣服的数量最小化，然后把单价提高到力所能及范围内的最高。
28. 尽快找出自己的 “基本形象”：任何人都会有一个最佳穿衣模式，固定下来。范冰冰也得把胳膊大腿挡起来的时候才最好看。只是大多数人因为不够自信而不肯把问题简单化，总是在做无谓的尝试。
29. 在职场露乳沟、露腋毛、露半拉屁股，都跟美丑无关，只是不体面。
30. 健身可以帮助你更好的认知自己的身体，再贵的衣服也纠正不了驼背弯腰的仪态。
31. 总体而言修身（不是紧身）的造型对男女来说都会显得人更精神。
32. 不存在减不掉的体重，只是有没有纪律的问题。
33. 一个人从里到外让人有 “看起来好干净” 的感觉，是一种极高的形象水平。这一条对老头儿都适用。
34. 那些质疑个人形象管理重要性的人从来都不会知道因为糟糕的形象而损失了什么。
关于重大选择
面临事业、婚姻等等改变人生轨迹的重大选择时，我的心法，仅供参考。
35. 尽自身最大努力做到有钱、好看、有本事、受欢迎，手里的牌多一些，做选择的主动性就高一些。
36. 选择大于能力。有人管这个就叫 “命运”。其实是一种长期被忽略的能力：关键时刻快速做出最优选择的能力。
37. 最优选择就是对个人远期价值最大化的选择。过于关注当下利益往往是人生的大坑。那些抱着要给未来的孩子找个好爸爸的女生在婚姻生活中往往过得比寻找最佳男朋友的女生要好，就是这个原理。
38. 成大事者不纠结。一旦决定，全力以赴。
39. 掌握 “概率权”。两张牌，一张掀起来保证给你一百万美金，另一张有百分之五十的概率有 1 个亿美金，或者为零。想清楚，选哪张？怎么选？
40. 可以征求别人的意见。但是这个 “别人” 是特指那些你由衷佩服和学习的对象。
41. 无论别人给你什么意见，都要记住决定是你自己的。不要依赖别人，更不要把后果归罪于外。
42. 远离安全的舒适区。
43. 远离颠倒梦想，乐于动手做具体事，少想，多干。
44. 做选择时不要只看自己，要看如果做了一个决定之后，你会和什么样的人混在一起。事业选择这一点尤为重要。
关于人际关系
45. 良性的人际关系只有一种，叫做独立自主、强强联合。从来就没有抱团取暖这回事。
46. 做到对别人有价值，是建立良性人际关系的前提，哪怕是暂时只创造了微小的价值，也有价值。
47. 所有关系中最多正向循环最少事后负担的，是交易关系。市场最残酷但也最善意。
48. 所有关系中最危险最有破坏力的，是纯感情关系。所以，一段关系要想良性发展，要有能力从纯感情喂养，发展成 “复合材料”：比如就婚姻而言，激情不长久，但是双方可以成为共同成长的伙伴，或者某个具体目标的合作者。甚至就亲子关系而言，也可以发展出协同学习的伙伴关系。
49. 不成为别人的负担。这包括了不成为别人的心理和时间负担，接受别人对自己的不接受。
50. 对自己负责。这包括了对自己的选择和决定负责，承受由之而来的任何结果。
51. 定期梳理和剖析自己的原生家庭和亲密关系。适度学习一点帮助自我认知的方法，清楚认识并且正面接受自己在人际关系中的短板和问题。大量的人际关系能力缺陷是在原生家庭中已经形成，无需自卑或者自责，因为正面接受自己是战胜这一问题的开始。而且大部分人的大部分心理障碍是可以被消除的。
52. 第一反应是选择信任别人，但是同时保持独立思考的能力。
53. 人际关系不仅有交互频率这一个维度，还有交互深度。熟人未必是知己。
54. 远离巨婴、远离不具有建设性能力的人。
55. 人际关系是一个人真实自我的外在镜像。
关于命中贵人
56. 贵人是那些在关键时刻给出关键点拨的人。他们有能力呈现世界的本来面目。路原来就在那里，但是没有他们的指路你就看不见。
57. 他们之所以愿意帮你是因为他们的修行，而不是因为我的能耐和好处。
58. 对他们最好的回报是努力成为和他们一样的人。
59. 贵人不是等到的，是寻到的和求到的。前提是对他们而言至少你不是减分项。
60. 以求道之心与人交往。
61. 举手之劳、锦上添花，才是良性关系。不要求人雪中送炭。跟世态炎凉没关系，有则感谢珍惜，无则检讨自己。
62. 务必定期让人看到帮你的结果，分享喜悦和成果。
63. 逢年过节快递两盒点心，送一辈子，也不算有礼。若想要感谢对方，花心思观察，送出终身难忘的礼物。
64. 不要黏着对方，不要成为别人的负担。要让对方感觉掌握关系的主动权。人家帮过你，但最怕被要求帮你一辈子。
65. 有机会帮别人的时候，姿态放低再放低，尽量不让对方有心理压力。帮完之后，对方不提，自己不提。
66. 也许终有一天你会超越那些你生命中曾经那么重要的人，往前看，别害怕。既往不恋。
关于压力管理
67. 压力是公平的。真正在入世过活的人，没有人能够置身事外。坚信这一点，不易起怨懑之心。
68. 职场压力和生活压力无法互换消解。因此不要把压力释放错了地方。
69. 做一个乐观的悲观主义者。因上努力，果上随缘。
70. 充分想象最坏的结果，如果认为是无法承受的后果，一定源于自身的贪婪，果断踩刹车。君子不立危墙之下。
71. 压力无法被替代，注意力可以被转移。到难以承受之际，刷一小时消消乐，剧烈运动两小时，都可以回血。问题依然还在。但不妨缓口气再来。
72. 有无话不说且旗鼓相当的朋友。说出来可能是最有效的减压之道，并非有人可以安慰你，而是因为站在别人的视角重新看一遍问题会简单很多。
73. 做不到 72，就试着把压力和问题写下来，只给自己看。然后会发现其实没有那么复杂。
74. 永远用最直接的方式面对压力源。拖延和迂回只会让压力变大。
75. 如果压力影响睡眠超过一星期，立即服用褪黑素。否则一个月后大概率就是抑郁症。
76. 永远不做任何不能让别人知道的决定和交易，无论好处有多大。
77. 不要用血拼、喝酒、嗑药、饕餮、滥交来缓解压力，否则一觉醒来你会面对压力 2.0。
78. 把压力想象成一个具体的形象，比如一只怪兽，每处理一步，就在脑海里给丫一拳。
关于工作习惯
79. 自己最受益的工作习惯是做笔记。最佩服的是会面后最先共享笔记的人。
80. 当日事当日毕能提升工作中的幸福感。
81. 有关人的问题，都不可拖延，不要心存侥幸，认为可以避免直面冲突或对方可以心领神会。越晚着手，问题会恶化的越严重。难听话必须当面说、尽早说、直接说。
82. 个人行动养成彩排的习惯。打腹稿、做预案。认真准备，就能发现达到一个目标的 N 种途径，行动中灵活不纠结。
83. 团队作业养成复盘的习惯。不追究具体人责任，着眼于我们学到了什么。
84. 如果工作性质与人打交道比较多，尽量把会议、会面集中安排在一周中的某几天，这样总时间会缩短。可以留下自己书面作业和从事内部事务的时间。
85. 如果是管理者，每天固定拨出一些时间与团队成员做非事务性交谈。少则扯淡十几分钟亦可。养成尊重和关注人的习惯。
86. 每天琢磨核心数据。问出好问题。
87. 与人面对面交流时不刷手机。
88. 开会时敢于并善于终结无实质意义的对话，直切主题。致力于达成行动共识。
89. 准确记录与别人的约会，不迟到。
90. 做粗略的工作计划比做详细的计划更接近实际情况，更容易被执行。
91. 出席别人的活动，认真做事前准备，不可一套说辞走世界。准备全套的个人公开资料及时提供给主办方。尽早提交讲稿。
92. 每天早中晚三次集中时间段处理社交媒体、邮件等方面的信息。不要随刷随到。这是最节省时间的办法。
93. 如果是管理者，学会问和听一个好问题：你有什么想法？
94. 购置最好的工作装备。
95. 睁大双眼找个好搭档。和聪明人一起工作。
关于自我成长
96. 早晚你会知道，这个世界上没有别人。你所看到的都是你自己的认知模式创造的镜像。
97. 与此同时你会知道，这个世界上全是别人。所谓反复追寻的 “真我” 实在是小到不能再小的东西。
98. 同时知道并接受上述两点，自我成长这件事才真正开始。
99. 最难的在于不断建立更高的标准，为了解决这一问题最有效的方式是不断结识更好的榜样。
100. 在人际关系中做一个能力型 “势利眼”，向上看、向前看，与比自己优秀的人交往。
101. 既往不恋。不回头。不怀旧。不惋惜。
102. 以真实的、认识的人为榜样，而不是 “传说” 中的。因为真人会在每天的交往中给你真实的压力。
103. 要寻找和接收那种叫做 “Calling” 的东西。克服 “如何怎样就很好了” 的小地主心态。
104. 慎独。守心如镜。
105. 每天独处时问问自己，今天有什么是比前一天做的好的。哪怕是对快递更认真的说谢谢。
106. 不做负面表达，负面包括讽刺、抱怨、指责、争论、批评、牢骚、大话、评价议论。凡事从建设性出发。
107. 认真记录并揣摩与别人的交往。
108. 尽可能扩大自己的阅读面。文科生多读点科学著作，理科生不妨研究点文学艺术。阅读是为了理解人。
109. 带徒弟是逼迫个人成长的绝招。
110. 不相信 “适当的年龄” 这件事。除了生孩子，想做任何事情都不会被年龄限制。
关于机会和陷阱
111. 世界上最大的陷阱，叫做 “机会型陷阱”。
112. 评估一下这件事对多少人有利？越是多赢的局面，越可能是个机会，反之如果只有你占尽便宜，那肯定不是机会。
113. 想想这件事是不是很容易做到？有两种事。一种是机灵事：开头就炸，但是越来越没劲。另一种是苦逼事：开头特难，但是越干门槛越高。前者是陷阱，后者是机会。结硬寨、打呆仗是不变的真理，很容易实现的事情，是机巧，不是机会。
114. 看忽悠你干这个事的人跟这事的关系。如果对他在精力上只是业余兼职，在财富上只是锦上添花，而你要付出全部精力，搭上全部身家。那么，要警惕是个陷阱。
115. 周边人赞成与否不重要，但是否出手帮你很重要。一旦开始干，帮你的人越来越多的事，机会。反之，陷阱。  
116. 因资源而启动的事，容易翻转为陷阱。因顺势而发生的事，容易找到机会。
117. 推动社会新分工的事，也就是越来越多的人靠这事吃饭养活一家老小的事，机会。在各种裂缝中套利，除了你谁都没好处的事，陷阱。  
118. 做成之后，容易被巨无霸们摘果子的事，陷阱。做成之后，自成体系的事，机会。换句话说，南瓜不会结在树上。有命长出来，没命 hold 住。
119. 就算做成了，也有后遗症的事，陷阱。就算做不成，也长本事长江湖地位的事，机会。
120. 摊在桌上打明牌也能干的事儿，机会。必须遮遮掩掩唯恐别人知道的事儿，陷阱。
121. 你孩子长大了为你骄傲的事，机会。反之，陷阱。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>一生只用富一次</title>
    <url>/posts/f89ecf83.html</url>
    <content><![CDATA[你好，我是 S 叔。
很多人都在说，创业容易守业难，可没几个人能说出 “守业” 到底难在哪？创业三年，我也一直在反思，自己做对了什么，做错了什么。
前几天看到了老喻的这篇《一生只用富一次》，发现我最近的一些想法，和其中的一些观点不谋而合：
比如说，投资最大的秘诀不是成为胜者，而是成为剩下来的那个；与其追求一夜暴富，倒不如追求相对安全的选择，尽量少踩坑，离成功会更近一些。
我相信，这些观点不仅仅适用于赚钱，投资，也同样适用于追求人生的幸福。
所以，今天就借花献佛，把这篇文章分享给你，希望可以帮助你在赚钱，投资，守财以及人生的路上，走的更稳，更好，更长久。
“摆脱一次幻觉比发现一个真理更能使人明智。”
——路德维希 · 伯尔纳
有人说，赚钱容易，守财难；
有人说，从穷到富最艰难。因为马太效应，穷人更穷，富人更富。
罗斯柴尔德如此阐述成功的必要条件：

“要有极大的勇气和足够的谨慎，才能创造巨额财富。而要守住这些财富，要付出 10 倍于创造财富所需的才智。” 

然而，本文既非讲如何赚第一桶金，也不是说怎样实现财富保值增值，而是瞄准这两件事情的 “共同敌人”：  
爆掉。
投资最大的秘诀就是活下来，不是胜者为王，而是剩者为王。
本文标题也许会引发读者的两种阅读好奇：
1、一个人一生如何实现富一次？
2、一个人为何一生只用富一次？
同时，“一生只用富一次” 这句话，也势必因为其朗朗上口，而付出恶俗鸡汤的代价，被相当多人理解为：
我这辈子和（hu）一把大牌就够了。
有趣的是，这句话并非完全不对，但若以此为目标就完全错了。
本文的 A 部分，讲了几个 “一生只用富一次” 的正面与反面故事。
本文的 B 部分，总结了 “爆掉” 的 5 种可能形式：
1、你自己爆掉；
2、你身边的人爆掉；
3、你的职业生涯爆掉；
4、你的财富爆掉；
5、你的精神世界爆掉。
你要做的，就是降低以上 5 种可能发生的概率。
这个世界上最聪明的人会告诉你，与其追逐得到财富，不如采用逆向思考，力求做到不 “爆掉”，这么做难度更小，你实现财富和幸福的确定性会更高。
本文的 C 部分，总结了本国人民经常陷入的 10 个投资大坑。
投资并无秘诀。本文的 D 部分，介绍了几个靠谱的基本原则。
本文的 E 部分，探讨如何实现 “持久富足”。很多超级富豪不仅会赚钱，而且爱思考，我研究了那些伟大的榜样，将他们的智慧梳理出来，供自己学习，也希望对你有用：

1、从用脑袋赚钱切换到用屁股赚钱；
2、诚实是一种策略；
3、找到能力圈和舒适圈的黄金交叉点；
4、“两眼” 战略；
5、构建个人核心能力；
6、个人安全边际的实现；
7、“黑天鹅” 的正面应用；
8、从 “头牌” 到“妈咪”；
9、制定长期路线图；
10、实现持久性知足。

A 部分：只富一次
1
微软凭什么**重回全球市值第一？**
微软曾被视为 “僵尸股”，长达十年公司市值原地不动，维持在 2000 亿美元左右。在此期间做搜索干不过谷歌，做手机大败而归，在大家心目中，属于这家公司的时代似乎已经过去了。
但是不知不觉间，微软在前不久市值超越了苹果，再次夺回了全球市值最大公司的宝座。秘密何在？
微软 2018 年财年收入超过 1000 亿美元，包括三块：
1、第一块业务叫 Productivity and Business Processes，赚了 360 亿美元，其中的大头来自于我们熟知的 Office 365 云端化软件。
2、第二块业务叫做 Intelligent Cloud，赚了 320 亿美元，核心是 Azure 企业级云服务。
3、第三块业务叫做 Personal Computing，赚了 420 亿美元收入，这一块是微软传统的个人电脑业务，包括了个人电脑中的 Windows 云端服务。
有没有发现，微软靠的是把过去的软件服务搬上了云端。
正如盖茨对微软新 CEO 萨提亚工作的评价：
是刷新，而非与过去的完全决裂。
用 “移动为先、云为先、AI 战略” 去刷新我们看起来快要成化石了的 Office 和 Windows。
这便是厉害公司的秘密所在：
只要冲上潮头，只要别乱来，只要适当地顺应时势，他们就能够滑翔很久。
还记得比尔 · 盖茨第一次当世界首富是哪一年吗？有没有感觉他当了好多次了？虽然他卖了大部分微软的股票，并且大举做慈善，但似乎钱总也捐不完似的。
一个人，或者一家公司，一旦富起来，只需要一次，就可以富很久。
2
最聪明的高手**为什么破产**？
长期资本的故事，大家耳熟能详了。包括两位诺奖得主在内的超级梦幻团队，利用一种看起来极为高明的套利方法，迅速赚了很多钱，然后又破产了。
即使是巴菲特，也对此表示不可思议，为什么呢？
第一，他们的智商高得不得了；
第二，他们这 16 个人都是投资领域的老手，加起来有三四百年的经验；
第三，他们大多数人几乎把自己的整个身家都投入到了长期资本管理公司，约投了几亿美金。
他们用的套利方法看起来既聪明又安全，只有极小概率的风险会出事儿，在精确计算的基础上，长期资本用了较大的资金杠杆。
俗话说，每天都有百年不遇的事情在发生。在大赚 4 年之后，几乎不可能发生的事情发生了，地球上最聪明的投资团队破产了。
假设给你一把枪，里面有 1 万个弹仓，其中只有一个里面有一颗子弹。把枪对准你的太阳穴，扣一下扳机，你要多少钱？
巴菲特说，你给我多少钱，我都不干。
长期资本玩儿的就是这种游戏。万分之一是极小的概率，然而一旦发生，却是致命的。

为了得到对自己不重要的东西，甘愿拿对自己重要的东西去冒险，哪能这么干？我不管成功的概率是 100 比 1，还是 1000 比 1，我都不做这样的事。

巴菲特提及一本烂书，有个很有趣的书名：
《一生只需富一次》。

但是他们为了赚更多的钱，为了赚自己不需要的钱，把自己手里的钱，把自己需要的钱都搭进去了。这不是傻是什么？绝对是傻，不管智商多高，都是傻。

看起来道理很简单，然而我们看看过去这些年，又有多少 “首富” 可以善始善终呢？
前天看到一个 2018 年还在富豪榜上的人，因为欠了 4000 万高利贷，被迫拍卖近 15 个亿的银行股权。
这就是所谓：
为自己不需要的 “更多财富”，而押上自己输不起的东西。
3
他抢了李嘉诚 10 个亿
但没去买长江实业的股票
这是一段传奇往事。在绑架了李嘉诚的儿子之后，张子强只身去李家谈判，开价 20 亿。
李嘉诚对此事的应对，可以写入超级富豪教科书。有三点令人难忘：
1、谈判。李嘉诚当场答应对方开价，但称现金没有这么多，只有 10 亿港币。双方最后以 10 亿 3800 万成交。
2、销售。临别前，首富对绑匪说：你可以买点我们公司的股票，保证你家子孙三代不愁衣食。
3、复盘。多年以后，当记者再次问到儿子被绑架，为何如此冷静时，李嘉诚说：

因为这次是我做错了，因为我们在香港知名度这么高，但是一点防备都没有，比如我去打球，早上五点多自己开车去新界，在路上，几部车就可以把我围下来，而我竟然一点防备都没有，我要仔细检讨一下。

结局世人皆知。李超人继续当了很多年超人，而绑匪很快花完了 10 个亿，不久后身首异处。
绑匪是个极端样本，但很好地论述了本文开篇一句有点儿绕口的话：
懂得 “如何富一次”，和懂得 “如何只用富一次”，非常非常不一样。  
美国的统计数据，中了彩票头奖的人，大多结局不妙，有些人甚至不如不要中奖。
亨利 · 考夫曼说过一句话：“破产的有两种人，一种是什么都不知道的，一种是什么都知道的。”
如果说长期资本的聪明家伙是因为 “什么都知道” 而破产，发了横财的人，难免会因为 “什么都不知道” 而破产。
4
难道穷人不该博？
难道人生不就是精彩纷呈？
有人会开启 “杠精模式” 了：
难道穷人不该博吗？
没错，华尔街那帮混蛋为了多赚一点儿，而亏掉自己的几个亿本钱，的确很蠢。但是如果口袋里空空如也，不博一下，又怎么有机会呢？
穷人和年轻人更应该 “敢赌” 吗？
不应该。
搏击和博彩是两回事，拼搏和搏命也是两回事。
年轻人尤其不该赌，原因有四：
1、关键在于 “正期望值”；
很多文章喜欢说要做大概率获胜的事情，这也不对。确切说，是要做 “正期望值” 的事。
只有在正期望值的领域，拼搏才是有意义的。
对于没钱的人，你的时间成本、机会成本、创新活力，其实也是本钱。
2、每个伟大都有一个微不足道的开始；
如果不能从零到 0.1，就永远没机会从 1 到一个亿。
你需要一个雪团，才能滚大一个雪球。
3、自暴自弃会上瘾；
去赌场里迅速输掉口袋里最后几块钱，过把瘾就死，这样的人很快会成为职业韭菜。行为习惯会融入血液，最终铸就了宿命。
4、陷入 “稀缺” 的泥潭。
猴子赌苞谷，和猴子扔苞谷没什么区别。于是 “穷人” 便永远处于稀缺状态，无暇思考未来，更无力为未来布局，每天都在应付眼前的窘迫。
即使如投资专家所言，年轻人可以承担较大的风险，例如可以配置更高比例的股票资产，但也不能去炒消息股，而是该采用理性的、长线的价值投资，或者是定投多元化的指数基金。  
战略上可以大胆，但战术上不能乱来。
以我下围棋的教训来看，在局部没把握的地方去拼，纯属自寻死路。
还有人会说：
难道人生不就该精彩纷呈吗？
你看 lady Gaga 不也在奥斯卡获奖典礼上表达了，趴下怕什么，我趴了这么多次，不照样来到巅峰？
王石用巴顿将军的名言评价褚时健：

“衡量一个人成功的标志, 不是看他登到顶峰的高度, 而是看他跌到低谷的反弹力。“

这些励志名言都对。然而 lady Gaga 并非经常被打趴，她一直是螺旋式上升的，甚至连螺旋都没有，只是在争议声中稳稳上升。
而褚时健和马斯克这类人，其内核价值就是他们的个人。他们暂时的破产，并不会殃及内心世界的资产，甚至不会殃及他们的外部财富关系网络。
但这类人在世界上太罕见了。即使他们的天赋白送给你，你也未必愿意要。

B 部分: 防爆指南
1
“防爆指南” 之一
你自己别爆掉
有人写文章说，价值投资的好处之一，是可以让人长寿，89 岁的巴菲特和 95 岁的芒格，还有别的诸多例子。
但事实可能是，长寿成就了价值投资者。
只要活得够久，就会有更多可能性。
为了实现这一点，你需要做两件事：避免自己太早挂掉；活得更久。
这个世界让人太早挂掉的事情，几乎都被统计学算出了概率。下面是一个人一生中挂掉的可能性（据说来自美国的保险公司，数字有待核实）：

死于心脏病：危险概率是 1/3
死于癌症：危险概率是 1/4
死于中风：危险概率是 1/14  
死于车祸：危险概率是 1/45
死于飞机失事：危险概率是 1/4000
死于狂犬病：危险概率是 1/700000  
……

你要做的是，从降低较大概率事件发生的可能性入手，例如多运动，注意饮食，防止心血管病，立即戒烟，等等。
就像芒格说的，如果我知道哪里会让我死掉，我就不去那些地方。
除此之外，就是拉长寿命。
硅谷著名投资人彼得 · 蒂尔有一个野心勃勃的个人计划：
活到 120 岁。
具体策略有：

投资延长人类寿命的研究。他投资了成立于 2009 年的 Unity 公司，宣称要在不久的将来，消灭 1/3 与衰老相关的人类疾病。
为一家专门研究人类抗衰老技术的基金会，提供了 700 多万美元的资金支持。 
服用生长激素药物。
往身体里注入年轻人的血液。 提供换血服务的，是一家名叫安布罗希亚的硅谷创业公司。

传奇人物索普从上学时起就应用化学、生物学、医学等知识保持自己的健康状态，80 多岁时还像 30 多岁一样矫健。
今年 85 岁的他依然运营着自己的对冲基金，每天锻炼，服用各类药品，其目的不仅是为了降低自己肉身的衰老速度，更是为了提高他的死而复生的概率。
索普计划在去世后将身体冷冻保存，等科技足够发达时 “复活”。
他认为该项赌注获胜的概率是 2%。
索普是这个世界上最懂概率的人，他一路战胜了赌场和股市，是量化交易的鼻祖。
那么，他为什么押注于一件小概率的事情？
尽管只有 2% 的可能性，但是一旦发生，回报是极大的。所以这件事 “期望值” 为正，而且数值极大。
就像帕斯卡的 “上帝赌注”。
2  
“防爆指南” 之二
别被身边的人炸到
两句话：

别让自己在乎的亲友爆掉；
远离烂人，别被他们炸到。

照顾好自己身边的人，比什么都重要。
远离那些会炸掉的人，除非他们是你无法切割的亲友。
我们的文化崇尚以成败论英雄，所以 “能人” 无需受到道德的束缚。跟着大哥有肉吃，利益大过是非。
然而根据巴菲特和我的经验，几乎从来没有从与 “烂人” 合作中得到任何东西，除了教训。
而且烂人还有一个特点，即使你不断妥协，希望与其建立某种 “这样你可满意了吧” 的平衡，也只会招致对方 “原来你丫是个软柿子” 的步步紧逼，绝不收手。
更不消说那些会 “炸掉” 的人。不管这类人多聪明，多能干，多有关系，一旦炸掉，会造成不可逆的损失。
3
“防爆指南” 之三
别让你的职业生涯爆掉
待在自己的能力圈里。
你的职业应该是能带给你快乐的。
理想状态是：你干工作干不累，工作 “干你” 你不苦。
学习是一辈子的事情。
就像涮火锅一样，你应该不断往自己的职业火锅里加汤加料加热。
4
“防爆指南” 之四
别让你的财富爆掉
你要努力让 “富一次” 和“只用富一次”变成一件事情。
5
“防爆指南” 之五
别让你的精神世界爆掉
李佛摩是被不少中国投机客崇拜的偶像，尽管他最终自杀。

1893 年，李佛摩 16 岁初涉股市就取得成功，以放空出名，有 “华尔街大空头” 之称。
李佛摩去往纽约后半年内输光家产。
他借了 500 美元，重回波士顿，再赚回 10000 美元。
1901 年，美国股市大涨，李佛摩财产爆增至五万美元。
不久，李佛摩再次输光。
1907 年 10 月 24 日，大赚 300 万美元。
1908 年，做多棉花期货，几周内破产，负债 100 万美元。
1917 年 4 月，偿还所有债务。
1929 年，趁股灾赚取超过一亿美元。
1934 年 3 月 5 日第四次破产。
1940 年 11 月，在洗手间举枪自杀。 

李佛摩曾有句名言：“华尔街不曾变过。口袋变了，股票变了，华尔街却从来没变，因为人性没变。”
他认为，“投资人必须提防很多东西，尤其是自己。
”
他随时自省，因为 “市场永远不会错，只有人性会犯错”。
懂得很多道理，也利用这些道理富了好几次，然而依然过不好这一生。
李佛摩死时还有 500 万美元，那时的美元相当值钱。尽管他多次从破产中崛起，但是最终他的精神世界崩溃了。

C 部分：**投资大坑**
本部分，总结了本国人民经常陷入的 10 个投资大坑。
1
“投资大坑” 之一
饥饿感
小时候我从襄阳回武汉乡下老家，途中需要两天。第一晚到了武汉，投宿亲戚家，第二天一大早天不亮再赶长途车，我被从窗户塞进去，全家才勉强挤上去。
我们总是担心挤不上车。
有人总结过去四十年的发财机遇，划分逻辑就是第一波，第二波……
信 “康波” 的人，精确至年份地执行着 “忌破财、宜置业” 的投资计划。
我们总是担心错过某一波。
当某一波来临，大家蜂拥而上，孤注一掷。
我们有种挥之不去的饥饿感，即使有钱了也无法抹掉。
在加拿大，做地产经纪的朋友讲她客户的故事。那位先生住着一栋大 House，大冬天舍不得开暖气，在家裹了件大衣。
与之形成鲜明对比的是，我家孩子有次上一位加拿大老太太的辅导班，她租住在一栋漏水的老房子里，却把花园收拾得生机勃勃。有次我看见她雇人运来一整车的花，种在并不属于她的房子周围。
中国人舍得买贵房子，买豪车，但如这位老太太般 “大手笔” 买花的，极为罕见。
我们过上好日子的时间并不久，饥饿感从骨子里影响着我们的投资价值观与策略。
2
“投资大坑” 之二
想暴富
世人皆有贪心，连 “美元总统” 格林斯潘也不能幸免。
格林斯潘被麦道夫骗走了 30% 的退休储蓄（他买的基金投给了麦道夫）。他提起这件事时说，当初的回报看起来太舒服了。
麦道夫在中国不会有市场。10% 的年回报率，作为一个骗子你不觉得惭愧吗？
大名鼎鼎的桥水基金，其旗舰产品 Pure Alpha 在 2018 年的回报率为 14.6%，超过了市场和大多数同行。30 多年来，该基金产生了 12% 的平均年回报率。
战胜市场是非常难的事情，但人们总是跃跃欲试。
但你会明白，要试图击败市场，你的对手是像耶鲁大学基金会这样的机构。
通过投资指数基金，可以击败 85% 的投资者（美国的统计数据）。
但是有多少人愿意选择如此没有想象力的方法？
从平凡到优秀难，保持优秀更难。均值回归犹如地心引力般无处不在。
汤姆 · 彼得斯的经典之作《追求卓越》里，精心选出了 43 家最伟大的公司，该书出版后仅两年，其中就有近 1/3 陷入了财务危机。 
大多数卓越者会回归 “平均水平”。
暴富不易，连达到市场平均水平都很难。
3  
“投资大坑” 之三
太年轻
十多年前，我们地产公司账上有些资金，财务就顺手做点儿理财，打打新股。老外股东对此提醒到，打新股有风险啊。几个中国股东说，打新股怎么会有风险？想打都打不到啊。
现在回头看，真够幼稚的。
改革开放 40 年，我们都是市场经济的新手，更没有经历过完整的周期。
我们中间的绝大多数人没有经历过真正的经济衰退。
2015 年，大量高杠杆的投资者完全不知道风险是什么。
我们心底默认，经济会一直高增长，房价会一直涨下去，股市突破 10000 点不是梦。
我们没有美国人的那种经历：在 1929 年 10 月股市崩盘之后，股票投资者用了整整 21 年零 3 个月的时间才使自己的收益赶上债券投资者。
美国散户从 90% 降到 6%，他们是如何被 “消灭” 的？
而我们的散户还贡献着 80% 的交易额。
4  
“投资大坑” 之四
忽悠多
看到一位 “投资导师” 在某书的序言里讲：“要长线投资，不为短期利润所诱惑，您才能真正赚到钱！ ”
他举自己学生 “花” 的例子：

从 2007 年 4 月到 2007 年 10 月股市见顶前，她坚持长期操作，股票账户从十几万变成了七十多万。
2009 年 6 月，沪指经历了从 6124 跌到 1664 的大跌，然后反弹到了 3000 点。花的账户有 1400 万，都是股票。 
2010 年 3 月份，花的账户市值竟然达到了 9990 万。
2010 年底的时候，花卖股买房，拥有 28 套房了。

3 年时间从十几万到一个亿，这是长线投资吗？
节奏准确地由股票切换成房子，这不是人是神啊。
作为 “投资导师”，该人讲的故事，和他的主张风马牛不相及。他所传递的投资价值观，真会害死人。
5
“投资大坑” 之五
想逆袭
如上面的故事，发大财、大跃进，大逆袭，是我们的财富文化中挥之不去的基调。
6
“投资大坑” 之六
追 ALL IN
《激荡三十年》写李书福说过这么一段话：

“小时候我赌过钱，比方说赢了 1 块钱，全放下，变 4 块了，全放下，变 8 块了，再全放下，变 16 块。有些人赢了 1 块钱，就收回 5 毛，他赢的钱明显比我少得多。但我这种弄法，可能最后一次全没有了，一分也不剩。”

20 多年里，他每次都把赚的钱 “全放下”，赌到一个行业里。

他拍照赚了点钱，一年后就去开了一家照相馆；
再多赚了点钱，一年后就去办了一个冰箱配件厂，又赚到钱了；
两年后他索性办起了一家名叫北极花的冰箱厂；
再到后面的造摩托、造车，收购。

在过去 40 年的高速发展中，最厉害的人大多来自奋不顾身的 ALL IN 者。这其中是有原因的：
反正大家都穷，没什么可输的；
摸着石头过河的时代需要敢冲的人；
创业者需要全力以赴。
然而阵亡者更是数不胜数。成功者或许只是幸存者偏差。
普通人不要轻言 ALL IN。
腾讯说 ALL IN 2B，但其王者荣耀还在日入 3.5 亿。
有人说，你是指下注的时候要讲究策略吗？我有凯利公式呀。
然而凯利公式必须是在期望值为正的时候才有用。
ALL IN 的应该是一个人的激情、专注、专业，而非赌上自己的全部资产，押车押房子。
7  
“投资大坑” 之七
信秘方
投资没有秘诀，即使偶尔有，也不可复制，并且迅速会失效。
投资无法预测。没有人能准确地预测周期，即使你看准了某件事情必然发生，时间也未必站在你这一边。
《价值投资：通往理性投资之路》一书中写道：

“我反复研究的一个主题是我们无法预测未来，没有丝毫的证据表明我们可以预测未来……
（我们）研究了分析师的短期分析能力，研究结果很不乐观。24 个月的平均预测错误高达 94%，12 月的平均预测错误为 45%。”  

时间讨厌你看穿它。
投资专家绝大多数是星座专家。
如《财富、战争与智慧》所写：

“有充足的证据表明，所谓的专家只是通过直觉进行预测，他们的成功率低于 50%。‘在预测多种可能的结果时，他们的成功率甚至赶不上那些向股票版面扔飞镖的猴子’。”

该结论基于大数据的统计，包含了 294 名专家在多年中所进行的 82361 个预测。
搞笑的是，专家们所犯的大多数错误在于他们依靠直觉与情感启发法做决策，原来即使是 “大师” 也没有秘方，只是在乱扔飞镖而已。
《专家的政治判断》对此评论道：

“人类的预测往往无效，这是因为他们骨子里是宿命论者，他们讨厌利用概率策略来预测，因为这意味着错误不可避免。”

结果是，那些专家中的幸存者，被视为大师，然后才开始画靶心，总结成功秘方，这些秘方被散户们奉为至宝。
8  
“投资大坑” 之八
“炒房教”
中国人算得上是世界上最 “信仰” 房子永远会涨的人了。
橡树资本的创始人在《周期》一书中提及，阿姆斯特丹市绅士运河区经过 350 年房价才上涨 1 倍。
房价永远会涨，是个传说，而非事实。
房子在本国是个极其复杂的话题，买了的人嫌买少了不开心，没买的人更不开心，到底该不该买房？何时买？何地买？房子和学校，是饭桌上的核心话题之二。
除非是有长期不错租金回报的物业，否则房子应该以自住为主，尤其不应该加太大杠杆炒房。
即使长线看，房价几乎都是上涨的，但有可能在周期性调整中，杠杆砸死炒房者，熬不到房价继续向上。
2004 年我去香港，看到满大街天桥上都拉着广告横幅，写着帮助负资产的人活命。
我们的炒房者，几乎没有经历过一次回调，更不知道负资产的残酷。
9
“投资大坑” 之九
喜扎堆
韭菜是一种群居植物。
大家总是扎堆进，挤踏逃。
韭菜总觉得自己可以跟着庄家，割别的韭菜。
韭菜也知道一窝蜂是很愚蠢的事情，但聪明的韭菜认为自己可以提前跑掉。
然而如果你不能远离疯狂，就没法先逃出去。在狂欢舞会上，音乐结束前没人愿意退场。
南海公司 1720 年 1 月 21 日宣布其债务私有化计划之后不久，股票价格从每股 128 美元暴涨至每股 187 美元，进而在一个月内上涨至每股 300 美元。
如下图所示，人类有史以来数一数二的天才 — 牛顿，在这个价位上将股票出售，获得 7000 英镑的合理利润，但股票价格继续上涨。
 
在股价达到顶峰时，牛顿又忍不住买回了南海公司的股票。他因此损失了 20000 英镑。这笔钱放在今天是一笔巨款。
据说，在牛顿的余生中，只要有人提到南海公司的名字，他就会浑身发抖。
10  
“投资大坑” 之十
爱装死
所有投资者都面临着一个可怕而又很容易被低估的敌人：
通货膨胀。
通胀的杀人力看似无形，其实残酷：
如果通胀率为 3%——大多数人都认为这是 “正常水平”，24 年后同样的钱购买力会削弱一半。
如果通胀率为 5%，不到 15 年，购买力就会减半——而且再过 15 年后又会减半，变为 1/4。
如果更高呢？
在经历过几轮割韭菜后，人们如惊弓之鸟。什么都不保险，干脆装死。
然而你并不能回避现实。
活着就会冒一定的风险。 

D 部分：**财富秘方**
真正的理性在于避免系统性毁灭。
避免永久性损失，比一下子发大财要重要得多。
下面几位可能是真正的大师，他们的观点值得聆听。
1
“财富秘方” 之一
赢得输家的游戏
投资界存在两种投资者：

能做出高质量积极管理决策的一小撮精英分子；
既无资源又没接受过战胜市场所需训练的大部分人。

普通人想成为前者，最终只会沦为赌徒。
绝大多数的投资者都应该加入 “消极管理俱乐部”。例如多元化定投指数基金。
个人投资者应避开股票选择的游戏，专注于资产的配置。
耶鲁大学管理学院的罗杰 · 伊伯森在报告中指出：

超过 90% 的投资收益变动取决于资产配置，选股和波段操作的重要性位居其次；
对于大众投资者来说，百分之百的收益都来自资产配置，因为选股和波段操作是负和博弈，降低了总体收益。

投资是赢得输家的游戏。《赢得输家的游戏》一书写道：
在赢家游戏里，结果是由赢家的正确行动决定，即胜负由游戏的一方战胜另一方决定。
而在输家游戏里，结果则是由输家的错误决定，即胜负由游戏打败自己的一方所决定。
例如，专业网球比赛属于 “赢家游戏”，获胜方靠打败对手获胜；而业余网球比赛属于 “输家游戏”，获胜方获胜则因为对手自己打败了自己。
“最好的方法就是尽量少打坏球。”
投资也是一种 “输家游戏”，你必须遵循一条简单的规则 — 避免错误。
查尔斯 ·D. 埃利斯在《赢得输家的游戏》一书中总结了 “十诫”： 
1、勿忘储蓄。把储蓄投资于你未来的幸福、安全和儿女的教育。 
2、不要投机。如果你必须 “投机倒把” 来满足情感上的渴望，那么你必须承认这是在赌自己的能力足以击败专家老手，所以，你会拿多少钱去拉斯维加斯和老手赌博，就把投机的钱限制在同样的范围内。
3、切勿以税收为主要原因影响投资。
4、不要把住宅当成投资。把它当成你和家人一起生活的地方。住宅不是一个好的投资工具，从来都不是。但是，住宅在促进家庭幸福方面必定是很好的投资。
截至 2007 年的 30 年间，美国房价每年上涨 5.5%。其中，4.1% 只是通胀指数。成本，包括税收、保险和日常的保养达到 3%。
5、不要从事商品交易。商品交易真的只不过是价格投机。这并不是投资，因为没有创造任何经济生产力或者价值。
6、别被经纪人或共同基金销售忽悠了。
7、不要投资新的或者 “有意思” 的投资工具。设计这些工具往往就是为了 “卖给” 投资者，而不是让投资者“拥有”。
8、不要仅仅因为你听说投资债券更保守或者收益、本金都有保障就投资债券。债券的价格波动和股价相当，而且债券对于长期投资的主要风险——通胀的抵御能力很差。
9、把你的长期目标、长期投资计划及财产规划写下来，并坚持到底。至少每十年要评估一次。
不要相信自己的感觉。欢欣鼓舞的时候，你可能就在危险的边缘。消极失望的时候，要记住这是黎明前的黑暗，不要轻举妄动。在投资方面，活跃的操作几乎都是多余的。行动越少越好。 
10、对于有定投计划的人，应专注于指数基金。不要投资你自己的公司——尽管这个公司可能真的很好，因为自己在这家公司的工作收入，已经是 “总体经济组合” 的主要配置了。
2
“财富秘方” 之二
价值投资
价值投资的四项基本原则，来自巴菲特的老师格雷厄姆：
1、将股票看成相应比例的企业所有权；
2、在价格大幅低于价值时买进，以创建安全边际；
3、让两极化的 “市场先生” 成为你的仆人，而非你的主人；
4、保持理性、客观和冷静。
3
“财富秘方” 之三
刺猬战略
约翰 · 博格，先锋集团的创始人与董事长，指数基金的缔造者。
指数基金开创了一个全新的投资时代。先锋集团旗下管理着超过 1 万亿美元的资金。
博格认为自己的使命，是将复杂的投资进行简化并将其引入成千上万的美国普通家庭。其核心观点是：

强调长期投资的明智性；
试图超越市场的徒劳无功；
高成本给成功投资带来的巨大负担。

博格提出了 10 大投资法则：
法则 1：记住均值回归法则
均值回归法则清楚地表明，通过考察历史业绩来选择基金是非常危险的尝试。过去永远不能代表未来。
当股市表现完全脱离其基本面，或者落后基本面太多，均值回归法则早晚会起作用。
法则 2：时间是你的朋友，冲动是你的敌人
好好享受复利带来的奇迹。给予你自己充足的时间，并牢记通胀的风险。
投资最严重的错误之一就是被市场的塞壬之歌诱惑，引诱你在股票价格上涨时买入，在价格跳水时卖出。因为揣测市场时机是不可能的。
法则 3：选择最正确的基金买入并长期持有
投资者将要面临的下一个严峻考验就是在投资组合中选择最恰当的资产配置方式。股票的目的是提供资产和收入的增长，而债券则是保持现有资产和现有的收入水平。
法则 4：对未来保有现实的预期
股市中的投资收益，即股息收入加上盈利增长，才是决定一切的因素。
法则 5：忘掉那根针，买下整个草堆
塞万提斯说：“千万别试图在草堆中找一根针。”
如果你不能肯定你的投资决定是正确的，可以分散风险和进行多样化投资。当你认识到了找这根针有多么困难，只需买下整个草堆。
法则 6：最小化庄家的抽成
投资者最好的机会就是拥有市场本身，并将庄家的抽成降至最低。
法则 7：永远逃不开风险
当你决定用现有资金来累积长期财富时，你必须决定的是你想要具体承担哪一类风险。
无论怎么做，资金一直都会处于风险之中。
法则 8：警惕最后一场战争
投资者不应该无视过去，但也不能想当然地认为某种特定的周期性循环会永远存在。没有什么是永远存在的。
仅仅因为个别投资者坚持要 “打完最后一场仗”，不代表你也要这么做。
法则 9：刺猬会战胜狐狸
古希腊诗人阿奇劳哲斯曾说：“狐狸多技巧，刺猬仅一招。”
刺猬，代表只知道一件大事的那类金融机构：保持长期投资成功的精髓是简洁。刺猬广泛分散投资风险，买入并长期持有，将成本控制在最低程度。
法则 10：坚持到底
投资根本就没有终极秘诀，只有最伟大的简洁。这些投资法则都是关于基本的算术，关于最基本和最没有争议的原则。但是投资不是件容易的事，因为它需要纪律、耐心、毅力以及最宝贵的品质与常识。
金融市场总是来回摇摆，你需要尽可能忽略那些转瞬即逝的不和谐因素，将短期的变化与长期的情况分开。
E 部分：**持久富足**
1
从 “用脑袋赚钱”
切换到 “用屁股赚钱”
首先，你要省钱，储蓄。
其次，你要努力实现一些 “在最差的时候还能给你挣钱” 的救命稻草收入。
最好你的投资能够如《原则》作者达里欧所说，构建十几个独立的收入流。
房产投资金额大，流动性差，反而令很多人被动地赚了大钱。因为换成股票，你不敢如此重仓，不敢加杠杆，而且涨一点儿早跑了。
这就是所谓 “屁股赚钱比脑袋赚钱多” 之一种。
巴菲特数次在给股东的信里提及个人的房产投资，他更看重物业的租金收入。
这倒是印证了某种观点：
有钱人不是资产体量越来越大，而是现金流越来越多。
我们一生追求的不是做大做强资产体量，而是做大做强稳定、持续的现金流。
巴菲特说过 “5288 铁律”：

如果我的 114.75 美元在 1942 年被投资在一个无佣金的标普 500 指数基金上，所有股息都进行再投资，那么到 2019 年 1 月 31 日，我所持股份的价值（税前）将增至 606811 美元。

这相当于每 1 美元赚了 5288 美元。
然而，用屁股赚钱的事情，更需要厉害的脑袋。
2
诚实是一种 “策略”
而非一种美德
芒格说过：我们更多的是因为讲道德而赚到了额外的钱。本杰明 · 富兰克林的说法适合我们。他没有说诚实是最佳品行，他说那是最佳策略。
这句话有两重含义，一是对外诚实，一是对内诚实。
如芒格所说：

你的内心应该有一个罗盘。这样，你就会知道哪些事情是即使完全合法也不能做的。

对内诚实更艰难。因为自己是最容易骗的。
芒格在哈佛大学的演讲上说：处理不好 “心理否认” 是致人破产的常见方式。
诺奖得主卡尼曼认为：

“（人们甚至不想投入）最少的精力去设法切实搞清楚他们做错了什么，此事并非偶然，而是因为他们就是不想知道。”

人们喜欢骗自己，也擅长于骗自己。有位教授写过一本论述人们为何容易受骗的学术专著，结果他竟然也是伯纳德 · 麦道夫庞氏骗局的投资者。
即便不喜欢现实，也要承认现实。 
3
能力圈和舒适圈的
黄金交叉点
你的学习也是要基于能力圈的，否则跨界只是个幻觉。
一个最简单的例子，假如你从来没有学过围棋，试一下拼命学一阵子围棋，看看你能够达到什么水平。
走出舒适区，和走出能力圈不是一回事情。
一个人应该在自己的能力舒适区，并不断拓展。
要走出的，是自己的懒惰舒适区。
了解自己的能力局限很有价值。风险资本家弗雷德 · 威尔逊认为：
“你取胜的唯一途径就是知道自己擅长什么，不擅长什么，并坚持做你擅长的事情。”
查尔斯 ·D. 埃利斯的观点更有趣，他认为：
每个投资者都有一个能力区（你真正擅长的投资领域），和一个舒适区（能让你保持镇定和理智的投资领域）。如果了解自己的优势和劣势，你就能明白自己需要在以上两个区域学习哪些知识（见下图）。

上图中间重叠的部分是你的最佳区域，你最该专注的部分，在那里，你拥有所需的技能和情绪，能做到最好。
4
构建你的 “两眼” 战略
塔勒布说，牙医比对冲基金经理更富有。
基金经理的收入是极端两极分化、并且不确定、不可持续的。
所以最好的办法，是做一名牙医，然后在巴菲特年轻的时候买了他的股票。
这里的个人 “两眼” 战略，和塔勒布的杠铃策略也有点儿像。
5
构建你的核心能力
一个人不需要用反弹来证明自己，但是一个人必须有自己的核心竞争力。
科斯定律的一个重要含义是，一项有价值的资源，不管从一开始它的产权归谁，最后这项资源都会流动到能最大化利用其价值的人手里去。
保护财富的最好方式是让自己配得上这财富。
6
构建你的**个人安全边际**
安全边际的概念是格雷厄姆的箴言，它永远不会过时。 
本杰明 · 格雷厄姆在《聪明的投资者》中说：
若要将稳健投资的秘诀精炼成几个字，我们可以大胆地将 “安全边际” 这个座右铭作为答案。 
什么是安全边际？本杰明 · 格雷厄姆将 “安全边际” 定义为“价格和预示的或经过评估的（内在）价值之间有利的差额”。内在价值是未来现金流的现值。安全边际反映了内在价值和当前市场价格之间的差距。
打比方说，如果你要建一座能过 10 吨货车的桥，这个桥的载重量最好是 20 吨甚至更高。
格雷厄姆说安全边际的目的非常简单：“实质上，安全边际的功能使得准确预估未来成为多余。”
塞思 · 卡拉曼将格雷厄姆价值投资体系简单描述为：在安全边际许可的低价时买进，然后等待。
是否意味着要极端保守呢？并非如此，这是一种财富洞见，综合了这个世界的基本智慧。
不仅是财富，你个人也要有非常厚的安全边际。
7
黑天鹅的正面应用
在不确定性的世界，概率思考是一种基本能力。是否意味着要极端保守呢？并非如此，这是一种财富洞见，综合了这个世界的基本智慧。
投资是一种运用概率的活动，所以其他概率博弈的经验可能会对投资有所助益。
哈佛大学教授理查德 · 泽克豪泽是一位桥牌高手，他说道： 

桥牌需要在近乎不可知的情况下不断地评估可能性，一局之内，选手需要做数百次决断，还要常常权衡可能的得与失。
但好的决定也可能会造成坏的结果，这既包括自己的决定，也包括搭档的决定，选手对此必须一直保持心平气和。如果想在一个不可知的世界里进行明智的投资，这种坦然接受的能力就是必不可少的。

很多人因为极小概率的 “黑天鹅” 爆掉，但也有人可以正向利用黑天鹅赚钱。
据说当时塔勒布管理的对冲基金 Empirica，从 “9· 11” 恐怖袭击事件之后的市场大跌中获得了丰厚的收益。以下来自一本书的序言：

塔勒布坦言自己事先并不知道任何黑天鹅事件的消息，他只是认为市场对重大系统性风险的估计严重不足，导致深度价外的看跌期权价格被严重低估。
因此，他提前布局，在通用汽车股价还在 30 美元左右交易时，买下了以每股 5 美元抛出该股的看跌期权，事后证明这次投资极富远见。
塔勒布对风险有一种根植于内心深处的切肤之痛，他说：“对于我的大多数美国同学来说，风险就是一种对自己不利的概率分布。
而我从小在战火纷飞的黎巴嫩长大，风险对于我来说意味着在每天吃晚饭的时候，我不知道白天和我一起踢球的小伙伴还能活下来几个人。”

8
从 “头牌” 到“妈咪”
有篇文章写一位著名的对冲基金经理，厉害了一辈子，最后还是挂掉了。
为什么水平又高，又有实战经验，对风险也有极深的理解，还是会爆掉呢？
除了 “均值回归”，还因为对冲基金经理是一种类似于选美和拳击的职业。
拳击手的宿命就是被击倒。
所以，想脱离角斗士的命运，必须实现从 “头牌” 到“妈咪”转换。
例如老而弥坚的 “赌徒” 索罗斯，他换麾下的基金经理如换衣服。
投资天才斯文森的成功，除了科学的投资战略，也有他挑选基金人才的眼光。
2003 年哈佛经济学家 JoshLerner 的研究表明：耶鲁捐赠基金在过去五年中一大半的优异表现都得归功于所挑选的基金人才。
人生如赌场，你要过成 “赌场”，而不是当个 “赌徒”。哪怕你很厉害，也有失手的一天。
成功的企业，某种意义上都是开设了一个赌场，而非拼命做选美或拳击冠军。
9
制定你的长期路线图
你需要长期而伟大的路线图。
在投资方面，时间就是阿基米德的杠杆。 
投资的时间长度，衡量和判断投资结果的时间段，对于任何一项投资都至关重要，因为它是制定正确资产组合的关键。 
《赢得输家的游戏》写道：

时间让投资从毫无吸引力变得最具魅力，因为尽管预期回报率的平均值完全不受时间的影响，但是以预期平均值为中心的实际收益率的范围或者分布很大程度上受时间的影响。只要有足够的时间，本来沉闷单调的投资会变得魅力四射，反之亦然。

10
实现人生的持久性知足
有些人喜欢赌博，并非是爱上发财，而是爱上了赌场。
财富如海水，越喝越渴。
贪婪会养成一种自毁型人格。
比较是万恶之源。因为你的头上永远有比你更富有的人。
人生的持久性知足，往往是与财富无关的。
大学毕业的时候，在给同学的留言本上，关于 “职业理想” 这一栏，我写道：
有钱去做与钱无关的事情。
惟有 “与钱无关的事情”，方能实现人生的持久性知足。
而适当且牢靠的财富，可以保护 “与钱无关的事情”。
要实现以上理想，一个人一生只用富一次足矣。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
  </entry>
  <entry>
    <title>十年来最大变局正在发生，不幸的是只有 7_ 的人知晓</title>
    <url>/posts/4818dbb2.html</url>
    <content><![CDATA[1 三张图背后的巨变
每年春天我会有一个演讲，就当下的趋势和投资，跟大家做一个交流。今年我想把我们正在面临的一些重大变化，和应该采取的一些策略调整，做一个分享，供参考。
我们正在经历什么？给大家看三张图。
第一张图片，这是刚让同事整理的最新数据，纽约曼哈顿、伦敦、北京、悉尼这些城市和区域的房价走势。
这几个城市的房价，最近几个月都在往下跌。
我们知道这几个城市，都是当之无愧的全球一线城市，是这个世界上最保值、最具有确定性的资产，现在它们的房价出现了一些异动、一些微调，这背后反映的是什么？
这实际上是十年一遇的一个大拐点、经济上的大拐点在房价上的投射。
这个拐点是什么呢？就是零八年金融危机之后，全世界的货币大宽松、货币大放水时代结束，各国央行陆续开始紧缩货币，整个全世界的宏观环境、经济环境迎来了一个全新的故事讲法，一个全新的运行轨迹。
货币放水时代的结束，美国进入加息周期、进入缩表，各个国家开始陆续跟上，整个全世界的钱越来越少，它势必反映在各类资产上，也将影响全球经济的走势。
这几个大城市的房价走势，实际上是其中的一个微小的反映和征兆。
我们当然不能说这几个城市的房价进入了下跌周期，长远看，这些城市的房价是一直往上走的，但是全世界的钱紧了之后，我们认为一线城市的价格微调是极具代表的一个信号。
第二张图，这是特朗普签署贸易战备忘录时的照片，他背后站着史上最具鹰派色彩的内阁官员。
贸易战，不光是商业摩擦，背后是国际格局大变动的前声。
第三张图，新版宪法颁布，中国的政治周期和政治秩序进入到一个新时代。
这三件事，都在近期密集发生，看似彼此独立，实则有内在逻辑。
第一张图是经济，第二张图是国际，第三张图政治，全世界政治经济的基本面正在发生着重要变化，整个底层逻辑在发生着重要变化，社会运行的基本操作系统发生着重大变化。
而这一切交汇在 2018 年。
2 泡沫盛宴的终结
2018 年正好是 08 年金融危机后第十年。我们可以说前十年的故事基本到了该完结、写上句号的时候了。未来十年的新的篇章，现在正在慢慢开篇、翻页，露出它的画卷。
过去十年，在金融危机后，美国、欧洲、日本也包括中国，各大经济体开足马力开闸放水，印钞加码，流动性空前丰裕。
这是过去十年的一个基本面。在这个基本面下，美股出现了 9 年牛市。
美股 9 年大牛市
中国、美国、加拿大、澳洲、英国…… 全球的楼市经历了一个超级繁荣期。
主要代表性国家和地区 2008 年 - 2016 年的房价走势
各类资产的泡沫，很大程度都是建立在货币大放水的这个基础之上。
但是，泡沫的盛宴终有结束的时候。
未来十年的故事，它的起点在哪里？起点就是我们一再提及的这个时代最重要的一个变化——货币大宽松时代的终结。
3 当中国遭遇双击：紧缩与杠杆
全球从货币超级宽松，到货币大收缩，中国当然也不能置身事外。
但是当紧缩这条绳子落在中国身上的时候，我们可以看到在这个时点，中国比较尴尬、比较为难，为什么呢？
中国面临一个非同寻常的问题：杠杆率太高。什么是杠杆率？通俗解释就是负债太多，经济的运转很大程度是靠借钱来支撑来发展。
负债太多的时候，如果你还加息还搞紧缩，那么我还款的成本会变高，可能会使紧绷的资金链发生断裂，这是非常大的风险。
中国现在的杠杆率有多高？
根据国际清算银行（BIS）的数据，到 2017 年年中，中国债务已经达到了 GDP 的 256%，这不仅超过了新兴市场国家 190% 的整体水平，也超过了美国的 250%。
交银国际董事总经理洪灏有一个统计，中国每年宏观形式上的利息负担（12 万亿人民币左右），已经超过了每年名义 GDP 的增量（8-9 万亿人民币）。也就是说，新创造出来的财富，还利息都不够了。请注意：这里只是一个非常粗略的估算。
去杠杆就是降低负债率，这是当下中国最大的一个宏观事件，也是高层最关心的问题。
中国必须在进入实质性的紧缩之前，把杠杆降下去，否则可能带来系统性的金融风险、经济风险。
现在，虽然市场化的利率包括银行间的中间利率，已经抬升了不少，但是央行对于最基本的存贷款利率一直没动，除了经济增长的一个考虑，很大的原因是尽量给去杠杆留出时间，在债务降低之前尽量晚地使用强紧缩手段。
4 当下最大的宏观事件
这几年发生的很多事情，很多大的冲突、博弈，都是发生在 “与紧缩赛跑的去杠杆” 这样一个背景之下。主要有这么几个事。
第 1， 金融业的大整顿。
金融业兴起了一股力度非凡的监管风暴，包括各种表外渠道的规范化。
第 2， 压低政府债务。
几个历史上从来没有过的现象出现了。一是包头叫停了地铁项目，二是铁路计划投资，今年比去年下降 8%。这些都是降低政府的负债。
第 3， 打破刚性兑付。
中国负债率高有一个深层次的观念支撑——刚性兑付。就是说，很少出现债务违约的情况，实在资不抵债，往往有政府来兜底。在中国，稳定压倒一切，如果违约不还钱，很可能引起社会不稳定，政府总要想办法解决。负债方——担保方——政府，形成了一个隐形担保的链条。
这使得大家不太在乎风险，敢于借钱，负债率恶性膨胀。
造成一个情况，只要敢负债敢借钱，这样的人财富累积的速度就比别人快。
在 2014 年地产寒冬的时候，当时地产老大万科降杠杆降债务少拿地，但另一方以恒大、碧桂园为代表，反而是加杠杆，反而是疯狂的借债拿地，现在负债率最高的就是这一批企业。
接下来到了 16、17 年，迎来了楼市的一轮疯涨，最大的收获者就是恒大这批敢于负债扩张的企业，许家印因此坐上了中国首富的位置。
越大胆的人越敢借钱的人，往往是获得额利润最大的人。
对债务的敬畏必须建立，对刚性兑付的理念必须打破，这才能遏制疯狂的债务上涨。预计接下来中国债务违约的情况会增加，大家买理财产品要小心了。
第 4， 杀鸡儆猴。
在中国往往要用市场以外的手段，这是中国调控和中国监管的一个特色。
前段时间，一系列负债率高的企业被 “敲打”。比如万达，开始大量卖资产，最核心的目的就是降低负债率，还有安邦、海航等。这是高层杀鸡给猴看的一系列动作，来对企业行为进行震慑和调整。
后来财经界称王健林进行了一个教科书式的自救，他确实是非常果断的把自己的核心资产进行抛售，大幅度降低了负债率。他非常清楚整个国家的政策指向是什么。
去杠杆化像一场赛跑。很多企业很多国家倒下，往往就是资金链断裂债务出了问题。这是场生死时速，一场性命攸关的赛跑。要在紧缩周期来之前把杠杆率降下去。
但中国整个情况非常复杂，常规手段可能不够用。
第 5， 债务转移。
2015 年开始，房地产出来一个去库存，核心就是帮房地企业卖房子去杠杆。
在这过程中，完成了一场精彩绝伦、惊心动魄的债务大转移，由企业、政府部门的负债向居民负债的大转移。
本来是房产商欠银行的债（借钱开发项目），房子卖后，房产商拿到房款还清债务，而买房的居民背上了房贷，这本质是债务转移。
在这场大转移中居民个人杠杆率有了非常明显的上涨，涨速是超过政府和企业。
中国一直是高储蓄国家，老百姓有钱了，一般是存下来。但这两年居民新增的贷款超过新增的存款了。这非常具有指标意义。
房地产从一二线城市到三四线城市，进行了一个全方位的轮动，其实是把中国各个阶层各个角落都卷进来。
居民负债率原来并不高，因此可以成为企业和政府高杠杆的一个缓冲。
5 外部意外
目前中国是在进行走钢丝的艺术，要兼顾经济的增速，也要避免引爆债务的连锁反应，各方面的兼顾对于决策是非常大的考验。
在这个关口，外部也在发生一些幺蛾子事情，整个走钢丝的过程就多了一些变数，最直接的就是中美变局。
贸易战对中国的影响在于，去年中国经济交了一个不错的成绩单（GDP 增速 6.9%），这个成绩很大一部分因素来源于出口的贡献。如果中国最重要的贸易伙伴——美国，跟中国打起了贸易战，那么势必会给中国的出口以及经济带来一系列的压力。
还有一个影响因素是美国的减税，基本上是在和中国争夺资本，争夺产业。
减税的一个重要目的是制造业回归美国，资本回归美国。大家可以读一下特朗普今年一月在达沃斯论坛的演讲，很有意思。
我看了两三遍，有一种非常奇特的感觉，感觉在看中国的一个县长市长在工商界会议上慷慨陈词、热情洋溢地面对企业进行招商引资，就是这么一个印象。
特朗普讲话的基调就是我们美国经济形势很好，有各方面的优越条件、优惠政策，欢迎大家来美国投资。这和中国县长市长进行招商引资的腔调几乎一样。
特朗普商人出身，很明白哪些东西可以吸引资本，吸引产业。我们可以看到美国总统由过去高喊着民主自由的角色，到现在高喊着资本、产业、招商引资这么一个角色的转变。
特朗普的这一系列组合拳实际上对中国的压力还是比较大。
6 贸易战中的最大变数
贸易战有什么影响？
有一些具有经济学基本知识的朋友来问我，贸易战打起来，决策层会不会重新启动楼市？  
他们的逻辑是对的，贸易战整体是负面信号。
不管是美国因减少中国低价商品而通胀加剧，从而加大加息力度，还是贸易战造成中国出口受挫，引发通缩，都对中国经济的增长有挑战。
经济如果真的下滑，中国现在能撬动增长的手段不多，是不是又要走上用楼市来刺激经济的老路？
这不排除。对中国来说，很多问题是用发展、用速度来解决的，包括就业和社会稳定。虽然在淡化 GDP 指标，但短期不现实。
因此一旦出现下滑，楼市重启不是不可能。
但现在出现了一个重大的变量，就是我们在开头所说的政治上的变化，政治秩序和政治周期在重建。
这个变化在于，权威大大加强，可以通过强力来撑住一些矛盾和问题。出现危机时，各个利益集团的声音和干扰会被弱化。
因此，当经济出现一些问题时，现在多了一种选择，不一定走刺激老路，而是用权威把当前的问题撑住，熬过去，追求长效机制，期待用短痛换取长安。
因此对贸易战我们重点关注两个指标：
一是经济基本面是否发生变化？
二是如果有变化，政治上的表现和决策会如何？
在这里我们不是给大家一个简单的结论，而是一个分析的思路。
7 抱着保温杯的中国
综上，为什么说我们站在一个重要的时间节点？
经济上在发生十年一遇的拐点变化，
政治上，新的政治周期和新的政治时代出现在中国面前，
国际关系上出现了冷战之后的最大变数，两个最大国家的对抗性因素在增加。  
这些巨大变化，我敢肯定，在中国注意到的不超过 1 亿人，也就是总人口的 7%。
但比这些变化更深层次的，是中国发展的自身到了一个变化的关口。
我们有时会开玩笑说，现在的中国到了抱着保温杯的阶段，她进入了成熟期，不再是青春年少，不是一个愣头青往前冲。她实际上已经有一定的体量，肩负着责任，同时也要找到自己的确定发展方向。
8 中国的两个面孔
抱着保温杯的中国，她的发展动力和青春期是不一样的。
原来的几大动力，边际效应在衰减。
比如城市化，现在已经过了 50%，农村人口往城市转的速度在下降，人口红利就不要说了，年轻人口下降得很厉害。
比如投资拉动，每单位 GDP 所需的资本投入，越来越大。
很多国家到了抱着保温杯的这个阶段，都会碰到新动能的问题，所以有一个词叫做中等收入陷阱。
那么现在中国，能不能迈不这道坎？旧有的动力在衰减，还有什么可以依靠呢？
学者刘煜辉曾分享一个观点，实际上现在的中国有两个面孔：

你要是看统计局的数据，你看到的就是一张老年人的心电图，起伏越来越低，直到最后变成一条平行线。但是这就是中国经济的全部了吗？如果你把中国经济分拆，你就会发现别有洞天。上图红色的线，代表电子产品、计算机、通讯产品，这些产业，有 15% 的增长速度。这是一颗青年小伙子的心脏。但是蓝色的线，代表重化工、矿业，这些是负增长。把新旧产业结合在一起，就是增长 6% 的老年轻的心电图。
再看中国的消费，中国的消费，合起来只有 10% 的平行线，看起来也是没有生机。但是你要是把线上线下区分来看。线上（互联网）的消费，增长在 35%。线下只有 5-6% 的增速。

这些新旧经济的交汇处，往往是两幅面孔，一半是火焰，一半是海水。
我们从这些角度能看到中国新旧之间的分野和变化，能知道生机的所在。
9 国家成功的最大秘密
我很赞成巴菲特所说的一句话，他说美国最大的秘密就是在于有一套释放人才潜能的体系，他说美国只有四百万人口的时候，中国有六千万人口，当时美国为什么能迅速超过中国，就是因为能够把人的潜能释放开来。
巴菲特多年一直押美国的国运，坚守美国，持美国的最优质资产，获得巨大回报。
他对美国最厉害的秘密武器的解读是正确的。能够把人的潜能焕发出来，这是一个国家真正的生机所在。
西方是按照它那套自由市场理论来释放人的潜能，而中国在自己特有的模式下能不能释放出人的潜能，这是一个大的考验，也是在走没有人走过的路。
10 天堂还是地狱
面对正在发生的巨大变化，个人怎么办？
我的一位朋友谭翊飞在一篇文章中提的问题非常好：

我们可以依赖过去十年对房地产的逻辑去预测 2018 年房地产的走势吗？
我们可以用过去稳增长的逻辑来预测明年下半年增速下行后的政策变化吗？
我们还可以用 PPI-CPI 的传导逻辑来解释今年物价的变化吗？
我们可以用过去对央行的理解来预测 “双支柱” 下的货币政策走向以及资管新规的落地力度吗？
我们可以用过去一年白马的逻辑来预测明年是白马继续一马当先或者是中小创有更大的机会吗？
我们可以用 “去产能” 的政策来分析明年大宗商品市场的走势吗？

是的，万物皆变，万理皆变。
我觉得接下来大概率会出现的几个变化：
第一，中国未来一段时间会呈现控制型经济的基本面貌，强监管、紧资金。中国经济在全球紧缩周期和国内高杠杆的夹击下，有诸多不确定性，再加之打破刚性兑付的趋势，中国已经过了可以闭着眼睛买房，可以随便对一个标的 all in 的阶段。你 all in 到一个违约产品上，可能一生的积蓄全没了。
第二，不要 all in，自然要有更多的配置意识和分散意识。
很多策略其实是可以去规避和对冲风险。比如说日本，都知道日本有迷失的 30 年，但是它能够保持比较高的生活质量，比较富裕的状态，一个原因是确实老底比较厚，还有一个很重要的，日本实际上是一个全球投资非常成熟的国家，它本身经济不增长，但是它参与到中国，欧洲，美国，去收获其他国家的红利。
以软银为代表，很多中美的新兴巨头，都有日本资本的影子。
如果你看日本 GDP，就是国内生产总值，它实际上是不行的；但是看 GNP，就是国民生产总值，只要是日本人获得的收益都算，不管是国内还是国外，这个数据是很好的。
这就是视野放到更广阔的地方，所带来的改变。
第三，对新趋势要有认知。
很多朋友说现在很迷茫，不知道投资什么东西，楼市现在肯定是没有机会，想买也买不了，股市一月份好不容易起来一点点，二月初马上就被打下去了，分歧很大。
那投资什么呢？这个就需要认知层面上的升级，不是过去那样躺着就可以挣钱。
对趋势要有前瞻，更新自己的认知。
比如，一个重要的变化是，“城市化” 升级为 “深度城市化”，不是以城市为单位来看待发展，而是按照城市群来构思规划。这是全世界发达地区的规律。现在大力提粤港澳湾区，杭州湾区，就是这个思维。过去我们按城市来投资置业，未来肯定以城市群为背景进行考虑。
比如，一个重要的趋势是，制造业正在由中国向东南亚、南亚迁移，这意味着全球产业链格局的重组，利益的重组，发展机会的重组。东南亚进而获得了双重对冲的优势（中国经济好，东南亚享受红利；中国经济不好，东南亚承接更多转移出来的产业）。
这些认知，能给你带来更广阔投资的空间。
第四，押注永恒不变的东西。
亚马逊的创始人贝佐斯说过一段话，很多人去问十年后什么会变，却很少有人去问十年后什么还不会变。亚马逊恰恰就是去找不变的东西。比如人们对于低价、高质量、快速送达、品类丰富…… 这些东西的追求永远不会变的，那么我们尽量去满足，企业就会很有价值。
这对我们来说是非常有启发的一个思维，去找不变的东西，找确定的东西。现在政治上、经济上进入一个新的周期，这些会有很大不确定性，但是也有很多不变的东西。所以说不要去打政治牌。
比如我们看好一个房产，其实抛开各种各样的上层建筑的因素，最根本的就是人口因素，有没有人口持续看流入。有时候最简单的往往是最有力量的。
最后举一个例子给大家，看看我们怎么去观察那些简单而有力量的东西。
世联行董事长陈劲松说，从宏观经济指标来看，深圳比珠海和惠州差远了，但是为什么在珠海和惠州投资不行，而深圳可以。

后来有人展示了一个民间指数，叫作 “电线杆指数”，就是看城市的电线杆到底干不干净？如果特别干净，那个地方不能去，如果上面贴着老中医、看性病、招聘…… 相关部门怎么清理也清不干净的地方可以去。说明这个地方有活力，有资源，人口源源不断地流动。从这个指标来看，深圳就远远领先了珠海和惠州。

最后两句话：我们踩在一个周期更替的节点上，踩在重大变化的关键点上，看清方向比什么都重要，它关系着是上天堂还是下地狱。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>如何不靠运气致富</title>
    <url>/posts/f276a50.html</url>
    <content><![CDATA[一般来说，富人不会分享自己发家致富的秘密。所以，有互联网以来，我看到许多在网上教人致富的人都发了财。在英文博客界，写关于如何发财的博文成为了一个专门的门类。而真正的有钱人只会用心灵鸡汤敷衍一下大众，根本不会提供任何方法论，更不要说是致富秘诀了。
也有例外。硅谷投资人 Naval Ravikant 在 5 月 31 日突然一口气发了 40 条语录，内容就是关于如何不靠运气而致富。随后这 40 条文字被不断转发，翻译为多国语言，这一事件史称 “推文风暴”。Naval 是印度裔移民，20 多年来一直在美国硅谷创业。他最著名的创业项目是 AngelList，世界股权众筹平台的鼻祖；他最著名的投资项目有两个，一个是 Twitter，一个是 Uber。
奇怪的是，国内互联网上的反响并不强烈。按理说这应该是中国人最感兴趣的话题了，而且要比各种心灵鸡汤高好几个段位，为什么会遭到冷遇呢？我分析了一下原因，主要有两点：1、网上的版本翻译得不好，每个中文字都认识，连起来看就不懂了；2、致富这个话题在中文互联网里，已经被鸡汤严重污染了，所以许多人根本理解不了 Naval 在说什么。
因此，我决定自己翻译并且注释一下 Naval 的 40 条语录：
How to Get Rich (without getting lucky)
《如何不靠运气致富》
作者：Naval Ravikant
翻译 &amp; 注释：和菜头

Seek wealth, not money or status. Wealth is having assets that earn while you sleep. Money is how we transfer time and wealth. Status is your place in the social hierarchy.


去寻求财富，而非金钱或地位。财富就是你拥有资产，而资产在你睡觉的时候都还在为你赚钱；金钱是我们转换时间和财富的工具；身份是你在社会等级体系里所处的位置。


Understand that ethical wealth creation is possible. If you secretly despise wealth, it will elude you.


要明白一件事：一个人完全可以不靠坑蒙拐骗站着赚取财富。如果你在暗中鄙视财富，那么财富也会躲着你。


Ignore people playing status games. They gain status by attacking people playing wealth creation games.


别去理会那些热衷于玩身份游戏的人，他们通过攻击那些创造财富的人以获得自己的身份。

4.You’re not going to get rich renting out your time. You must own equity — a piece of a business — to gain your financial freedom.

你不会通过出租自己的时间而变得富有。你必须拥有产权，也就是生意的一部分，以此才能赢得个人财务自由。

5.You will get rich by giving society what it wants but do
es not yet know how to get. At scale.

提供社会大众想要但是他们还不知道如何获取的东西，你就会因此而致富。但有一点：你必须规模化地供应社会。

6.Pick an industry where you can play long term games with long term people.

选择一个你可以长期从事的产业，寻找一批可以一起长期共事的人。

7.The Internet has massively broadened the possible space of careers. Most people haven’t figured this out yet.

互联网极大拓展了一个人职业生涯的可能性。绝大多数人对此毫无认知。

8.Play iterated games. All the returns in life, whether in wealth, relationships, or knowledge, come from compound interest.

玩就玩复利游戏。无论是财富，人际关系或者是知识，所有你人生里获得的回报，都来自复利。

9.Pick business partners with high intelligence, energy, and, above all, integrity.

在选择商业合作伙伴的时候，选择那些高智商、精力旺盛的家伙，但在这一切之上，他应该是个正直诚实的人。

10.Don’t partner with cynics and pessimists. Their beliefs are self-fulfilling.

不要和愤世嫉俗者和悲观主义者合作，因为他们会任由坏事发生，以此证明他们的负面看法是正确的。

11.Learn to sell. Learn to build. If you can do both, you will be unstoppable.

学会如何销售，学会如何创建。如果你同时能做到这两件事，你的成功将无可阻挡。

12.Arm yourself with specific knowledge, accountability, and leverage.

用独到知识，责任感和杠杆武装自己。

13.Specific knowledge is knowledge that you cannot be trained for. If society can train you, it can train someone else, and replace you.

独到知识是那种不可以通过培训而获得的知识。这是因为，如果这种知识可以经由培训而得，那么其他人同样也可以，并且以此取代你。

14.Specific knowledge is found by pursuing your genuine curiosity and passion rather than whatever is hot right now.

在真正的好奇心和热情驱使你前进的路上，你更有可能获得独到知识，而不是在追逐潮流热点的闻风起舞脚步里。

15.Building specific knowledge will feel like play to you but will look like work to others.

创建独到知识的过程对于你就像是在玩，而对于别人则像是工作。

16.When specific knowledge is taught, it’s through apprenticeships, not schools.

不能通过学校教育教会一个人独到知识，它只能通过学徒制口传身教。

17.Specific knowledge is often highly technical or creative. It cannot be outsourced or automated.

独到知识通常极富技术性和创造性，因此它不能被外包或自动实现。

18.Embrace accountability, and take business risks under your own name. Society will reward you with responsibility, equity, and leverage.

拥抱责任感，押上自己的声誉以承担商业风险。社会也会以责任，产权和杠杆作为回报。

19.The most accountable people have singular, public, and risky brands: Oprah, Trump, Kanye, Elon.

最具责任感的人都具有独一无二的、世人皆知的、敢于冒险的个性特征，如奥普拉、川普、坎耶、埃隆。

20.“Give me a lever long enough, and a place to stand, and I will move the earth.” — Archimedes

只要给我一根足够长的杠杆，一处可以立足的地方，我就能撬起地球。——阿基米德

21.Fortunes require leverage. Business leverage comes from capital, people, and products with no marginal cost of replication (code and media).

财富增长需要使用杠杆。商业杠杆有三个来源：1、资本；2、人力；3、复制起来边际成本为零的产品（如：代码和媒体）。

22.Capital means money. To raise money, apply your specific knowledge, with accountability, and show resulting good judgment.

资本的意思就是钱。想要融资，那就运用你的独到知识，配合你责任感，展示出你良好的判断力。

23.Labor means people working for you. It’s the oldest and most fought-over form of leverage. Labor leverage will impress your parents, but don’t waste your life chasing it.

人力指的就是为你干活的人，它是最古老也是争夺最激烈的杠杆。人力杠杆会让你父母因为你手下有许多人为你工作而感到骄傲，但你不要浪费生命去追求这一点。

24.Capital and labor are permissioned leverage. Everyone is chasing capital, but someone has to give it to you. Everyone is trying to lead, but someone has to follow you.

资本和劳动力是需要征得许可才能使用的杠杆。每个人都在追逐资本，但总得有个什么人给你才行；每个人都想要领导其它人，但总得有什么人愿意跟着你才行。

25.Code and media are permissionless leverage. They’re the leverage behind the newly rich. You can create software and media that works for you while you sleep.

代码和媒体是无需要许可即可使用的杠杆。它们是新贵人群背后的杠杆，你可以通过自己创建的软件和媒体，在睡觉时仍然为你干活。

26.An army of robots is freely available — it’s just packed in data centers for heat and space efficiency. Use it.

一支机器人军团已经集结待命，只是为了节约空间和热效能，它们被打包放进数据中心。去用吧。

27.If you can’t code, write books and blogs, record videos and podcasts.

如果你不会编程，那你还可以写书和博客，或者做视频或者音频节目。

28.Leverage is a force multiplier for your judgement.

杠杆能够成倍地放大你的判断力（所产生的效能）。

29.Judgement requires experience, but can be built faster by learning foundational skills.

判断力需要经验，但它可以通过学习基本技能的方法更快速地建立起来。

30.There is no skill called “business.” Avoid business magazines and business classes.

并不存在一种叫做 “商业” 的能力。尽量避开商业杂志和商业课程。

31.Study microeconomics, game theory, psychology, persuasion, ethics, mathematics, and computers.

去学习微观经济学、博弈论、心理学、说服术、伦理学、数学和计算机科学。

32.Reading is faster than listening. Doing is faster than watching.

读比听快，做比看快。

33.You should be too busy to “do coffee,” while still keeping an uncluttered calendar.

你应该忙得没有社交的时间才对，与此同时你应该始终保证日程安排井井有条。  

34.Set and enforce an aspirational personal hourly rate. If fixing a problem will save less than your hourly rate, ignore it. If outsourcing a task will cost less than your hourly rate, outsource it.

你应该为自己设定一个有抱负的个人时薪数，并且坚持执行。如果解决一个问题所能节省下来的成本低于你的个人时薪，那就忽略这个问题好了；如果一项任务的外包成本低于你的个人时薪，就把它外包出去。

35.Work as hard as you can. Even though who you work with and what you work on are more important than how hard you work.

尽管你跟谁一起工作、做什么工作，要远比你的努力程度更加重要。但还是要倾尽全力去工作。

36.Become the best in the world at what you do. Keep redefining what you do until this is true.

你所做的事情，要努力做到世界最好。不断重新定义你在做什么，直到真的做到世界最好。

37.There are no get rich quick schemes. That’s just someone else getting rich off you.

这个世界上并没有快速赚钱致富的方法，如果你想要找寻这种方法，那它只会让别人从你身上赚钱致富。

38.Apply specific knowledge, with leverage, and eventually you will get what you deserve.

运用你的独到知识，配合上杠杆，最终你会得到你应该得到的东西。

39.When you’re finally wealthy, you’ll realize that it wasn’t what you were seeking in the first place. But that’s for another day.

终有一天当你变得富有，你会发现那一切并不是你最开始想要的东西。但是那就是另外一回事了。

注释：
1、财富就是你睡着觉，你的资产也在为你继续赚钱。这是一个越来越被广泛接受的定义。Naval Ravikant 是硅谷狂热的数字货币支持者，所以，他的话另有所指。从前后文来看，他所谓的资产并不等于是传统意义上的房产、股票、收藏，而是偏向于他反复提及的：软件和媒体。
2、出租时间概念，许多人理解为打工，认为打工就是出租自己的时间以换取金钱。其实并非如此，Naval 所指的出租时间概念，指的是一个人的财富增长，是否直接关系到他的时间。一个小卖部的老板，他并不为谁打工，但是他的财富增长需要他长时间守在店里，因此，他依然是出租时间换钱。但一个淘宝点卡店老板则不同，他的点卡销售是全自动的，不需要 24 小时守着，而且也不需要只做这一样生意。这就是 Naval 所谓互联网拓宽了个人职业生涯的一个例子。
3、equity 我翻译为产权，不是一个很好的翻法。但是 Naval 前文提到 assets，很明显，作为投资人他非常清楚地知道这两个字眼之间的区别。equity 无论是翻译为股票、权益或者是资产，原文说 “ You must own equity — a piece of a business — to gain your financial freedom.”，这是和出租时间概念做对应的。出租时间的人，在商业链条里作为生产资料出现，不拥有任何产权，也就无法通过商业行为获利，所以，我这里勉强翻译为产权。
4、specific knowledge 我翻译为独到知识，没有翻译为特定知识、专业知识或者是特殊知识。原因是在我的理解中，specific knowledge 不是书本知识，也不是学校教授的知识，更不可能在网上免费获取。一方面，它只能提供自己实践来获取；另一方面，它只能通过前人口耳相传。这种知识是做成一件事情的关键，属于知识体系中不共的那一部分。所以，我翻译为独到知识。
5、“Give me a lever long enough, and a place to stand, and I will move the earth.” — Archimedes 这话不像是阿基米德说的。更像是一次抬杠的结果：
“给我一个支点，我就能撬起地球！”  
“那么，您站在哪儿呢？”
“好吧，给我一个支点，再给我一个站立的地方，我就能撬起地球。”
“那么，您用空气就能撬起地球了？”
“好吧，给我一根足够长的杠杆，一处可以立足的地方，我就可以翘起地球！”
“那么，阿基米德先生，支点又不需要了吗？”
“滚！”
6、accountability 我本想翻译为 “靠谱程度”，想想还是算了。
7、号称是 “四十条语录”，但是我就找见了 39 条。
8、结合上下文看，Leverage 一词始终翻译为 “杠杆” 其实也不大对头。Naval 一再强调代码、博客、播客、视频节目，我觉得 Leverage 在他那里，有些时候应该相当于是个人影响力的代名词，或者可以简单理解为放大器。
请你相信我：
我所说的每一句话，
都是错的
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让写作成为清晨第一件事</title>
    <url>/posts/b03f5b98.html</url>
    <content><![CDATA[为什么我喜欢在晨间写作？诚然，一天之内的任何时间都可以用来写作。对某些人来说，噪声并不讨厌，它能够驱走寂静无声的沉重感；而另一些人则更偏爱深夜的宁静。我并不想和他们争论什么，每个人都能够寻找到适合自己的写作时间。
但是，下面为什么我把写作定为 “清晨第一件事” 的原因：

安静。在我看来，这一点至关重要，再也没有什么时间比世界还没苏醒的时间更完美了。
没有其他工作的侵扰。每天晌午和下午会有一大堆其他工作需要完成，这样也许就没有时间留给写作了。要是清晨起来首先就写作，那谁也挤不掉它。
没有其他生活琐事的拖累。占用写作时间不仅仅可能是其他工作，也可能是一切生活琐事，例如付账单、舞会、家庭和孩子们。如果你每晚写作，要是哪天碰上社交活动可怎么办呢？写作只好被推延了。

那么，你也打算开始清晨写作了？下面是一些我认为好的建议：

早点起床。如果平时你已习惯起床后稍稍整理下就正好赶上出门时间，那你得为了写作而早起一点。这正是我为什么每天清晨 4 点到 4 点半起床的原因，我有整整两个小时的时间用来写作。拓展阅读：《早起的十个好处，以及如何做到早起》
准备好主题。别早上起床后却不知道要写什么。请在头一天晚上选择好一个主题并稍稍整理思路，带着思路睡觉是件很棒的事——让你的潜意识替你工作吧。
准备材料。在头一天下午或晚上准备好要用的参考材料，并将它存在文本文档中。这样，一醒来就能立刻投入写作而不必因为上网搜索什么造成分心。
先写提纲。面对空空的屏幕就开始着手写作是件困难的事情，所以我总是在写作前先敲击一些笔记或提纲，他们能让我的大脑和笔端迅速运转，这让我的后续写作相当轻松。
勿查邮件。无论你有多大的冲动去做你以前在清晨所作的那第一件事，都请控制住这种冲动。对我来说，这件事是查看邮件。但这事也许会消耗一小时的时间，如此写作的时间就又被占用了。所以，请忘掉邮件，仅仅专注于写作。控制好冲动！
打开软件。我喜欢提前打开写作软件（我用的是 WriteRoom，因为它没有乱七八糟的会让我分心的东西），将文章标题敲在屏幕上，同时找出头一天准备好的那些参考材料，一切准备就绪，这样一醒来就可以立刻开始写作！
准备饮品。在写作前，我习惯准备一杯咖啡和一杯清水。清水让我更加清醒，而咖啡则令清晨的写作时光充满享乐。
专心致志。写作时，请控制住去上网、玩游戏、看电视、站起身以及去做其他一切事物的冲动。这需要不断实践，但随着实践的增多，你将逐渐习惯于专心致志的写作。熟能生巧么。
及时奖励。如果告诉自己写作一小时后或完成即将写完的文章后就可以查看邮件（或其他任何你想做的事），那你将更有动力完成写作。完成以后就请奖励自己察看邮件（或其他任何你想做的事）吧，并请好好享受这美好感觉。

]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>建立人际关系的七要素</title>
    <url>/posts/7747d9c3.html</url>
    <content><![CDATA[
真实

待人真实，使你变得独一无二。你就是你自己，不要去刻意做作地装出其他一副样子。
有些心理书上喜欢提到这么一条理念：想成为什么就先装成什么。它的实质是，只要先装出一副理想中某个人的模样来，最终就能成为那个人。但是，归根到底，你还是装出来的。
所以抛弃这条虚伪的心理学教条，以你自己的方式去尽力做好一切。从你的真实想法和信念，从你真实的自我出发，去寻找提高与改善，尝试新事物，并创造价值。
建设人际关系的前提条件是信任。而信任的最本质的基础，是相信某人表里如一，是一个真实的人。

对别人感兴趣（而不只是让别人对自己感兴趣）

确实，有趣的人会得到关注，但我相信，对他人感兴趣的人，会得到感激，因为我们总是喜欢那些对自己有兴趣的人。
想像一下，当你去买商品时，销售员过来向你介绍产品。如果他在介绍产品之余，也同样关注如何能最好地帮助你，满足你的需要。你一定会对他有所好看，而这并非因为他是个有趣的人。相反的，如果那位销售员一位的称赞这是如何伟大的商品，结果肯定就完全两样了。事实上，现实生活中那些成功地销售员都是前者。
当你表示出对别人的兴趣，希望进一步了解他，不是出于可怕的好奇心，而是为了更好地提供帮助或服务，那对方就会很感激，觉得很荣幸。学会欣赏我们服务的对象，会增加我们所提供的服务的价值。  

正确倾听以获取更多信息

当你对人们产生兴趣，他们就会提供你可以用来创造价值的重要信息。比如，如果你了解到老板痛恨冗长的备忘录，那你就知道可以用简短的报告打动他，赢得他的好感。或者，在与客户用午餐时，她吐露正在寻求一种新产品，因为这和她 14 岁儿子感兴趣的一个问题有关。你能了解到这一点，是因为你关心并询问她家庭的情况——同时注意倾听对方的回答。
用心去了解别人，寻求有助于提供更好服务的信息，这样做会赢得对方的好感。理解并认同他们的需求，会增加你为他们提供服务的价值。

体谅

如果你对他人有兴趣，并认真倾听，尽力去真正理解他们，你就能更好地体会他们的感受，你们的感受可能不会永远一致——如果一致，那你就是最富同情心的人了——但当你能体谅并理解他们的感受时，才能真正设身处地为他们着想。被别人理解是人类最强烈的需求之一，但是有太多时候，我们生活中的人，要么是根本不关心，要么是不愿意花精力来了解我们真实的感受。
一位智者曾经说过：“要仁慈。你所遇到的每一个人，都在经历一场艰辛的斗争。” 说这话的人叫斐洛（古希腊时期犹太教哲学代表人物），生活在 2000 年前。从那时到现在，世界没有什么大的改变，而他的忠告，仍然是真正同情心的灵魂。

诚实

交际艺术的真谛，不是说出对方愿意听的话，而是以对方能听得进的方式，告诉他们所需要知道的事情。我把所有的商业谋略总结成一个简单的信条：言必信，行必果。换句话说，不要承诺你做不到的事情；不要让别人对你产生不切实际、无法满足的期望；不要随口应承、大包大揽。做一个言而有信的男人、女人或组织。这就是诚实。

乐于助人

小事情可以造成大改变，许多小事情累积起来，就可以形成天翻地覆的改变。
许多年前，我从一位朋友肯那里，学会了如何为陌生人提供帮助。如果我见到一群人照相，而拍照的是他们中的一个，我就会主动过去帮忙，这样就可以把所有人都拍进去。
甚至是为别人开一下门这样的行为，也蕴涵着弗雷德的精神。所以，不要忘记保持友善——别人不会忘记你。

守时

对多数人来说，他们拥有的时间，远远少于可以支配的收入。关心他人，给他们时间，这是一份最珍贵的礼物。通过守时、高效、迅捷的行为，节省他人的时间，会创造价值，变平庸为杰出。与他人的关系就等于你花在他们身上的时间，所以，一定要把你的时间用得最好，关心他人，为他们服务。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>当一位清华本硕博放弃 “北京中产”，去往非洲</title>
    <url>/posts/c9ff3035.html</url>
    <content><![CDATA[
去非洲，当真是 “富贵险中求”？1

我是一个中国打灰企业派驻国外水利项目的小领导，拿的是土木工程的文凭，在人文领域的造诣和江湖地位严格为零。但是我不得不承认，身处这个讲台上，我现在有着非常强烈的表达欲望，迫切地想要把我在这个时代所经历和感受的东西与在座的诸位进行分享。这些东西未必有很高的站位，也未必有很深的理论价值，涉及到主观判断的内容时，也未必足够的理性和中立。但我在此保证我讲述内容的真实性，其中既包括客观事件的真实，也包括我讲述过程中我本人情感的真实。换句话说，我以下说的所有话，都是我本人此时此刻所坚定相信的。
按照咱们东亚的规矩，我需要从我的高考开始讲起，以增强我以下讲述内容的说服力。我是 1994 年出生于黑龙江省，2012 年参加高考，获得了黑龙江省理科第七名。当年黑龙江省理科是 20 万考生，所以我的成绩是全省前万分之 0.3。然后我进入清华大学土木工程系读本科。实话说我当时并不是出于一种对自己前途命运的精算去选择专业的。不知道大家有没有相同的感觉，当你非常努力地为了一件事情奋斗了很久之后，不管这件事情最后做没做成，你最终都不会感觉很快乐，很珍惜。**相反你会油然而生一种强烈的自暴自弃之感，你也说不上来是在报复谁，可能就是在报复你过去这么多年来像冤大头一样的努力。**
当然这种对人生自暴自弃的心理并没有真正让我对学业自暴自弃，上了大学之后我的成绩仍然很好。好到什么程度呢，就是我在 2015 年拿到了未来学者奖学金。读过清华的朋友可能知道未来学者奖学金，它是奖励给一个系中博士推免总评成绩第一名的一个奖学金。然后我就在清华直接读博了，还捎带拿了一个经济学的双学位。也就是说，如果单从做题这个领域来衡量，一个正常人在一生中遇到一个比我做题能力更强的人的概率基本上是零。
当然我现在讲这个，其实已然完全没有任何的自我吹嘘或者骄傲的成分了，我的内心完全平静，甚至多少带有一点羞耻感。一方面因为这已经是很多年前的事情了，这种做题上的成就多少有一点小孩子过家家的意思，成年人吹嘘这个本来就是很幼稚的事情。另一方面就是，经过这么多年以来的心理转变，我现在对东亚这一套从生到死的，基于排名的成就体系持有一种彻底的否定态度。也就是说不光是做题，包括升官发财所有这些被后天建构出来，但凡是涉及到排名的、攀比的，然后忽悠你东亚人从生到死一直像一个老黄牛一样勤勤恳恳工作不休的这一套，我现在也都持有完完全全的否定态度。我认为这些东西没有任何的荣誉可言，也不值得任何尊敬。
总而言之，做题这个游戏被我玩通关了之后，我几乎是必然地去思考我接下来的生活会是什么样的。那么一个标准的，北京的中产阶层过的是一个什么样的生活想必大家也都见到了。简单来说就是掏出一生的积蓄买房子，然后每天，每年，穷其一生生活在同一个城市里。以致于最后你对这个城市非常熟，哪个饭店好吃，哪里新开了个酒吧，新开了个游乐场你都非常清楚，你的视野基本上就在你定居的这个城市一直转悠。接着就是鸡娃，你爹都上清华了，你怎么就上不了，你怎么连个 985 都考不上，为什么我能赢你就不能赢，然后就会陷入深深的自我怀疑和无能狂怒。娱乐基本上就是开车带着老婆孩子去一个到处挤满了人的，假装是野外的城市公园露营，这个过程中孩子哭大人叫，你老婆还要在路上不断地抱怨衣服被弄脏了之类的事情，然后你找停车位还要找半个小时。
那么在我肉眼可见了北京中产的生活之后，我几乎是必然地推演到了接下来的这段逻辑：如果说我过去二十多年的努力导出的是这样的生活，那我为什么不现在就去死？相比起来我现在就死好像还更幸福一些。
这大概是 2018 年，或者 2019 年前后的事情。其实我的脑子想到这一步的时候，基本上就意味着我已经大致和自己辛勤做题的前 25 年达成了和解。首先我这个时候不怕死了，因为显而易见死亡这件事比北京中产的生活幸福太多；其次，我也不再畏惧我接下来的生命了，因为我已经完全明确了我所憎恨的生活，而除此之外的任何一种生活都是我可以去尝试的。
事实上在我的语境里，非洲这个概念本身是抽象的。我最开始讲述非洲这个概念的时候并不是专指地理意义上的非洲，它更多是对东亚这种单一化的评价体系、单一化的成功观的一种彻底否定和逃离。我是比较相信地理决定论的，物质决定意识，一个人身处的环境难免要影响到一个人的思维方式和他的心境。
当然我不否认确实有一些人，他们的心理非常强大，真的能够做到大隐隐于市，泰山崩于前而不变色，不管身处什么焦虑的、攀比的环境他都能做到不被外界影响，能独善其身。但是你也得承认那是极少数，我们其实都不是圣人，都难免被环境所影响，在这个环境呆久了你不想焦虑也得焦虑，最后我非常确定我自己肯定会变成一个连我自己都厌恶的人。我自己既非常厌恶这样的生活，然后我看到别人混得好了，我自己这个已经赢了二十多年的做题家基因肯定又要唤醒，我不由自主地就一定要焦虑。相当于我最后就会被我的基因驱动，去不断地追逐一些我明明很厌恶的东西。
所以其实最现实的对策就是跑，就是离开这个大环境，不跟这个焦虑的大环境产生往来。比如你不在他们选调公务员这个体系当中了，你就无所谓哪个同学当了大官，然后你发现谁谁谁明显比你强了。然后你不在他们搞金融的或者搞计算机的这个体系中了，你也就无所谓谁谁谁年薪几百万进入上流社会了。你把所有热门的选择都手动排除掉之后，最后剩下的就是非常清晰的，就是自我流放。应该说在我选择去非洲的很多原因当中，这种自我流放的因素应该说是占了相当大的一部分的。
很多时候我会想，自我流放这件事对于人而言，尤其是对于知识分子而言，它很可能是一种刚需，也就是说你必须自我流放，你不自我流放你就没法活，至少是灵魂没法活。就是在这种心态的驱使下，2021 年 6 月份我毕业，拿到了我的博士学位之后，我没有丝毫的留恋就来到了非洲工作。那个时候的我并不知道我自己想要一个什么样的生活，什么样的未来，但我非常清楚地知道自己不想要一个什么样的生活，不想要一个什么样的未来。
2
我正式工作之后，担任实际职务的第一个项目是在坦桑尼亚的一座水电站。我先简单介绍一下，水利工程跟一般的建设工程还有点不太一样，最主要的区别就是水利工程往往特别大。一个一般的建设项目可能有个几千万几亿，就算比较大的项目了，但是一座水电站的投资额轻轻松松几十上百亿，规模比一般的项目大几倍甚至几十倍。
像我们这一个项目，有几百个中国职工，当地工人五千人，相应的它的管理层级也比较多，整个项目的运行体系就是一个大国企，相当复杂。我去的时候是做项目大坝部分的总工程师，相当于项目的副总工。一般来说在我们公司一个普通的大学毕业生一直做现场管理或者技术的话，至少要十年左右能干到这一级，这还得是那种比较能干比较出色的。所以当时对于这个职务本身我对我们公司还是比较感激的，收入方面也确实不错，我也比较满意。
但是如果抛开职务和薪资待遇不谈，这个工作本身实在是非常崩溃的。我作为清华的博士来到施工局，对于施工局而言确实非常罕见，局里的大领导肯定是要对你表达很深切的期望和很高的重视的。然后也会说，你去基层主要是以学习为主，把基层的东西熟悉熟悉之后肯定是要做更重要的岗位，这个公司花这么多钱招你肯定不是为了让你当一个优秀员工的，肯定是为了让你做一个卓越的领导者，为公司带来长远发展的，反正大概就这个意思吧。
但是当你真正实际到了项目上之后，你要认清一点，就是所有的基层部门，不管什么行业，它永远都是焦头烂额的，永远都是鸡飞狗跳的，永远都是缺人的。对于基层来说它不管你是什么人，是特殊引进人才还是领导特别重视，任何一个多出来的人力都是雪中送炭。因为活实在太多了，人实在太缺了，所以这个时候不管来了谁其实都是一样干活，你只要来就是给大家分忧的。
另一个让人脸上笑容逐渐消失的事情就是生活环境。水电工程的一大特点就是普遍非常偏远，我们那个项目尤其偏远，它是在坦桑的一个自然保护区里面，是真正意义上的与世隔绝。它到坦桑尼亚首都达累斯萨拉姆是 350 公里的纯土路，不下雨的时候开 6 个小时，下点雨就是 10 个小时起步，最绝的是这中间一个城镇都没有。坦桑尼亚最有名的两个自然保护区，北边的是大家非常熟悉的塞伦盖蒂，南边的就是我在的这个叫塞卢斯。我们水电站的施工区域是这个大的自然保护区中间一个小的人类保护区，里面野生动物非常多。最多的就是这几样，狒狒、长颈鹿、鳄鱼、河马、羚羊、疣猪、斑马、角马、野牛，狮子不多，但是有。
所以你可想而知这种与世隔绝的生活是什么样的，大家每天的生活，实际上就只有工作，除了工作之外就是吃饭睡觉，一无所有。只要来了项目上，真的通常就是一年不出去。疫情这几年就更是这样，很多人 2018 年出国工作，到了 2020 年本来打算回国休假了，疫情开始就再也没机会回国了，就这样在国外一干就干了五年。这期间基本上就没有什么机会进城，很可能就一直在工地上面，大家可以想象一下这是一种什么状态，就是在一个工地上一待待五年，没有什么娱乐，也没有换环境的机会，就是一直干，每天如此。
如果光说项目上多艰苦的话，那这个格局就小了，是吧。确实，而且不光是格局小了，只讲项目上有多苦也很不公正。事实是，很多人其实是巴不得这样在项目上一直干的。我们这里分开讲，先讲中国人，稍后我们讲当地人。对于中国员工而言，很多人如果他在国内他就是一个普通的农民工，他在国内的工地上日薪可能很高，四五百甚至六百的都有，但是一年下来真正能够结钱的日子并不多。一年能拿到手十万块的人其实非常少。但是如果在这边的话，首先他是当工长，他不需要亲自动手干。一般我们一个工作面上，一个中国工长差不多是配 30~60 个当地工人，他指挥就可以了，所以没有国内那么累，还可以感受一下当领导的感觉。
其次是他在这边每天干，那就是每天都有工资，连工资带奖金全部算下来一年能拿到二十万，甚至更多，而且在项目上吃住生活用品还不花钱。如果他在项目上一呆呆了五年，那相当于他就能攒下一百多万的现金。那你想，对于一个中位数的中国老百姓而言，这一百多万相当于是直接可以让他翻身了。而如果他要回国休假，那在他休假的这段时间，有别人替了他的岗位，很可能就不让他过来了，他就失去了这个在国外一直拿钱的机会。他再去国内的工地上面找活，那收入又是要比在国外低好多。
此外所谓的工地艰苦是怎么一回事呢？
首先工地它作为一个户外场所，它跟室内劳动必然是有着本质的区别的。大家可以找个工地体验一下，在工地这个环境当中，不需要你干任何活，单单是在工地站一天，都是绝对的重体力劳动。首先是风吹雨打太阳晒，这是避免不了的。
其次你需要时刻提防各种各样的危险，精神一直是一个比较紧张的状态。而且工地这个环境它的危险源是无限的，它不像室内作业，危险源再多，它也是有限的，可以穷举出来的。工地的危险源没法穷举，你只能自己注意。还有各种噪音，粉尘。而且作业空间，跟工厂那种设计出来尽可能让你舒适高效的不同，它全都是非常违背人体工程学的空间。这就使得工地这个环境，你每天只要在那泡一天、在那些奇怪而且危险的地方爬一遍，你都会觉得筋疲力尽。再加上一些技术工作，跟业主扯皮，翻来覆去地每天拉锯，对很多人来说要不了几天真就是不得不跑路了。
除此之外，大锅饭伙食的质量，大家也可想而知。倒不是说食材不好，工地这个劳动强度，食材肯定是给你保质保量的，肉肯定是给你管够的，不然大家没法干活。但是口味那就不保证了。尤其当时防疫期间，当时国家不允许我们海外项目使用当地帮厨，只能让中国厨师给中国人做饭。几个中国厨师要做几百个人的饭，如果换做是你，你显然也很崩溃，最后这个饭菜的口味大家也可以想见。
至于住宿环境，平房，水泥地面，铁皮屋顶，各种各样你没见过的虫子和老鼠，一天停电十几次，停水十几次，你想象一下吧，这是一个什么环境。到了雨季下雨的时候，那个雨点砸在铁皮屋顶上面震耳欲聋，睡觉是不可能的。到后来我已经完全习惯那个声音，我就非常平静地睁眼看着屋顶等这个雨完全过去。当然我还是比较幸运的，有一次夜里风雨交加，把一个兄弟的铁皮屋顶直接刮飞了。那个兄弟相当于是睡着睡着觉突然听到一声巨响，醒来就看到了天上的乌云，然后瓢泼大雨浇在他的身上，他整个人那一瞬间是分不清梦境与现实的。我的房盖至少是真的没有飞过。
但是话又说回来，这种艰苦得已经有点离谱的生活仍然是站在我的视角看到的。我本身就是出生在一个体面的中产阶级家庭的独生子，父母都是 80 年代重点大学的大学生，我从小是在一个相当娇生惯养的环境中长大的。这种艰苦环境不仅我没见过，甚至可以说，在我父母在 80 年代末大学毕业分到大庆油田工作之后，连他们都没见过了。这就形成了一种鲜明而且离谱的反差，我给我爸妈看了我的工作和生活环境之后，连他们都觉得很离谱，他们甚至没法用 “你爸妈当年多么多么辛苦” 这一套说辞来鼓励我。因为 35 年前的他们周末有休息日，吃的比我好，住的也比我好，所以当时的场面一度非常滑稽。
但是这一切的艰苦都是站在我的视角上说的。如果站在中国工长们的视角呢？首先他们在非洲住的，不是单间就是双人间，最多最多的时候一个房间里住的也不超过 4 个人，那是大房间。而且，有空调，能洗澡，更何况还是砖房。在国内他们住的是什么？是板房，是 16 人间，空调洗澡这些事那就全看工地良心，有就有，没有就没有。伙食那就更是了，虽然口味欠奉，但是食材本身是绝对管够的，每顿两荤两素，想打多少打多少。在国内哪个工地能有这样的伙食待遇？所以说如果你是我，你在这样的环境当中，你觉得你还抱怨得出来吗？这种情绪是非常复杂的。
接下来我们再说当地人。先说一个和大家一直以来刻板印象不太一样的事情，那就是至少在东南非这几个新兴的，发展速度较快的经济体中，当地的黑人劳工实际上并不懒惰。他们实际上非常勤劳，并且干活很守规矩，只要你教给他，他就能原原本本地按照你所说的流程认真完成，很少为了省事而偷工减料。这一点甚至比中国的普遍情况还要强些，中国工人很多时候反而会喜欢耍点小聪明，违背一些操作规程之类，黑人工人干活普遍比较守规矩。
我们看到的非洲工人坐下休息或低效工作的场景，多数情况下是由于管理人员生产组织不力，或者工人劳动技能欠缺、不熟练导致的，并非主观的懒惰。而至于劳动者对按周、按月定期休假的诉求，我觉得这完全是天经地义的合理合法诉求，生产效率则完全可以通过合理编制排班表等方式来弥补。
勤劳这个问题我不敢说我的亲身经历能够代表整个非洲黑人，事实上同样在非洲，不同国别之间的差异也相当大，这一点我们后面展开细讲。
非洲的情况和任何一个工业化初期的国家一样，它生育率很高，这意味着它的青年人口非常多。同时由于工业化现代化是一个指数增长的过程，在工业化初期它能够吸纳的就业人数是非常少的，这就带来一个现象，就是绝大多数青年劳动力都得不到正式雇佣。经济学上就是说，这个国家还远远没有到达刘易斯拐点，你可以用基本工资近乎无限地雇佣到你需要的劳动力。所以相应的，获得雇佣的当地人，他们大部分是相当珍惜他们手上的这份工作的，只要不是被严重触犯尊严，他们是不会有什么过激行为的。当然我以上说的主要指东南非的这几个新经济体。有些国家就不是这样，当地人敌对心理很强，这个我们也是后边说。
3  
其实中国人在非洲的处境和身份，真实情况可能和大家一直以来想象的不太一样。其中最典型的一个就是，大家到现在还习惯于把我们这些出海打灰的工作称为 “援建”。大部分的工程，都是正常的商业合同，你给我钱，我给你打灰，然后我赚一个合理的利润。援助当然存在，一般都是学校、医院这种人道主义性质。
换个角度说，我们现在毕竟是一个市场经济的地球，我们做事肯定是要服从这种市场经济的逻辑的，单方面的援助关系它永远不可能长久，只有双向的互利互惠的关系才有可能长久，这是一定的。相应的，绝大多数来非洲工作的中国人也都不是什么理想主义者，有那种富贵险中求的土老板，这个自然不必说，那人家做生意的肯定不是来做慈善的；其他来的国企也好，私企也罢，大家都是打工的，目的就是养家糊口。
当然这相应的也就带来一个问题，那就是这些中国人里，几乎全部，都是我们所谓的 “干活人”。不管是工程师还是工人，大家的共同点就是能干活，一个人能顶两三个用，但是嘴皮子非常不溜，可以说是外宣外宣不行，内宣内宣不行。这就使得中国现在在“一带一路” 尤其是非洲国家的经济存在非常强，人数也非常多。但是你回国一问，大家都对中国人在非洲的存在形态完全是两眼一抹黑。学界完全没有跟它有关的任何理论研究，甚至你问我现在有多少中国人在非洲，没人能给你一个确切的数字。
中国人在这一点上非常吃亏，国内尚且完全不关注，那你想想国外会对中国人的观感很好吗？那必然是不可能的，大家对中国人如果说没有什么负面看法，那已经是很幸运了，你还想奢求什么正面看法。西方的文化霸权不是天上掉下来的，那是需要经年累月的高强度投入，高强度洗脑的，不可能是你埋头干活，然后人家日久见人心对你感动了的。
正是由于这种没有指导思想的指导思想，中国人里不是九成九，而是十成十都是来吃苦赚钱养家糊口的，所以中国人在非洲的整体素质实际上也并不高。有很多老工长，他们甚至不识字，来了就是单纯干活，那么和当地工人之间产生冲突也可想而知。恐怕没矛盾才是稀奇的对吧。我们是正规的大型央企，你要知道在非洲的中国项目 80% 以上都是私营经济，不仅仅是不识字的农民工的问题，而是身价上亿的老板他自己都未必识字。大家可以想象一下这些人不自觉的行为会造成多少冲突与矛盾。
所以说为什么单纯指望理想不行，必须得有钱呢，因为单纯的理想主义者是顶不住这些的。理想主义者可能能受得了这个苦，但肯定受不了这份侮辱，你是为了理想去的非洲，结果受到这样的侮辱，那你的理想在哪呢？所以这个时候必须得有钱，只有钱才能帮人顶过去，是吧。
我为什么要讲这些事情呢？因为我不想给大家讲一个充满鸡血的虚假的非洲。世界上只有一种英雄主义，就是你认清了生活的真相之后仍然热爱它。这话反过来说也一样，其实世界上也只有一种可笑的悲剧，就是你对生活抱有一种不切实际的美好期待，想象一个地上天国出来，然后当你发现它并没有你想的那么美好之后，你又一瞬间把生活看作一种一无是处的丑恶东西，你就像一个二极管一样在绝对的美和绝对的丑之间跳跃，可惜这两者都是假的。只有你真正完整地认识到一件事情的全貌，包括好的和不好的，你才有资格去评判你到底喜欢还是不喜欢它。大家还记得我之前提到过一个概念叫知识分子的自我流放吧，对，这回真成流放了。你发现这个不是小孩过家家，不是你在那唱高调的时候了，他们是跟你来真的，你脸上的笑容逐渐消失。这时候才叫流放，在此之前那都是旅游。
直到这个时候，流放的意义才真的体现出来。
4
当然了，所谓理想，它的内涵肯定不是这么肤浅的。你说尊重这个东西，它可能确实比吃喝嫖赌高一级，但它仍然属于是一种低层次需求。如果说你因为没有获得你想要的尊重就非常气馁，那这个其实也不是理想，这个还是属于香港警匪片的范畴，还是出人头地那一套。
其实我认为，就单从 “一带一路” 非洲这一部分来讲，我们现在做的这些事情里，一个很重要的，或者说一条潜藏的主线是什么呢？其实是破除马尔萨斯陷阱。
我现在在 2023 年这个时间点给大家讲马尔萨斯陷阱，很多人可能不爱听。觉得你看现在世界上这些主流国家面临的都是人口老龄化问题，大家都是担心人口越来越少啦，哪还有人嫌小孩多的？马尔萨斯那一套早就过时啦。你看，你这就是非常典型的只有发达国家的人算人，全球一半的人口都被你开除球籍了。马尔萨斯这一套你放在德国、法国那确实是过时了，但是你放在非洲它还真就不过时。
现在绝大多数的非洲国家都面临这个问题，他们不是经济不增长，他们的经济能增长，但他们经济的增长跑不赢人口的增长，也就是说他们物质的积累被人口的增长给填平了。最后不仅人们没有从经济增长中获益，而且环境变得更拥挤更差了。
这是什么，朋友们，告诉我这是什么？这是教科书一般的马尔萨斯！这是最标准的马尔萨斯模型。非洲几个主要国家的总和生育率都在 5 以上，个别能够达到 7。总和生育率到 7 是什么概念？生育率这个数据它不是均匀的，不是说你们两口子生 7 个，他们两口子生 7 个，所有夫妻都生 7 个。而是有很多夫妻，没孩子。有很多夫妻，只有一两个，两三个孩子。很多人根本没进入生育这个环境，就打仗或者流浪啥的就没了。那么这个 7 是怎么来的？是因为有更多的夫妇生育了十多个孩子。非洲有相当多的妇女是什么状态？从她们开始具备生育能力，她们就在一直怀孕，生了一个之后马上怀孕，再生再怀孕。一直到她死亡或者丧失生育能力为止，她的人生是没有什么间隔的。是这样，总和生育率能到 7。这是教科书一般的人道主义灾难。
从数理统计上讲，如果你在一个国家，你发现这个国家大街上的两口子人均带着两三个小孩，那不用想，这个国家的总和生育率肯定不到 2，肯定人口是萎缩的。如果要想这个国家的总和生育率达到 2，你在大街上看到的肯定是很多带着三四个小孩的夫妇，或者哥哥姐姐带弟弟妹妹那种。总和生育率 7，背后是无数个这样从第一天生育到最后一天的女人。
马尔萨斯的影响是会外溢的，因为人是有腿的。如果在接下来的 40 年里，按照现在的进度，撒哈拉以南非洲的人口翻两番，从 15 亿变成 60 亿，那么我敢说全世界任何一个所谓的发达国家都无法独善其身，自己躲进小楼成一统，都必然会被这一剧变的人口所深刻地影响。那会是整个社会最基础运行逻辑的深刻改变。
但是我们也注意到，其实在最近十年间，伴随着非洲整体和平程度的提升和各国普遍的经济发展，非洲几个主要国家的总和生育率都在逐步下降了，这是一个很好的信号。比如尼日利亚作为非洲人口第一大国，近十年来它的总和生育率从 7.3 下降到了 5.2，坦桑尼亚下降到了 4.5。总的来说，现在非洲主要国家的总和生育率都是在 5~6 这个区间内，这相比起十年前大家都在 7-9 区间，已经强的太多了。现在基本上是二十年人口翻一倍。
人口与经济发展之间的联系其实是很明确的。只要经济增长了，受教育水平，尤其是女性受教育水平提高了，女性的雇佣比例上来了，女性获得了拒绝生育的议价权和能力，你的生育率肯定会急剧下降。
生育是一种无意识行为，那些生了特别多孩子的人，她们往往意识不到生育这件事意味着什么。一旦你意识到了生育这件事情它是一件事情，你的生育率就不可能很高。不管是从统计数据角度还是从我的身边统计学来看，但凡是有短视频刷的夫妇，那是不可能有高生育率的。生育率越下降，经济发展越快，这就形成一个良性的循环。问题的关键在于你的经济发展能不能跑赢你的人口增速。如果跑赢了，那良性循环进入，皆大欢喜。如果没跑赢，那就像我刚才说的，进入马尔萨斯陷阱。
所以我们现在做的事情是什么呢？我认为这里面的底层逻辑，说白了就是让非洲国家的经济发展跑赢它的人口增速，我们的进入加速他们的这一过程。在这个过程里面，国家，或者说大型国企做的事情是基础工作，比如说电力投资。大家知道，电力能源是一切现代生活的基石，你得先有电，其次你才谈得上其他，比如工业、通讯、服务业等。大型企业的进入先把这些基建建设起来，然后后面私企，土老板，二道贩子这些人才能开展工作，才能把经济搞活起来，不然这些人其实没有任何生存的空间。
5
其实关于基础设施投资这个问题，我并不是一个激进主义者，我本人的经济观点是比较保守，反对过大杠杆的。这个听起来有点脑臀分离，是吧，因为我作为一个基建行业从业者，按理说杠杆越大我项目越多，挣钱越多。但其实这个逻辑不是这样的，因为要考虑回款。杠杆大意味着风险大，我活干完了，业主能不能把钱结给我们，这是个问题。现实是不一定，而且几乎一定不可能全结。这个话题谈到后面会变成一个过于专业的商务合同问题，所以我不展开讲太多。
我只说一点，就是所谓中国债务陷阱搞新殖民主义这个说法是非常可笑的，因为任何债主，没有一个不是希望债务人老老实实把债按时还上的。所以其实本届政府在非洲国家中，至少东南非区域这几个国家，他们的产业政策在我观察来说也是相对比较科学的。
我一直相对比较推崇东南非这几个国家，包括肯尼亚，坦桑尼亚，赞比亚，当然还有打内战之前的埃塞，不过埃塞打内战现在形势很难讲。这种推崇主要是来源于技术层面，因为我毕竟是一个工程师，我的站位不够高，我更多考虑的，一是谁能把项目干好，二是谁能在长远中从纯粹经济的角度把产业发展好。有些问题可能涉及到更高层次的政治考量，这个我不懂，也不可能懂。但是至少从我的视角来看，东南非这几个国家相对而言是靠谱的。
从干项目这个角度来看，他们靠谱主要是靠谱在这么几个方面：

制定发展规划时比较现实，有多少米煮多少饭。比如工程建设，他们一般不会盲目上马标准过高的特大项目，先完成后完美，先重视项目的普惠性。比如说，你修建遍布全国的低标准土路，或者简单铺装道路。这个钱你如果修高速的话可能就够在首都周围修一圈环线的，那他们会选择先修一些标准较低的土路。我先解决有无问题，然后我慢慢发展着，有钱了再去解决好坏问题。有些国家他就会比较认死理，我就要西方那一套高标准的，错一点也不行。最后结果就是你光开工都迟迟开不了工，有一点瑕疵你就给我停，十年下来人家都发展得不错了，他一条路还没修完。

制定雇佣政策上比较现实。东南非这几个国家，他们有一个共同的思路，我总结就是低工资，高雇佣模式。他们的最低工资标准定的比较低，当然相对于他们整体的经济水平来说比较高。比如坦桑尼亚这边建筑行业合人民币大概 1300，赞比亚现在应该是 800 左右，相对于他们绝大多数失业人口，一年到头根本拿不到什么钱，已经非常好了。但同时他们对雇佣数量的要求非常高，我们叫属地化程度，大意就是你这个项目每多用一个中国人，就要多招二十个当地人。


这有几个很显然的好处，一是能让发展的成果尽可能多地普惠给当地人，领工资的人多了自然反对的声音就少了。二是提高工程速度，施工效率低通过提高用工量来弥补。三是可以积累起相对比较多的熟练工。不要小看这一点，建筑工地的活其实技术含量是很高的。中国是比较特殊的那个，因为你感觉中国的农民工人均都有点技术，好像这东西不用学一样，其实不是的。非洲工人刚来的时候很多是钢筋都不认识，不会插插头的，混凝土配比之类的更不用提了， 这些都需要从零开始教。水利工程项目上收入最高的是推土机司机，通常来说收入能达到普通工人的三四倍。驾驶推土机是比挖掘机难度高得多的。
而有些国家就不是这样，他们会把很多人员的工资拉得非常高，就是稍微有点技术的工种，他们会把价格拉到每个月几千甚至上万美元。你听这个价格非常离谱，我雇中国人甚至我雇欧洲人都达不到你这个价格吧？当然你不雇他们就给你破坏。但与此同时，他们对你雇佣当地人的数量倒是没啥要求。要知道这国家绝大多数的人都是在生存线上徘徊的，然后你这边要求少数人要拿老百姓几十几百倍的收入。我都不想去深究他们背后的脑回路，也没这个必要，我只想说这种国家的失败那显然是一种必然。你跟这种国家合作，进入这种市场，你自己就要斟酌了。
就我经历的非洲国家而言，我认为主要可以分为两类，一类是发展主义国家，一类是非发展主义国家。典型的发展主义国家我见到的就是坦桑尼亚，赞比亚这两个。肯尼亚也是，而且肯尼亚的发展程度比坦赞两国还要高，但我没去过。斯威士兰算一个。典型的不是发展主义的国家，一个是刚果金，一个是南非，这俩国家还有点不同，我们后面细讲。
发展主义国家最典型的特点就是大推进，就是尽可能地集中国家资源，去推进公共设施的发展。比如提供电力，基础设施，像公路交通、铁路交通、港口、农业灌溉、供水、教育、基础医疗。这些东西是一切工业和现代生活的基础，投资巨大，回报周期长，基本上只能由政府来做。但是一旦做起来之后，很多东西反倒不用你太操心了，资本会自发地过来投资建厂。至于这个获取资金的过程，不管你是卖矿也好，是卖劳动力也罢，总之你要想办法去解决。
坦桑我工作的这个水电站就是很典型。坦桑政府非常厉害，他们把国内的消费税拉得非常高，还有一些卖天然气的收入和旅游业的收入，然后纯粹通过政府自筹资金，没有贷款，把这个水电站干起来了。这个水电站的发电量是三峡的十分之一，但是也算是大型水电站了，它建成之后会把整个坦桑尼亚的发电量翻一倍。要知道三峡的发电量现在只占全中国发电量的 1.5%，这个数量级大家可以自己算一算感受一下，这个就是工业国和非工业国之间的差距。
工业化早期虽然辛苦，但是也有一个好处。正因为你这国家没咋开发，大家干项目都是先易后难，所以你不管想干点啥，都是好啃的肉，难啃的骨头你暂时先不用啃。所谓好吃的肉，就是你这个项目往往财务状况非常好，成本非常低，收益非常高。就这一个项目，不管你干得效率多低，造成多少浪费，只要你干完了，效益就非常非常好。像我们这个项目，简单测算一下，在最不利状况下十年也回本了，再往后就是一个全自动印钞机。水电站的运营几乎没有任何成本，而寿命长达 100 年以上。
但是像中国现在就是进入到啃骨头的阶段了，我们现在再干的项目就未必能这么容易盈利了，就算我们干得再精细，也未必一定能盈利。这就是发展阶段不同导致的，当然这是另一个话题了。
6
讲过了发展主义国家，我们再讲讲非发展主义国家。刚果金是非常符合大家刻板印象的一个非洲国家，国家极其混乱，政府的控制力仅限于几个主要城市中的主要部分，绝大多数地方都是荒蛮的无政府状态，说是军阀割据都是比较客气的。同时这个国家的矿产资源极其丰富，那个丰富程度很难用语言来形容，如果刚果金有一个中位数水平的政府，这些矿产能够以一个正常价格卖出去并且造福刚果金百姓的话，那刚果金已经是发达国家了。当然现实中并没有，这些矿产资源的财富被来自各个国家的冒险家们跟刚果金的地头蛇瓜分，刚果金老百姓是什么都得不到的。这个国家的钱特别多，物资供应跟不上。结果就是物价奇高无比，非洲水平的收入，美国水平的物价，可以想象刚果金老百姓过的是什么样的生活。
我举一个简单的例子，就是刚果金的老百姓的房子当时给我造成了巨大的心理冲击。它甚至不是用茅草、土坯或者铁皮这种一般意义上的贫民窟材质做的，而是用几根木棍和麻袋拆下来的那种塑料布做的。可以说刚果金不仅是穷，而且刚果金老百姓在这种社会环境下的自暴自弃已经到达了一定程度。刚果金不是发展主义国家，是因为它从根源上不具备选择自己发展路径的权利。
另一个就是南非。我们知道南非其实不是一个典型的发展中国家，它非常强大，它是从一个发达国家跌落回发展中国家的，在非洲的诸多国家里它有一些特殊性。我们知道，南非过去的经济成就很大程度上是由之前的白人殖民者创造的，在旧南非的发展过程中，对南非本土的黑人采取了非常残酷的种族压迫和种族隔离政策。所以后来上世纪 90 年代，南非曼德拉革命之后，对这些原来的白人殖民者也进行了一定的清算，并且新政权也继承了旧南非的经济遗产。
事实上南非对整个非洲的产业经济是有一定的霸权的，因为整个撒哈拉以南的非洲严格来说就这一个工业国。南非的一切产业，从农业到工业再到服务业，在整个撒哈拉以南的非洲都可以摧枯拉朽，享有近乎垄断的支配地位。非洲本土的产业在南非面前几乎毫无还手之力，而受限于地理距离与政治距离，在非洲这片大陆上，东亚和欧美的产品想要与南非竞争也同样不是那么容易。
在坦桑尼亚，在赞比亚，在津巴布韦，你作为一名普通消费者所能购买到的任何一件稍微体面的商品，十有八九都是南非品牌。时至今日，仍是如此。在撒哈拉以南的非洲，一个国家工薪到中产阶层消费品的物价，除了其本国的消费税之外，几乎完全取决于这个国家到南非的地理距离和运输难度。距离南非越近、运输难度越低，则该国的物价水平越低。高端如欧美，实惠如中国，这些强大经济体对非洲物价的影响甚至连个水花都看不到。
但是，曼德拉革命之后，南非的发展一直可以说是牵着不走打着倒退，他们并没有利用好这些遗产。我列举几个数据来说。1990 年，南斯拉夫的人均 GDP 为 3800 美元，与南非基本相当。三十年过去，伴随着东欧巨变，南斯拉夫解体成了六大块、八小块。其中最惨的塞尔维亚被打了十年、制裁了十年并一直被欧盟和北约系统性地迫害与威压，混到 2021 年人均 GDP 是 9200 美元，而这些南斯拉夫碎片中最发达的斯洛文尼亚为 23500 美元。
与之相对，一路风调雨顺了三十年的南非，2021 年的人均 GDP 是 7055 美元，约为中国的 60%，塞尔维亚的 75%。2021 年，南非的发电量为 21.5 万吉瓦时，仅比 1990 年高约 40%，相比 2019 年减少了 7.4%，降至自 2006 年以来的最低点，并仍在迅速地下降当中。南非全国当前正在运营的火力发电站有 15 个，其中 13 个电站是 1990 年前建成的，它们的平均服役时间超过了 43 年。与此同时，南非的治安也几乎是我呆过的几个东南非国家里最差的，就是不太敢下车，这在达市是很难想象的，我在达市经常打个摩托车就出门了。
我当然不是说那套白人中心主义的观点，什么黑人治理不好国家之类的那套老公知观点。因为大家也看到了我对坦赞两国非常推崇，这可是货真价实如假包换的黑人国家，人家是能把国家治理好的，那为什么南非作为一个底子好得多的国家治理不好？我认为是南非这个国家的整体治理思路出了问题。它整个国家的目标，就不是发展，而是分配。
曼德拉革命在本质上是南非黑人夺权的革命，因此整个新南非的政策核心就是，如何分配能够使得南非本国黑人获益。甚至可以这样讲：当代新南非的执政合法性来源，就是不由分说地将利益向南非本国黑人倾斜，否则它就根本没有合法性。这一思路其实很难说错误，在夺取政权以及政权建立初期也确实行之有效；但是在长期中，一个执政党的工作核心势必要回归到发展上，教条主义的路线肯定是行不通的。
对本国企业和劳动者的保护，应当结合企业和劳动者素质的真实情况，尽可能地多在分配端进行，这也是东南非新兴经济体的做事思路。而南非的做法则是在生产端简单粗暴地保护本国企业和劳动者，问题便出现了：生产端的核心永远是生产，如果你的企业和劳动者的能力根本就不足以组织起有效的、保质保量的生产，而你仍然罔顾事实地强制它们直接参与乃至主导生产，那么你的蛋糕坯还没烤成蛋糕就已经糊了，你还谈什么分蛋糕呢？
与我们在东南非新兴国家那种 “确实存在很多问题，但是总能做成事” 的感觉不同，在南非市场，最大的感受就是“做不成事”。我们之前提到非洲各国的“本地雇佣“要求，南非市场对此的要求更加苛刻：除了普通员工之外，他们要求工长和高级管理人员必须有相当的比例采用本地雇员，其中工长的比例要求高达 99%；除了人员，当地分包商也必须达到一定的份额比例，否则就不能干活。这些当地中高级雇员的要价极高，月薪动辄达到六七万人民币，高出同等级的中方高管不少；与之相对，当地的普通工人月薪标准只有不到两千人民币，是中方工人的不到十分之一。这些分包商的报价也高得畸形，有的甚至达到市场合理价格的三四倍。
其实，作为跨国承包商，很多时候对于劳动力的价格并不敏感。因为对于大型基建项目而言，人工成本并不是大头，几个、十几个管理人员的工资更不算什么，真正要命的是工期和那些机械设备、材料的利用率。况且合同报价时，本来就会把当地人员的薪资纳入考虑，人工贵，报价相应上浮就是了。只要雇员能够胜任工作，切实提高工作效率，那么承包商是情愿甚至乐得多付点钱的。
真正要命的，是这些所谓的 “工长” 和“高管”的能力极差，几乎完全不能胜任工作，他们从最一开始就是打定主意来蹭饭吃的。之所以要价高，是因为市场恶劣，当地高级员工的就业机会极少，他们本就是抱着 “三年不开工，开工吃三年” 的心态来的。而当地的分包商，很多则是根本不具备施工能力的皮包公司，他们给出畸形的报价，原本就是为了让你拒绝这个报价，然后他利用自己的本地成分赚一个套皮的钱直接撤出，空手套白狼。
长此以往，南非市场的恶性循环不言而喻。恶劣的市场环境让企业不断退出，当地企业和雇员的工作机会减少，于是进一步杀鸡取卵，更加恶化市场环境，进一步减少了投资项目。这也难怪南非的发电量跌至 15 年来的最低点了。
7
之所以花了这么大的篇幅跟大伙讲非洲这些国别之间的差异，其实倒并不是一定要让大家多么了解非洲的各种细节，而是仍然在传递我一直以来想说的观念，那就是实事求是，永远辩证地、一分为二地看问题，不能把一件事想得太好，也不能想得太不好，要看到它真实的全面的样子。
我之前提到过，就是中国在非洲的这些人，都是干活人，他们只会干，但是非常不会说，很多甚至连字都不认识，这是非常吃亏的一件事。我们做了好多好多事，但是没人知道，没人研究，也没人关心。
但是，这个问题如果反过来说，又何尝不是这样？我们的干活人一句话都不会说，我们说话的人又何尝不是一点活都不会干？我们的学术界又何尝主动关心过我们干活的这些人有多么的了不起，干出了多少神奇的成就？何尝知道他们在前线过的究竟是什么样的生活，他们痛苦的事情是什么，而哪些事情是你以为他们很痛苦，其实他们并不痛苦反而挺快乐的？都不知道。
我们的知识阶层，他们想象出来一个非洲，想象出来一个劳动阶层的形象，然后想象他们的生活和面临的困难。连你的背景和人物都是想象出来的，你觉得你想象的他们的实际状况得失真到什么程度？
所以很多时候我和一些受过高等教育的所谓的知识分子交流，刚说了三两句话，我就觉得，他们这简直就是你说城门楼子，我说胯骨轴子，根本没法交流。后来我本人也像我干活的同事们一样，开始不愿意跟这些知识分子交流。因为我只能感受到令人绝望的愚蠢。但是这样逃避下去不是办法，所以我现在非常感谢文化纵横能给我这个平台，让我把一些在 “一带一路” 真实建设者看来废话一样的常识跟大家交流，让咱们这个国家两个不同的圈子能够搭上线。
我们今天的时间有限，我有太多太多的话来不及跟各位说，只能是每件事说一点，全都浅尝辄止。更重要的是，很多事情是很难用语言来表述的。清华有一个政策就是博士生实践，就是让学生去基层政府或者基层部门挂职锻炼一个半月。我就是 2018 年参加了这个项目，去了中国电建的下凯富峡水电站呆了一个半月，最后入职我现在的公司水电十一局的。我必须说，这个政策是非常好的，可以说是当前产学研大分离的背景下的一股清流。
但是我觉得它远远不够，因为挂职和实职的感觉是截然不同的。你必须要感受到那种你真的被扔到这里没人管你了，笑容在你脸上逐渐消失的感觉。你叫天天不应，叫地地不灵，这时候你的心才能真的沉下来，你才真的能把那些你原来默认忽略的农民工，那些在基层摸爬滚打了十几年几十年才混起来的小领导们当兄弟。因为真的只有他们是你的兄弟，风暴来了他们是你仅有的可以依靠的人。
去非洲很容易，白人有很多那种白左项目，给中产家庭的小孩刷履历的，有钱就能去。什么给黑人小孩当两天老师，打口井，给黑人小孩发点糖，然后拍几张开怀大笑的合影。举个条幅，上街念叨几句大象不能没有牙齿，你那叫环保吗？我这水电站每天节约上万吨标准煤，这才叫环保。如果你想去的是这样的非洲，那你现在就可以去，北京上海这种人上人大城市早就跟西方接轨了，这样的项目多得是。
要想真正学点东西，想要拥有真正的思考，那其实没有什么捷径可走，就是扎下心来，从这个社会的底层运行逻辑开始学起，不管是我这地理意义上的非洲，还是哲学意义上的非洲。
我其实一直非常相信一个道理，就是上帝往往会回报那些不对自己的人生做太多精算的人。不是说不思考，思考肯定要思考，而是说不要精算，别算得那么精细。为什么这么说呢，因为人类社会它是一个二阶混沌系统，它是不可预测的，不仅不可预测，还会根据人主观意志的扰动而急剧变化，你的所有精密的算计都必然是一场空。你以为自己进入了一个热门的好行业，结果不出五年它饱和了，大规模裁员了。你以为你拿到了一个铁饭碗，结果没几年它亏空了，这都是历史上发生过无数次的很正常的事情。很多人算计来算计去，都聪明惨了，最后反被聪明误。要我说你还不如不算计，与其整天在这想如何过好这一生，不如想想怎么好好过这一生。
一个战士，在他决斗之前，他也会向上帝祈祷，祈求上帝赐予他勇气与决断，但他从来不会祈求胜利本身。在我看来，祈求胜利本身是一种懦夫的行为，因为这意味着你缺乏足够的好奇心来面对属于你自己的未知。但你不觉得这种未知本身就很吸引人吗？你不知道你的未来将向何处去，你也不知道你将以什么样的角色来面对这些未知，这本身难道不就是生活的意义吗？作为一个青年人，我认为有一个道理是不言自明的，那就是在你为你人生的意义负责之前，你要先为自己人生的意思负责。过一个没有意义的人生还没那么可怕，但要是过一个没有意思的人生那可真的太恐怖了吧。
最后，我把一段我特别喜欢的话跟大家分享，大家很可能听过这段话，来自罗伯特 · 海因莱因的《时间足够你爱》：一个男人，应该能够换尿布，策划战争，杀猪，开船，设计房子，写十四行诗，结算账户，砌墙，接脱臼的骨头，安慰濒死的人，服从命令，发布命令，携手合作，独立行动，解数学方程，分析新问题，铲粪，电脑编程，做出可口的饭，善打架，勇敢地死去。只有昆虫才专业化。
祝愿所有的青年朋友们，愿上帝赐予你勇气与决断，让你能够如旁观者一般，平静地看着命运的车轮究竟会将你载向何方。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>我们这一代人的困惑</title>
    <url>/posts/1f87a3cf.html</url>
    <content><![CDATA[　　本文是于宙在 TEDx 大会上的演讲。这篇文章有点长，不过非常值得你花 20 分钟把它看完。本周如果只能推荐一篇文章，那么我们强烈建议你读读这一篇，“一个有故事的大叔说的实在话”。
　　以下是演讲全文：大家下午好,
　　很荣幸能够参加本次 TEDx 大会。
自我介绍
　　我是大连人，高中就读于大连市二十四中。因为当时学习十分不努力，所以高中毕业之后选择了出国留学。这其实是很多本科出国留学的人不能说的秘密，辗转了几个学校，最终毕业于美国印第安纳大学凯利商学院，主修投资和金融衍生品。
　　上学的时候迷恋炒股，学习依旧散漫，没能成为一个 “放弃了华尔街的高薪工作毅然回国” 的海归精英，真的颇为遗憾，因为实在没有什么华尔街的公司愿意要我。碰巧的是，毕业前两年股市和外汇的行情比较好，赚到了一点点资本，于是我决定回国做点生意。现在在大连从事餐饮行业，目前拥有 4 家芝士蛋糕店和 3 家火烧店。
引言
　　大学毕业之后第一次面对这么多人做演讲，坦率地说，非常的紧张。虽然年轻的时候我曾经畅想过很多次，功成名就之后能像我曾经的那些偶像一样和年轻的朋友们分享一下我是如何从一无所有走上人生巅峰的经验，然后语重心长地告诉大家，人活着不能像一根草而是要像一棵树，能走到金字塔顶端的只有雄鹰和蜗牛两种动物，我的成功你也可以复制等等。可是过了 26 岁之后我忽然意识到一个严肃的问题，就是自己的一生未必会取得很大的成就啊，所以当 TEDxDUFE 团队找到我说没关系即便你只是一个开小吃店的，我们也愿意为你提供这样一个和很多人交流思想的机会时，我的心情是多么地激动。因为公司还没上市，所以小草大树、雄鹰蜗牛、睡地板捡易拉罐这样的故事还不到说的时候。今天，只想和大家分享几个困扰了我和我身边的一些朋友十几年的问题，和在经历了一些变故和挫折后，我对这些问题的看法。
努力奋斗真的能实现梦想吗？
　　大家现在可以想象一下汪峰老师坐在转椅上，深情地望着你，对你说，“你的梦想是什么？”周星驰老师的那句 “做人如果没有梦想，和咸鱼有什么区别？” 据说也激励了几代人。梦想这个东西是如此的重要，简直就是人生的一盏明灯。成功的人们成功的原因各不相同，但他们都不会忘记告诉你，无论到什么时候，都不曾忘记梦想，是他们成功的首要原因。以至于我们这一代人对于人生意义的最通常的理解，就在于坚持梦想并最终实现它。可很少有人愿意面对的一件事情是，大部分人的梦想永远，没错，永远都实现不了。  
　　你没听错，大部分人的梦想永远都实现不了。  
　　先和大家分享一个我之前的梦想。上大学的时候，我热衷于各式各样的赌博游戏，是学校旁边赌场的常客。我赌徒生涯的起点源于赌场里最基本游戏轮盘赌，轮盘上 1 到 36 个数字和两个 0，赔率是 1 赔 36。1 到 36 分为红黑两色，押注红黑的赔率是 1 赔 1。作为一个合格的接受过九年义务教育的人都知道，每一次轮盘开始转动的那一刻，都是一次纯粹的独立随机事件。但是赌博这件事情的魅力就在于，当你真正身处赌场，看到已经连续 4 次开出红色的时候，几乎所有人都会想把筹码压在黑色的那一面。而我当时的梦想，就是破译这其中的奥秘。我最初的策略非常简单，当连续三次开出奇数，就押注偶数，连续三次红色，就押注黑色。难以置信的事情发生了，在我严格地执行这个策略的情况下，前几次去赌场不但全身而退，每次都还赚了不少，以至于我产生了一种幻觉，也许游戏是有规律可循的，我已经看到了人生巅峰就在不远处向我招手。当然最终的结尾你们一定想到了，在经历过连续 18 个偶数，连续开出 21 次黑色后，我把之前赚到的钱都乖乖地还给了赌场。  
　　后来我知道，我那个愚蠢的梦想叫做赌徒谬论，就不具体展开讲了。但它对我意义深刻，我终于明白了在纯粹的随机事件面前，一切规律都是无谓的。  
　　生活中的事情有极个别和轮盘赌一样，属于纯粹的随机事件，比如双色球。可是几乎每一个中了双色球的人都会告诉你啊，他们花了多少精力去钻研往期号码，研究历史规律，付出了多少辛勤的努力，最终获得了成功。实际上，即使是纯粹由随机性主导的事情，只要参与的人的基数足够大，小概率事件总会发生。有趣的是，几乎所有在随机事件中的受益者，都会把这完全由运气决定的结果归功于自己的努力上。不仅仅是参与者本身，旁观者也会这么认为。再比如，中国好声音的冠军嘛。  
　　我们生活中遇到的所有事情基本可以分为三类，第一类纯粹由随机性决定，比如布朗运动和轮盘赌博；第二类纯粹由能力决定，比如英语六级考试、110 米栏之类；第三类，也是我们最常遇到的，由能力和随机性共同决定，比如创业、投资、恋爱或是梦想。  
　　我对励志大师们总告诉年轻人要不惜一切代价追逐梦想感到深深厌倦的原因就在于，大多数人的梦想虽然不是纯粹的双色球，但也绝对是由随机性主导的。在强大的随机性面前，付出再多辛勤的汗水，就好比夜以继日蹲在轮盘赌旁边渴望参透其中规律。前面说到中国好声音的冠军，张碧晨的那一句 youaremydestiny，听得我也是醉了。但毕竟那一刻，中国又有多少唱歌唱得和她一样好甚至更好的姑娘，如果真把成为好声音冠军作为一生的梦想，一生中都得在痛苦中度过。我个人很喜欢黄渤，但绝对不会用黄渤作为例子去激励一个我这种长相差的年轻人不惜一切代价去追逐演员梦，注意是不惜一切代价。因为无论是唱歌还是演戏，再多的努力也只能让你变得很优秀，它们并不存在可以量化的评判标准，想成为万众瞩目的明星，随机性的重要程度都远远大于实力。  
　　我想，一个人在年轻的时候，做的每一件事情，能清楚地区分其中随机性所占的比例并能心平气和地接受它，在我看来就是最宝贵的财富。　　那么在你的梦想中，运气又扮演了多重要的角色呢？当你深深地感知到这件事情的随机性也许不会青睐于你，是否还愿意坚持下去呢？对我而言，梦想永远是值得执着追求的，但我可以无比心平气和地接受，它就是永远无法实现。
既然连梦都实现不了，还有什么事情值得努力呢？
　　去年这个时候，我发过一条微博。  
　　这些年我一直提醒自己一件事情，千万不要自己感动自己。大部分人看似的努力，不过是愚蠢导致的。什么熬夜看书到天亮，连续几天只睡几小时，多久没放假了，如果这些东西也值得夸耀，那么富士康流水线上任何一个人都比你努力多了。人难免天生有自怜的情绪，唯有时刻保持清醒，才能看清真正的价值在哪里。  
　　这段话在网上的疯传，是我始料不及的。更出乎我意料之外的是，我在评论中看到了相当一部分的骂声，还有人认真地给我写下了相当深刻的话，“你在拥有自己的光亮时不要吹熄别人的蜡烛，你不能因为你自己的不喜欢就否定别人。” 很莫名其妙是吧，即使你刚刚听完我上一段关于随机性的看法，你也会知道，我从来都不觉得努力是一件无所谓的事情。恰恰相反，我一直相信，在能力没达到一定程度之前，你连面对随机性的资格都没有啊。张碧晨能拿好声音冠军自然离不开运气，但换成杨幂，评委不但不会转身，可能直接撒腿就跑了。  
　　可现在问题来了，那究竟什么才算是有价值的努力？这可以从我那条微博说起。去年这个时候，我和朋友在琢磨去大庆做点服装生意，决定去考察几个商场。我当时住在北京，因为之前晚上和朋友在外面玩得比较尽兴，回到家里已经比较晚了，担心睡觉睡过头会错过航班，那晚上就直接在沙发上靠了一晚。那是我第一次去哈尔滨，十一月份已经很冷了，衣服拿得不足，下了飞机冻得头疼。又因为没有提前订票，到了哈尔滨之后才买的火车票，发现就只剩站票了。于是，当我一晚上没睡，冻得头晕眼花，又在绿皮火车上站了两个多小时之后，抵达大庆的那一瞬间我觉得自己实在是太不容易了，将来必须要写进回忆录里面。可是，回头仔细一想，这些所谓的 “努力” 对我最终把那个服装生意做好，没有半毛钱关系。更何况，如果我前一天晚上能早点上床睡觉，多准备点衣服，提前在网上把火车票订好，完全可以舒舒服服地达到同样的目的。‍我的那次经历像是自己二十多年生活中很多事情的缩影，沉溺在对结果没有直接帮助只是因为自己遭受了一些痛苦的行为中，误以为那就是努力。  
　　当我终于意识到我并不是唯一曾经把无意义的消耗当作努力的时候，忽然发现，原来生活中我觉得很努力的人，也许没那么勤奋，如果在正确的方向上坚持行动，超过他们也并不困难。  
　　因为我们这一代人对于勤奋和努力的理解，几乎清一色地来自于学校，更精确地说，在前二十多年的生活中，我们眼中最努力的人，就是那些最能拼命看书和做题的人。实际上，这种理解是极其片面而幼稚的，因为看书和做题本身，都是为了一个极其鲜明的目的而存在的，就是通过考试。这种勤奋的付出极其纯粹，更多的复习时间，更高的复习强度，一般而言，都可以直接地提高考试的分数，它们之间的联系鲜明而直接，每个人都看得懂。‍
　　但生活的美妙之处却在于，很多事情在我们没做到一定程度之前，是完全没法理解的。　　这就好比学英语，十几年漫长的岁月里我都在幻想，要通过多么复杂的流程，多么精密的设计，多么全面的涉及和多么不可思议的努力，终于有那么一天，或许我就能因为前期的那些无懈可击的学习，说一口比较流利的英语，像说中文一样，可以边说边想，而不是说每一句话之前设计它的句式时态词汇然后在心里复述几遍再看上去流利地背诵出来。谁不是这么设想的呢？可惜，它不仅从来没有实现，并且让我看不到有任何实现的趋势，对于每一个设立目标的人来说，没有比这更痛苦的感受。　　但是在去了美国两年左右的时间之后，我忽然发现自己已经可以毫无障碍地说一口流利的英语了。这并非我采用了什么新的学习方法，而是因为去了印第安纳之后身边中国人很少，在没有选择的情况下，只能被迫用英语去交流和表达，在这个过程中，我并没有认真想过自己每天进步了多少，也没有阶段性的检验学习效果，只是不停地去听和说，因为没有选择嘛。直到两年多后的忽然有一天我才意识到，咦，自己好像真的已经可以了。但是我确实无法总结出来是如何一步一步做到的，只是那两年的时间，我一直都在很不情愿地用英语去生活嘛。　　一个人能获得的最可贵的能力，都和掌握一门语言一样，你所付出的努力不是能够获得即时回馈的，甚至在很长的一段时间内没有任何收获，直到积累到了一定的阶段后，忽然爆发出惊人的力量，连你自己都不清楚这一切是如何发生的。比如锻炼身体，读书写作，或者是做生意。当你经历了足够的量变终于引起质变时拥有的技能，大部分人是终身难以企及的，不是因为他们太笨，恰恰相反，因为他们都太聪明了。　　触发人类行动的最基本原理被称为反射，我们是需要即时回馈的物种。所以绝大多数人对于世界的理解度是线性的，但更多情况下，事物却是以漫长的潜伏震荡后爆发突破的形式发展的。我现在时常觉得，人在少年时期更容易掌握语言、乐器、美术这些成年后很难学的技艺，并非那小时候就是天资聪颖，而是小孩子很少会一个星期质疑一次自己收获了多少，都是闷头一练就是好几年，直到学会了才知道哦自己已经会了。只有聪明的成年人，才相信一本书读懂易经，10 句话揭秘马云的成功之道，30 天成为吉他高手的故事。　　简而言之，现实生活中，付出和结果之间往往没有那么立竿见影。在离开学校之后，当我们遇到的很多事情不再像做题和考试之间联系得那么紧密的时候，很多人的付出都是浅尝辄止的。而最可贵的努力，是选择一个正确的方向，那些无法立即获得回报的事情，依然能付出十年如一日的专注和热情，最终的结果也许不足以让你独孤求败，但足以出类拔萃。
人这一生中是否有一个节点，过了之后一切都会好起来？
　　前面说了这么多，谈论的都与目标和实现目标有关。仔细想想，我们的一生好像都是在实现目标中挣扎着度过的。上初中的时候，老师告诉你，中考的淘汰率是最高的，只要闯过去，上了高中一切就好了。但上了高中的时候发现不是那么回事嘛，高中老师又说了啊，考上大学就进了天堂。于是你考上了大学，依然空虚迷茫各种草样年华，父母老师又告诉你，找到工作就好了。工作之后发现烦恼和忧虑依然都在，女朋友给你看马云的故事，告诉你等你事业有成就好了……　　你发现了吗，其实人这一辈子的每一个阶段都有新的痛苦和顾虑，周而复始，生生不息。绝对不会因为你考上大学，事业有成，迎娶了女神就从此 happilyever after。但每一个阶段也有每一个阶段的快乐，无法替代。生活不是安徒生童话也不是好莱坞电影，从出生的那一刻起直到生命的尽头，都不存在什么节点，过去了之后一切幸福美满无忧无虑。
　　每一段岁月都有它存在的价值，没有高低贵贱之分，都不应该被辜负。而我能想到的人这一生能做的最愚蠢的事情，就是把全部人生的希望都孤注一掷到未来的某个节点上，而忽略了生活本身应有的乐趣。哪怕你以后真正实现了那个执念中的目标，才会发现它远远没你想的那么美好。年轻的时候和哥们在操场上打篮球喝可乐的快乐，是以后高尔夫球会所里品红酒替代不了的。尤其男生，千万不要总想着等将来有钱了如何如何，且不说你以后很可能不会太有钱，而且相信我，就是有钱了也真的不能怎么样。生命就在每天的生活里，一切执念都是虚妄。和身边的人愉快相处，认真安排好每一天的活动，用心去感受每一天的心境，就是生活的意义本身。这其实是我今天最想分享给你们的事情。　　谢谢大家。
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>早起的十个好处，以及如何做到早起</title>
    <url>/posts/ca2dc928.html</url>
    <content><![CDATA[如果你是一个 “夜猫子”，并且这样对你的工作很有效，我认为那这样就很棒了，没有理由去改变它，尤其是如果你已经适应了那样的生物钟的话。
但是就我而言，从一个 “夜猫子” 转变为早起者有着重大的意义。它在很多方面都对我有好处，以下仅仅列举了一些早起的好处：

向新的一天问好。我喜欢起床后，向精彩的新的一天问好。我养成了做晨礼的习惯，这包括对你的祝福说声感谢。这个灵感得自于达赖喇嘛，他说过，“每天，当你起床时要思考，‘今天我很幸运地醒来，我依然活着，拥有宝贵的生命，我将不会在浪费它。我要发挥我全部的能量来提升自我，向他人张开宽广的心扉，去启迪所有受我帮助的人，我将把我的思想授予他人，不会去生气，不要把别人往坏处想，我要尽我所能地去帮助他人。’”
令人惊讶的开始。我曾经从床上急匆匆地跳起来，开始新的一天，就像往常一样晚，冲出卧室，将自己和孩子准备完毕，然后匆忙把他们送到学校，接着很晚才回来开始工作。（工作时）我会走来走去，东瞅西瞅，脑子一片混沌，脾气很暴躁，因为我总是在其他人的后面。这可不是一个很好的方式来开始新的一天。如今，我开始了新的方式，我会在早上八点之前把所有的准备工作做完，孩子起的很早，我也同样，在其他人开始工作的时候，我已经完成了工作的一部分。就我个人的经验而言，没有什么比早起更好的方式来开始新的一天了。（谚语：中国有句谚语——“早起三光，晚起三慌”，说的就是这个道理。）
宁静心灵。没有孩子的惊呼，没有婴儿的哭闹，没有人踢球，没有汽车的声响，没有电视的噪音。清晨早起之后的这段时间时如此的平静，如此的安静。这是我一天中最喜欢的一段时间，我真的喜欢这段安静的时间，这段属于我自己的时间，这时候我可以思考，可以阅读，可以呼吸新鲜的空气。
观看日出。晚起的人错过了大自然最壮观的景面，它每天都在重复——日出。我喜欢看着天逐渐变亮，此时，午夜深蓝色的天空逐渐的变成浅蓝色，闪耀的光芒从天边射出，大自然蒙上了一层难以想象的色彩。我喜欢在这个时候晨跑，我边跑边望着天空，告诉这个世界，“多么美妙的一天啊！” 真的，我真的是那样做的。有点野蛮，我知道。
享受早餐。早起的话你肯定就有时间来吃早餐。别人告诉我早餐是一天当中最重要的一顿饭，不吃早餐的话，你的身体在饥饿中工作，直到中午时间，你会因为太饿而吃掉所有的（包括不健康的）食物，像高脂肪的与高糖的食物。但是如果吃早餐的话，你就可以撑的更久。另外，在安静的早晨里，一边吃早餐，一边阅读，再一边喝咖啡，真的是非同寻常享受，这可比在工作的路上或者办公桌旁饿肚子舒服多了。
清晨锻炼。当然，除了清晨以外，还有其他的时间可以用来锻炼，但是我发现，虽然在工作之后再进行锻炼也是非常愉快的事情，但是这样的话，你可能会因为其他的事情而取消掉它，而晨练一般不会被其他事情所干扰（因为你一起床就开始晨练，这时候其他的事情还没有过来烦扰你）。
提高效率。早上是一天当中效率最高的一段时间，至少对我来说是这样。在阅读邮件和博客之前，我喜欢在早上写作，因为这时候没有什么事情使你分心。早晨就开始工作能够让我完成许多事情，这样的话，当夜晚到来时，我已经完成了一天所有的工作，就可以和家人一起共渡这美好的时间。
为完成目标设定时间。设定目标？是的，你应该设定目标。没有比早晨更好的时间来回顾目标、安排计划，并且去完成目标的任务。你应该给自己设定一个这周想要完成的目标，每天早晨起床时，你就要决定你今天能做那些事情可以让你离目标更近一些。如果可能的话，早晨起来做的第一件事情就是它。
早起的补偿。谁都不喜欢交通高峰期，除非它是 Big Oil。早起的话，交通非常的通畅，你可以更快的到达工作场所，也因此可以为你节省更多的时间。或者更好的话，你可以骑自行车上班。（最好的情况是，像我一样在家工作。）
准时赴约。如果你早起的话，就能很轻松地应付那些很早的约会（与顾客或者合作商的会议等）。赴约迟到的话，对于你要见的人可不是个好的信号。提前赴约的话会给他们深刻的印象。另外，你也有更充分的时间进行准备。

早起还有很多其他的好处，那么应该怎样成为一个早起者呢？

不要做太大的变动。慢慢地开始，一次只比原来早起 15-30 分钟。适应一段时间后，接着在提前 15 分钟。逐步地这样做直到你能够在设定的目标时间起床。
让自己睡的早一点。你可能习惯很晚才睡觉，可能是因为看电视或者上网。但是如果你继续保留这个习惯，要想起得早一点，你迟早得放弃其中的一个（看电视或上网），否则你就要睡到很晚才能保证充足的睡眠。我建议你早点上床睡觉，即使你认为你不能马上入睡，在床上读会书。当你累的时候（在床上读书很容易困），你会发现你比想象中入睡的要快的多。
把你的闹钟放在离床远的地方。如果它就在你的床边的话，你会不自觉的把它关上，然后继续打盹儿。千万不要打盹儿。如果它离你的床很远的话，你不得不离开床才能把它关上。但是这时候，你已经站起来了，你就不得不起床了。
关上闹钟之后立刻走出卧室。不要允许自己再回到床上，强制自己走出房间。等到洗完脸后，我已经足够清醒来面对新的一天。
不要给自己找理由回到床上。如果你允许头脑中有个想法告诉你不要早起的话，你永远也做不到早起。不要给自己任何回到床上继续睡觉的理由。
给自己找个早起的理由。为早起准备点事情做是非常重要的。这个理由会给你早起的动力。我喜欢在早晨写作，因此那就是我的理由。同样的，当我做完那之后，我喜欢阅读所有你们的回复。
给自己早起的奖励。是的，刚开始时强迫自己做一些事情是很困难的，但是如果你让它变得很愉快的话，很快你就会期盼着早起。一个不错的奖励就是煮一杯热咖啡或者茶，同时读本书。其他的奖励比如说一顿可口的早餐，或者是看壮丽的日出，抑或是坐下来冥想。找到一些令你愉快的事情，并把他们列为每天早晨起床后你要做的事情。
充分利用早起的时间。不要将早起一个或两个小时仅仅用作阅读你的博客（或者其他不是很重要的事情），除非那是你的主要目标。不要早起后浪费那宝贵的时间，全新地开始新的一天吧。我喜欢利用这段时间来考虑如何准备孩子的午餐，计划今天要做的事情，做早操或者冥想，以及阅读。大概在 6 点半左右，我已经做完许多人一天做的事情。

]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>极简生活</title>
    <url>/posts/8cccddd6.html</url>
    <content><![CDATA[30 岁前，很多人羡慕他们，年纪轻轻便靠着自己的能力，领着六位数的高薪，住豪宅，开豪车；随手一挥就能拥有想要的一切。30 岁后，他们一个不知天高地厚放弃了六位数的工作，一个造化弄人从公司下岗。
很多人捧着爆米花等待着看他们的落魄桥段，他们却投身于一种新的生活方式，从此被 BBC、ABC、TIMES、纽约时报，华尔街日报等各大媒体杂志簇拥。
“美国家庭平均拥有超过 30 万件物品，或许我也有那么多，我依恋我所有的东西。” 可是自己真的需要这么多东西吗？约书亚开始怀疑。
他曾经拥有得太多：拿着 6 位数的薪水，掌管 150 家店铺，有一个美丽的妻子。每周工作 70-80 个小时，每年 362 天，22 岁就买了豪宅名车，大肆地消费。
▲ 约书亚
但拥有的太多，却往往让我们神志不清，忘记什么对自己才是最重要的。于是在同一个月里，他的母亲去世，婚姻也走到尽头。这让他意识到自己需要改变。
他开始丢弃东西，一开始试着在 30 天里丢弃 30 个物件，但渐渐 “丢上了瘾”，昂贵的衣服，多余的器皿… 在 8 个月的时间里，他成功地舍弃了 90% 的物品。
▲ 约书亚只有 288 件物品的家
现在，约书亚的生活里只拥有 288 件物品或者更少。留下来的每一样都是不可或缺的。
而他的生活意识也开始变得清晰，他学会审核每样东西是否真的需要。变得更加的快乐与自由。
20 年的好友瑞恩看出了约书亚的变化，于是问他：“为什么你这么快乐？”
那时瑞恩刚从高管的位置上被辞退。他曾经因此忧郁，但后来这成了在他身上发生得最好的事。约书亚将自己的极简尝试推荐给了他。
▲ 瑞恩
于是速度派的瑞恩决定，在 21 天内过上极简生活。  
在约书亚的帮助下，瑞恩花了八小时清空了壁橱，并把所有物品都打包放在盒子里。之后的 3 周，瑞恩每次只解开接下来一周所需要的东西。
当 21 天结束，未被解开的那部分，就是需要舍弃的部分。
▲ 把所有东西统统打包
第一天，瑞恩解开了床单洗漱用具等必备物品，之后是一些衣物，一个星期后他们发现大部分东西还在盒子里，等到第 11 天时，瑞恩没有再拿出任何东西。
3 个星期后，瑞恩有 80% 的东西没有被解开，它们被出售、捐赠或扔进了垃圾桶。
而瑞恩，带着剩下的 20% 搬进了新家，在全新的生活里，瑞恩重新找到了激情，起码他现在分的清那些让他快乐的事情：三明治，乌龟，以及温蒂的咖啡。  
为了帮助和他们一样迷惑的人，他们把这 21 一天的经历记录下来，博客 The Minimalists 因此诞生。
物品的囤积，是由于目标的不清晰造成的。
有时候，买了十个杯子，但最常用的也许就只有那一个而已。我们总是害怕失去那些我们可能需要的东西。
杂乱与充满负荷的生活，曾经模糊了约书亚的视线，他 21 岁开始迷上文学，但因为混乱，并没又开始写；22 岁开始写却又因为混乱，没有认真地去写。直到 28 岁，他舍去生活中 90% 的杂质，才确信了那 10% 的不能割舍。
2011 年，约书亚放弃了自己的无聊的六位数工作，在 30 岁的时候成为了一名专职作家。
现在他也已经出了 4 本畅销书，而他与瑞恩共同经营的博客 The Minimalists 也已经有 400 万的读者。  
很多我们常常坚持的事情，大多数是因为我们害怕摆脱它们。但一旦我们开始舍弃不必要的物件，多少会让我们开始拥有一点对应自信去处理我们的不必要的其它。
在我们的 30 岁，我们一定会获得一些东西，然后会失去一些东西。大多数人都难以绕过它，但或许，我们可以把它看做是一种磨练：
拥有了才会失去，只有在得失之间，我们才会知道什么是真正重要的。我们因此学会断舍离。
]]></content>
      <categories>
        <category>生活记事</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>比免费更好</title>
    <url>/posts/ab519416.html</url>
    <content><![CDATA[互联网就是一台拷贝机（copy machine）。在它的最基层，它拷贝我们上网时产生的每个动作、每个字符、每个想法。为了在互联网上由此及彼地传递信息，通信协议要求整条信息在传送路途中被拷贝数次。IT 公司从销售促成这种无休止拷贝的设备中赚了大钱。任何一台计算机上产生的每个比特数据都会在某地被拷贝。因此，数字经济正如流淌在拷贝的河流里。与机器时代的大批量拷贝不同，这些拷贝要便宜得多，它们是免费的。
我们的数字通信网络被打造成让拷贝流尽量畅通无阻。实际上，拷贝流的自由流动让我们可以把互联网想象成一个超级的配送系统，一旦产生了一个拷贝，它将永远在网络中流动，就像超导导线中的电流。现实生活中我们已经能看到证据，一旦任何能被拷贝的东西被放到互联网上，它就会被拷贝，而且那些拷贝永远不会消失。即使一条狗也知道，你无法铲除互联网上的东西。
这个超级配送系统已经成为我们的经济和财富的基础。对数据、想法和媒体的即时拷贝支撑着所有主要的经济门类，尤其是那些与出口相关的，即美国拥有竞争优势的产业。我们的财富坐落在一台大规模、不间断地进行拷贝的设施上。
起先，这种经济体系中财富的获取来自于销售宝贵的拷贝，因此免费拷贝的自由流动会逐渐破坏既定的秩序。如果拷贝我们最好的努力成果都不花分毫，我们如何能持续下去呢？简单地说，一个人怎么能通过销售免费拷贝来赚钱？
我有一个答案，用简单的话说就是：
当拷贝极大丰富的时候，它们就一钱不值了。当拷贝极大丰富的时候，没法被拷贝的东西就变得稀缺和值钱。
当拷贝是免费的时候，你得卖不能被拷贝的东西才行。
那什么是不能被拷贝的？
有几样特质是不能被拷贝的。想想「信任」。信任不能被拷贝，你也买不到。信任必须通过时间来赢得。它下载不到，也不能被伪造，被仿冒（起码干不长）。如果所有别的条件都是同等的，你总是愿意和你信得过的人做生意。所以「信任」在一个拷贝泛滥的世界里是增值的无形资产。
还有几种类似于信任的特质是难以拷贝的，因此在网络经济中很有价值。我想检验它们的最好办法是不要从生产者的角度看，而是从用户的角度来看。我们可以从用户提出的一个简单问题入手：我们为什么要花钱买可以免费得到的东西？当有人买一件本可以免费得到的东西时，他们究竟买了什么？
按照我对网络经济的研究，我发现大致有 8 个范畴的无形价值能让我们掏钱买本来可以免费得到的东西。
千真万确，有 8 种东西比免费更好。8 种无法拷贝的价值。我把它们称为「生财要素」（generative）。生财要素就是一种需要被产生、成长、培养与呵护的特质或属性。生财要素不能被拷贝、克隆、伪造、复制、仿冒或再造。它是在适当的位置，经过时间积淀而唯一生成的。在数字竞技场上，生财要素为免费拷贝增添了价值，因而成为能卖钱的东西。
8 个比免费更好的生财要素

即时享用。无论你想要什么，迟早你都会得到免费拷贝。但是它一旦被发布，或者更进一步，刚被其制造者生产出来的瞬间就放到你的收件箱里，就成了一个生财之道。很多人在首映日到电影院去看电影，他们肯花一大笔钱去看今后能通过出租或者下载而免费或近乎免费地看到的电影。精装书贵是因为它的即时性，而不是因为硬书壳。同样商品中排在头位的经常会有溢价。作为一种可销售的特质，即时享用有多种层次，包括能获得 beta 版。「粉丝」被带到生成过程本身之中。beta 版通常不值钱，因为是还没完成的产品，但它同时也有能被销售的生财要素。即时享用是相对而言的，这是其成为生财要素的原因。它必须切合产品和用户。博客和电影或汽车比起来时间感是不同的，但即时性在所有媒体中都能找到。2. 个性定制。一份普通的演唱会录音可能是免费的，但如果你想要一份根据你的客厅而调校出来的完美拷贝，听起来就像在你的房间里演奏一样，你可能愿意出大价钱。一本书的免费拷贝可以被出版商定制以反映你过往的阅读背景。你买的一部免费的电影可以按你需要的分类级别剪辑（无暴力镜头，可以讲脏话）。阿司匹林是免费的，但按照你的 DNA 定制的阿司匹林会非常昂贵。正如很多人注意到，个性定制要求创作者和消费者之间、艺人和粉丝之间、生产商和用户之间的持续沟通。这是一个很深入的生财因素，因为它是循环往复的，还很花时间。你无法拷贝由关系代表的个性化。市场营销人员称之为「粘性」，因为这意味着关系的双方被粘在（投资于）这一生财因素之中，不情愿发生变化和重新来过。3. 专业解读。就像一个老笑话说的：软件，免费；手册，$10,000。但这不是笑话。有些知名公司，如 Red Hat，Apache 等就是这么赚钱的。它们为免费软件提供收费服务。代码的拷贝，仅仅是比特数据，是免费的，只有通过技术支持和指导才对你有价值。我怀疑许多遗传信息是由这种途径传递的。目前获得你自己的 DNA 拷贝会非常昂贵，但很快就不是这样了。事实上，不久后，制药公司将给你钱来得到你的基因序列。因而你的基因序列的拷贝将是免费的，但对其含义的解读、知道能对它做些什么、知道如何应用它，也就是说你的基因的操作手册，将是昂贵的。4. 权威认证。你或许能免费获得一份关键的应用软件，但即使你不需要操作手册，你也可能需要确认它是没有编程错误的、可靠的、有保证的。你会愿意为认证付费。我们身边有近乎无数的 Grateful Dead 乐队风格的变种，从这个乐队自身处买一个权威版本将确保你得到你想要的东西，或保证是该乐队演唱的。艺术家们早就为解决这个问题头疼了很久。照片和版画这类图片在复制时，常常会有艺术家的印章（签名）来保证权威性并提升其价格。数码水印和其他的签名技术将无法作为防止拷贝的措施（记得吗，拷贝就像超导流体），但在对其在意的人那里，它们能提升权威性这一生财因素。5. 触手可得。所有权是个麻烦事。你需要保持东西整洁、持续更新，对数码材料还要备份。在这个流动的世界里，你还得一直带着它们。很多人，包括我，很乐意用订阅方式让别人来照管这些东西。我们愿意付钱给 Acme Digital Warehouse，让它打理音乐、电影或照片（我们自己的或其他摄影师的）。同理适用于书和博客。Acme 备份每份东西，付钱给创作者，并按我们的需要提供给我们。我们用电话、PDA（个人数字助理手持设备）、手提电脑或大屏幕设备随处访问到这些内容。相比于我们自己照料、备份、添加、组织这些内容（的麻烦），随着时光流逝，能够免费获得大部分内容这件事会变得越来越没有吸引力。6. 虚拟成真。数码拷贝的核心是没有实体。你可以得到一件作品的免费拷贝并显示在屏幕上。但也许你更想在大屏幕上看高分辨率的版本，也许还想要 3D？PDF 文件很好，但有时将同样的内容印在雪白的纸上、用皮面装订起来就更美妙了。这种感觉真好。与 35 个人一起在你最喜欢的免费游戏中同处一室又是什么感觉？在虚拟成真方面能做的几乎没有尽头。确实，对今天来说的高分辨率尽管还能吸引人买票去大剧院观赏，或让你明天就能移植到家庭影院，但总会有新的、好得离谱的显示技术是一般消费者不能拥有的，比如说激光投影、全息显示，甚至《星际迷航》里面的模拟舱！任何事情的虚拟成真都比不上音乐由真人进行的现场演奏。音乐是免费的，真人演奏却很贵。这种模式很快就成为普遍性的，不光对音乐家，作家也是如此。书是免费的，但真人朗诵是昂贵的。7. 慷慨解囊。我相信观众愿意付钱给创作者。粉丝喜欢给艺术家、音乐家、作家等回报来表达他们的赞许，因为这允许他们联系在一起。但只有在付款非常容易、定价合理以及他们确信钱会直接让创作者获利的时候，他们才会解囊。Radiohead 乐队最近那个引人注目的让粉丝们愿意给多少都行的试验，很好地显示了资助的力量。那种粉丝与他们所欣赏的艺术家之间微妙的、无形的联系是物有所值的。Radiohead 的事例中每次下载的付费是 $5。还有很多观众仅仅出于感觉良好而付钱的其他例子。8. 脱颖而出。上面的那些生财要素都是有关于创造性的数字作品的，而「脱颖而出」属于由许多作品积累起来的更高层次。把一件作品定价为零无助于吸引到直接的注意，而且实际上还可能产生反效果。然而，不管定价如何，如果人们看不到，作品就毫无价值。没被发现的杰作一钱不值。市面上有数以百万计的书籍、歌曲、应用软件等等， 大多数是免费的，都想吸引我们的注意力。因而，能被人发现是有价值的。

Amazon 和 Netflix 这种巨型聚合商（aggregator）靠的就是帮助用户找到他们喜爱的作品而赚钱。他们给长尾现象带来福音，把利基用户和利基产品联系到一起。但不幸的是，长尾只对于巨型聚合商以及更大的中层聚合商，比如出版商、制片商和唱片公司才有好处。长尾对于创作者自身无关痛痒。但由于「脱颖而出」只能在系统层面上才真正起作用，创作者离不开聚合商。这就是为什么出版商、制片商和唱片公司（合称 PSL）不会消亡的原因。它们的存在不是需要用它们来传播拷贝（互联网会做这件事），而是需要通过它们把用户的注意力传回到作品上。他们在无穷的可能性当中发现、培育、精炼出那些他们认为会被粉丝们接受的创作者的作品。其他的媒介，比如批评家和评论家，也能引导注意力。粉丝们依靠这些多层次的发掘工具从无数作品中找到有价值的作品。发现天才就是生财之道。许多年来，在纸上印刷发行的《电视指南》赚的钱比它所「指南」的三大电视网加起来还要多。这份杂志把观众引导到每周的精彩节目上。节目仅靠免费对观众并没有价值。很少有人怀疑，除了那些巨型聚合商，许多 PSL 也能在这个免费的世界里通过销售「脱颖而出」的机会，结合其他的生财要素而赚钱有道。
上述 8 种特性要求一套全新的商业技能。在免费拷贝的世界里无法靠沿用分销技能而取得成功，因为天幕之下的巨大拷贝机（互联网）已经能做到了。有关知识产权和版权的法律技能快没有用武之地了。囤积居奇也不管用了。这 8 大生财要素要求人们理解到产品的丰富如何催生了共享的精神状态，慷慨大方如何成为商业模式，培养和哺育无法通过点击一下鼠标就能复制的商业要素有多么重要。
简单地说，在网络经济中，钱不会跟着拷贝走，而是跟着注意力走。注意力有自己的路径。
细心的读者会注意到一个明显的遗漏。我一直没有提到广告。广告被广泛认为是对付免费困境的近乎唯一的解决方案。我见到的大多数对付免费的方案都会多少涉及到广告。我认为广告只是注意力会走的途径之一，长期看来，广告只是通过销售免费产品赚钱的新方式的一部分。
但那是另一个故事了。
在广告的空洞表层之下，上述 8 大生财要素能给无所不在的免费拷贝增添价值，使它们值得被做广告。这些生财要素适合所有数字拷贝，也适合那些拷贝的边际成本近乎零的所有产品（参见我 Technology Wants to Be Free[2] 一文）。甚至生产实体产品的行业也发现复制成本趋向于零，所以它们也会像数字拷贝那样行事。地图刚刚跨过了这道门槛，基因图谱也快了。小型数码设备、小电器（如手机）也正走向这个方向。制药业早就如此，但他们不想让人知道，生产一颗药丸几乎不花钱。在药品上，我们是为权威认证和即时享用付钱。终有一天，我们会为个性定制付钱。
维护生财要素比在工厂里复制产品要难得多，还有很多东西要学，要理解。欢迎把你的感悟告诉我。
链接[1] 站着说话: https://web.archive.org/web/20081209061435/http://tuxfans.com/2008/02/05/154/[2] Technology Wants to Be Free: https://web.archive.org/web/20081209061435/http://www.kk.org/thetechnium/archives/2007/11/technology_want.php[3] 《网络经济的十种策略》: https://book.douban.com/subject/1059824/
]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
  <entry>
    <title>继续教育邮箱发送规则</title>
    <url>/posts/9e24aa0a.html</url>
    <content><![CDATA[邮箱发送规则如下
例如

]]></content>
      <categories>
        <category>教程学习</category>
      </categories>
      <tags>
        <tag>邮件</tag>
      </tags>
  </entry>
  <entry>
    <title>超赞的 Linux 软件</title>
    <url>/posts/e2427986.html</url>
    <content><![CDATA[超赞的 Linux 软件
目录
应用
音频
聊天客户端
数据备份与恢复
桌面个性化
开发
电子书工具
编辑器
教育
电子邮件
文件管理器
游戏
图形
互联网
办公
生产力
代理
安全
文件共享
终端
实用工具
视频
Wiki 软件
其它


命令行工具
桌面环境
显示管理
控制台
图形界面


窗口管理
合成器
叠加式窗口管理器
平铺式窗口管理器
动态窗口管理器





设置
ArchLinux
Bodhi
CentOS
Fedora
openSUSE
Ubuntu


论坛
ArchLinux 论坛
CentOS 论坛
Fedora 论坛
Ubuntu 论坛
openSUSE 论坛
IRC 频道
Linux 新闻，应用，以及更多…
Reddit


学习 Linux
Linux Hacking / 开发
Linux 进阶
其它超赞的列表
贡献者
贡献指南


应用音频如果你想要更详细 / 进阶 / 更好分类的 Linux 音频软件列表，你可能想点击这里

(https://github.com/sourcefabric/Airtime) Airtime - Airtime 是一款用于调度和远程站点管理的开放广播软件。
(https://ardour.org/development.html) Ardour - 在 Linux 上录音，编辑，和混音。
(https://audacious-media-player.org/developers) Audacious - 开源音频播放器，按你想要的方式播放你的音乐，不占用你其它任务的电脑资源。
(https://github.com/audacity/audacity) Audacity - 免费，开源，跨平台的声音录制、编辑软件。
(https://bazaar.launchpad.net/~audio-recorder/audio-recorder/trunk/files) Audio Recorder - 简单的声音录制软件，就在 ubuntu ppa。
(https://github.com/Superjo149/auryo) Auryo - 非官方多平台桌面 SoundCloud® 应用。
(https://github.com/beetbox/beets) beets - Beets 是一款给强迫症音乐极客的媒体库管理系统。
Bitwig - 音乐制作的数字音频工作站。
(https://github.com/CDrummond/cantata) Cantata - Linux、Windows、macOS 下的 Qt5 图形化 MPD（Music Player Daemon）客户端。
(https://github.com/clementine-player/Clementine) Clementine - 播放无数的有损和无损音频格式。
(https://github.com/cmus/cmus) Cmus - cmus 是一款类 Unix 系统下小巧，快速且强大的终端音乐播放器。
(https://github.com/linuxdeepin/deepin-music) Deepin Music - Deepin 科技团队开发的应用，专注在本地音乐播放上。
(https://github.com/enzo1982/freac) fre:ac - fre:ac 是一款免费的音频转换与 CD 提取工具，支持多种流行的格式和编码。它可以在 MP3、MP4/M4A、WMA、Ogg Vorbis、FLAC、AAC、WAV 以及 Bonk 格式之间转换。
(http://gnormalize.sourceforge.net/) Gnormalize - 一款带有回放增益算法的音频转换和 CD 提取工具，元数据（tag）编辑器以及音频播放器。它在 GNU/Linux 下使用 gtk2-perl。
(https://github.com/MarshallOfSound/Google-Play-Music-Desktop-Player-UNOFFICIAL-) Google Play Music Desktop Player - 非官方但很漂亮的跨平台 Google Play Music 桌面客户端。
(https://github.com/gpodder/gpodder) Gpodder - 媒体聚合及播客客户端。
(https://github.com/haecker-felix/Gradio) GRadio - Ubuntu Linux 下的电台软件。
Harmony - 带有漂亮界面和云服务兼容的音乐播放器。
(https://github.com/mtytel/helm) Helm - 音响合成器软件，可以独立运行，也可以作为 LV2、VST、VST3 或 AU 的插件运行。
(https://github.com/hydrogen-music/hydrogen) Hydrogen - GNU/Linux 上的高级电子鼓。
(https://github.com/trazyn/ieaseMusic) ieaseMusic - iEaseMusic 是一款跨平台程序，基于 electron 构建，可以收听网易云音乐。
(https://github.com/KDE/k3b) K3b - Linux 上的 CD/DVD 创建工具 - 为 KDE 特别优化。
(https://kid3.sourceforge.io/) Kid3Qt - 编辑多媒体文件的标签，如一个专辑所有 mp3 文件的艺术家，专辑，年代，流派。
(https://sourceforge.net/projects/kxstudio/) KxStudio - KXStudio 是专业声音创作应用和插件的集合。
(https://github.com/LibreTime/libretime) Libretime - 开放广播软件，用于调度和远程站点管理；从 Airtime fork 而来。
(https://github.com/LMMS/lmms) LMMS - 在你的 PC 上创建旋律和节拍，合成与混合声音，排布小样等等，制作你的音乐。
(https://gitlab.gnome.org/World/lollypop) Lollypop - 一款 GNOME 音乐播放应用。
(https://github.com/emilioastarita/lyricfier) Lyricfier - 一个 Spotify Lyrics 的替代选择。
(https://gitlab.com/ColinDuquesnoy/MellowPlayer) Mellow Player - 在你的桌面集成云音乐。
(https://github.com/mixxxdj/mixxx) Mixxx - 免费的 DJ 软件，给你一切现场混音所需要的，名副其实的 Traktor 替代品。
(https://github.com/mopidy/mopidy) Mopidy - Python 编写的可扩展音乐服务器。
(https://github.com/martpie/museeks) Museeks - 一款简单，干净，跨平台的音乐播放器。
(https://github.com/musescore/MuseScore) MuseScore - 创建，播放和打印漂亮的乐谱。
(https://github.com/metabrainz/picard) MusicBrainz Picard - Picard 是一款跨平台的音乐标记应用，用 Python 写就。
MusixMatch - 强大的歌词软件，带有歌词同步功能。
Netease Music - 网易云音乐播放器 - 一款中国地区的云音乐服务。
(https://github.com/nukeop/nuclear) Nuclear - 基于 electron 的多平台音乐播放软件，可以从多个来源串流。
Ocenaudio - ocenaudio 是一款跨平台，易用，快速且功能强大的音频编辑器。对需要编辑和分析音频文件的人来说是个理想的软件。
(https://github.com/osdlyrics/osdlyrics) OSD Lyrics - 与你最爱的媒体播放器显示歌词。
(https://github.com/gkarsay/parlatype) Parlatype - GNOME 下的转录音频播放器。
(https://github.com/pithos/pithos) Pithos - Linux 本地 Pandora 客户端。
(https://github.com/wwmm/pulseeffects) PulseEffects - Pulseaudio 应用的限制、压缩、混响、均衡以及自动音效软件。
(https://github.com/quodlibet/quodlibet) Quod Libet - 一款编写时就考虑了很多库的 GTK+ 音乐播放器。Quod Libet 支持基于搜索的动态播放列表，正则，标签，回放增益，播客以及互联网广播。
(https://github.com/ebruck/radiotray-ng) RadioTray-NG - 一款 Linux 互联网广播播放器。
Reaper - 无限制的音频创作。
(https://github.com/GNOME/rhythmbox) Rhythmbox - 来自 GNOME 的音乐播放器。
(https://sayonara-player.com/downloads.php#Source) Sayonara Player - Sayonara 是一款小巧干净，快速的音频播放器，使用 C++ 编写，基于 Qt 框架。
(https://github.com/multani/sonata/) Sonata - 一款音乐播放器，通过 Music Player Daemon（MPD）为你的音乐收藏提供优雅直观的界面。
(https://launchpad.net/soundconverter) Soundconverter - 领先的音频文件转换工具。目标是易用快速。
(https://gitlab.gnome.org/GNOME/sound-juicer) SoundJuicer - GNOME 下的 CD 提取工具。
(https://github.com/Soundnode/soundnode-app) Soundnode - 一款开源的 SoundCloud 桌面应用。
(https://github.com/devinhalladay/spotio) Spotio - 受 Rdio 启发的 Spotify 桌面应用亮色主题。
(https://github.com/VCVRack/Rack) VCV Rack - 一款开源可视化、模块化的音响合成器。
(https://github.com/needle-and-thread/vocal) Vocal - 现代桌面的播客客户端。
(https://github.com/yktoo/indicator-sound-switcher) Yktoo Sound Switcher Indicator - Ubuntu/Unity 的音频输入 / 输出选择指示器。

聊天客户端第三方客户端
(https://github.com/sindresorhus/caprine) Caprine - 优美的 Facebook Messenger 桌面应用。
(https://github.com/chatty/chatty) Chatty - Chatty 是一款 Twitch 聊天客户端，它是为那些想尝试不同于 web 聊天的新事物，又不想像 IRC 客户端那样复杂或错过 Twitch 特色功能的用户准备的。
(https://github.com/stanfieldr/ghetto-skype) GhettoSkype - Skype 的开源 web 封装。
(https://github.com/yakyak/yakyak) YakYak - Google Hangouts 桌面聊天客户端。

集成客户端
(https://github.com/meetfranz/franz) Franz - Franz 是一个免费的消息应用，结合了许多聊天及消息服务到单独的一个客户端中。
(https://developer.pidgin.im/) Pidgin - 一款通用聊天客户端。
(https://github.com/ramboxapp/community-edition) Rambox - 免费，开源且跨平台的消息及邮件应用，整合常见的 web 应用为一体。

聊天客户端工具
(https://github.com/Cog-Creators/Red-DiscordBot) Red Discord Bot - Red Discord Bot 是一款自托管的音乐 / 聊天 / 琐事机器人，可以在树莓派和其他系统上运行。通过一个叫做 “Cogs” 的系统实现扩展，允许它做更多的事情。

IRC 客户端
(https://github.com/hexchat) HexChat - HexChat 是一款基于 XChat 的 IRC 客户端，但和 XChat 不一样的是它对 Windows 和 Unix-like 系统都是完全自由的。
(https://github.com/irssi/irssi) Irssi - Irssi 是一款模块化的聊天客户端，它最为人所知的是它的文本模式用户界面。
(https://github.com/kvirc/KVIrc) KVIrc - KVIrc 是一款免费的绿色（portable）IRC 客户端，基于优秀的 Qt GUI toolkit 构建。 client based on the excellent Qt GUI toolkit

官方客户端
(https://sourceforge.net/p/beebeep/code/HEAD/tree/) BeeBEEP - BeeBEEP 是一款开源，P2P 的局域网通讯工具。你可以与局域网内的任何人聊天或传输文件。不需要服务器，只需要下载，解压和运行。简单，快速且安全。
(https://github.com/dino/dino) Dino - 干净现代的 Jabber/XMPP 聊天客户端。
Discord - 为玩家准备的多合一语音文本聊天工具，免费，安全，同时支持桌面和手机。
(https://gitlab.com/gitlab-org/gitter/services) Gitter - Gitter — 开发者交流的地方。Gitter 的设计目标是让社区消息，协作和发现尽可能地简单。
(https://git.ring.cx/savoirfairelinux/ring-project) Jami - 聊天。交流。分享。Jami 是一款免费及通用的沟通平台，保护用户隐私和自由。原名 Ring。
(https://github.com/jitsi) Jitsi - Jitsi 是一款免费，开源的多平台语音，视频会议以及即时通讯应用，在 Windows, Linux, Mac OS X 和 Android 上可用。
(https://github.com/qTox/qTox) qTox - 一款简单的分布式，安全的通讯软件，支持音频和视频聊天。
(https://github.com/vector-im/riot-web) Riot - 漂亮的 Matrix 协作网络客户端。
Skype - Skype 让世界保持沟通，免费的。
Slack - 现代团队的即时消息软件，支持归档和搜索。
(https://github.com/telegramdesktop/tdesktop) Telegram - 一款专注于速度和安全的消息应用，它非常快，简单而且免费。
Viber - Viber for Linux 让你在任何设备，网络和国家给其他 Viber 用户免费发送消息和通话。
(https://github.com/weechat) Weechat - WeeChat 是一款快速，轻量级，可扩展的聊天客户端。
(https://github.com/wireapp) Wire - 安全沟通。完整隐私。

数据备份与恢复
(https://backintime-dev.readthedocs.io/en/latest/) Back In Time - Linux 下一款简单的备份工具，受 “flyback project” 启发。
(https://borgbackup.readthedocs.io/en/stable/development.html) Borg Backup - 一款不错的的备份工具。
(https://github.com/bup/bup) bup - 非常高效的备份系统，基于 git packfile 格式，提供快速增量副本以及重复数据删除技术（在各种文件中，包括虚拟机镜像文件）。
(https://gitlab.gnome.org/World/deja-dup) Deja Dup - 一款内置加密的简单备份工具。
(https://launchpad.net/duplicity) Duplicity - Duplicity 通过生成加密的 tar 格式卷备份目录，并且可以上传备份到远端或本地文件服务器。
(https://www.freefilesync.org/download.php) FreeFileSync - FreeFileSync 是一款文件夹比较和同步软件，可以创建和管理你所有重要文件的备份。它会判断源文件夹和目标文件夹之间的差异，传输必要的最小数据，而不是每次都复制所有文件。
(https://github.com/cgsecurity/testdisk) Photorec - PhotoRec 一款数据恢复应用，为恢复硬盘，CD-ROM 上包括视频，文档以及归档等文件而设计，以及数码相机存储中丢失的相片（Photorec 的由来）。
(https://sourceforge.net/projects/qt-fsarchiver/) Qt-fsarchiver - qt4-fsarchiver 是 fsarchiver 的图形化界面，能够保存 / 恢复分区，文件夹和 MBR/GPT 分区。这个程序是基于 Debian 的系统，OpenSuse 以及 Fedora 适用的。
(https://github.com/ncw/rclone) rclone - Rclone 是一款命令行工具，用于同步文件和目录到不同的云存储方案。它还允许备份加密。
(https://github.com/restic/restic) restic - restic 是一套快速、高效、安全的备份系统。它支持三大主要操作系统（Linux，macOS，Windows）和一些小众一点的系统（FreeBSD，OpenBSD）。
(https://github.com/rsnapshot/rsnapshot) rsnapshot - rsnapshot 是一款基于 rsync 的命令行工具，为本地 / 远程机器创建周期性的快照。代码尽可能广泛地使用硬链接，大大减少了磁盘空间要求。
(https://sourceforge.net/projects/systemrescuecd/) System Rescue CD - SystemRescueCd 是一款 Linux 系统急救盘，提供可启动的 CD-ROM 或 U 盘，用于管理系统在崩溃后修复系统和数据。
(https://github.com/cgsecurity/testdisk) Test Disk - TestDisk 是一款强大的免费数据恢复软件！它主要设计用于帮助回去丢失的分区和 / 或修复由软件错误导致的硬盘无法启动引导。
(https://github.com/teejee2008/timeshift) Timeshift - TimeShift 是一款系统还原工具，它用 rsync 和硬链接创建系统的增量快照。快照可以在一段时间后用于恢复，撤销快照生成以来所做的所有更改。快照可以手动生成或用定时任务自动生成。

桌面个性化桌面主题
(https://github.com/adapta-project/adapta-gtk-theme) Adapta Theme - 一款自适应的 Gtk+ 主题，遵循 Material 设计指南。
(https://github.com/EliverLara/Ant) Ant Theme - Ant 是一款用于 Ubuntu 及其他基于 GNOME Linux 桌面环境的扁平化 GTK 主题，有三种风格：vanilla，Bloody 以及 Dracula。
(https://github.com/NicoHood/arc-theme) Arc Theme - 带有透明元素的扁平化主题。
(https://github.com/solus-project/evopop-gtk-theme) EvoPop Theme - EvoPop 是一款为 Solus 项目构建的现代桌面主题套件。它主要是扁平化的，同时为了深度效果使用了最少量的阴影。
(https://github.com/anmoljagetia/Flatabulous) Flatabulous - 一款适用于 Ubuntu 和其他基于 Gnome 的 Linux 系统的扁平化主题。
(https://github.com/andreisergiu98/arc-flatabulous-theme) Flatabulous Arc Theme - 扁平，蓝色的 GTK 主题，还有暗色版本。
(https://github.com/numixproject/numix-gtk-theme) Numix Theme - 一款扁平多彩的 GTK 主题。

桌面部件与主题工具
(https://github.com/brndnmtthws/conky) Conky - Conky 是 X 下一款免费，轻量的系统监视器，可以在你桌面显示任何类型的信息。
Gnome Extensions - Gnome 桌面环境扩展插件。
Gnome Look - 大量社区创建的图标，shell 主题，字体，以及其他更多的可用来个性化你的 Gnome 桌面环境的资源，都在这一个站点。
(https://github.com/bilelmoussaoui/Hardcode-Tray) Hardcode Tray - 这个脚本通过在 Linux 中自动探测你默认主题，正确的图标尺寸，硬编码内嵌图标应用，以及正确的状态图标来修正硬编码的托盘图标。
Macbuntu - 让你的桌面看起来变得像 macOS。
(https://git.opendesktop.org/akiraohgaki/ocs-store) OCS store - openDesktop.org 的桌面应用。openDesktop.org 是开发者和艺术家分享应用、主题和其他内容最大的社区之一。
(https://github.com/themix-project/oomox) Oomox theme generator - 一款图形化应用，用于生成基于 Numix 的和 Flat-Plat 主题（GTK2，GTK3），Gnome-Colors 和 Archdroid 图标的不同颜色风格的主题。
(https://github.com/jaagr/polybar) Polybar - 快速易用的状态栏。
(https://github.com/LemonBoy/bar)[Lemonbar](https://github.com/LemonBoy/bar) - 超快，轻量，极简的 Linux 状态栏。
(https://github.com/deviantfero/wpgtk) Wpgtk - 一款使用 pywal 作为配色方案生成核心的通用主题软件，支持文本定义的主题，兼容所有终端，带有 GTK2、GTK+、openbox 以及 Tint2 的默认主题。

桌面图标包
(https://github.com/keeferrourke/la-capitaine-icon-theme) La Capitaine Icon Theme - 一款 macOS 和 Material 设计启发的图标主题，设计适用于大多数桌面环境。
(https://github.com/snwh/moka-icon-theme) Moka Icon Theme - Moka 创作时牢记简洁。使用简单的几何图形和明亮的颜色。
(https://github.com/numixproject/numix-icon-theme) Numix Icon Theme - 扁平图标主题，带两种样式：Numix Main 和 Numix circle。
(https://github.com/PapirusDevelopmentTeam/papirus-icon-theme) Papirus Icon Theme - Linux 系统 SVG 图标主题，基于 Paper 主题并有一些额外的特性（如硬编码托盘支持，kde 颜色方案支持，libreoffice 图标主题，filezilla 主题，smplayer 主题…）以及其它的修改。这个主题适用于 GTK 以及 KDE。

开发Android
(https://github.com/anbox/anbox) Anbox - 在任意 GNU/Linux 操作系统上运行安卓应用。
Android studio - Android 的官方 IDE：Android Studio 提供在各种类型的安卓设备上构建应用最快的工具。

C++
Code::Blocks - Code::Blocks 是一款为满足大部分用户需求构建的免费的 C，C++ 以及 Fortran IDE。它可扩展并且可配置性强。
(https://wiki.codelite.org/pmwiki.php/Main/Repositories) Codelite - 一款免费，开源，跨平台的 C，C++，PHP，以及 Node.js IDE。
Clion - 一款强大的跨平台 C 以及 C++ IDE。
(https://github.com/qt-creator/qt-creator) QT Creator - 全功能跨平台集成开发环境，轻松创建互联设备，用户界面以及应用程序。

数据库
(https://github.com/apache/cassandra) Cassandra - Apache Cassandra 数据库是你需要伸缩能力和高可用时的正确选择，无需在性能上妥协。在商用硬件或云基础设施上的线性扩展和经验证的容错，让它成为关键业务数据的完美平台。
(https://github.com/apache/couchdb) CouchDB - 无缝多主机同步，从大数据到移动设备的伸缩能力，还拥有直观的 HTTP/JSON API，以及面向可靠性的设计。
DataGrip - DataGrip 是一款跨平台 IDE，面向和 SQL 数据库打交道的 DBA 和开发者。它内建的驱动支持 DB2、Derby、H2、HSQLDB、MySQL、Oracle、PostgreSQL、SQL Server、Sqlite 以及 Sybase。
(https://github.com/dbeaver/dbeaver) DBeaver - 一款通用数据库客户端，支持多个平台及多种数据库。
(https://cgit.kde.org/kexi.git/about/) Kexi - Kexi 是一款开源的可视化数据库创建应用，是 MS Access 或 Filemaker 久等的竞争者。
(https://mariadb.org/get-involved/getting-started-for-developers/) MariaDB - 最流行的数据库服务器之一。由原 MySQL 开发者打造。
(https://github.com/mongodb/mongo) MongoDB - MongoDB 是一款免费开源跨平台的面向文档型数据库，使用带模板的类 JSON 文档。
(https://github.com/dbcli/mycli) MyCLI - MyCLI 是一款 MySQL、MariaDB、Percona 的命令行界面，带有自动补全和语法高亮。
(https://github.com/mysql/mysql-server) MySQL - MySQL 是世界领先的开源数据库，有着经过证明的性能，可靠性和易用性。使用它的有 Facebook、Twitter、YouTube、Yahoo! 等知名互联网企业。
(https://github.com/mysql/mysql-workbench) MySQL Workbench - MySQL Workbench 是给数据库架构师、开发者和 DBA 使用的一体化可视工具。MySQL Workbench 为服务器配置、用户管理、备份等提供了数据模型、SQL 开发、综合管理工具。
(https://github.com/OmniDB/OmniDB) OmniDB - 基于浏览器的工具，可视化创建，管理和查看数据库。
OracleDB - Oracle 公司出品和销售的对象关系型数据库管理系统，最受信赖和广泛使用的关系型数据库引擎之一。
(https://github.com/percona/percona-server-mongodb) Percona MongoDB - Percona Server for MongoDB 提供了 MongoDB Community Server 的所有特性和优点。
(https://github.com/percona/pmm-server) Percona Monitoring - Percona Monitoring and Management（PMM）是一款免费开源的平台，用于管理和监控 MySQL，MariaDB 和 MongoDB 的性能。你可以在你自己的环境中运行 PMM 以保证最大化的安全和可靠性。它为 MySQL，MariaDB 和 MongoDB 提供完全基于时间的分析，确保你的数据尽可能高效流转。
(https://github.com/percona/percona-server) Percona MySQL - Percona Server for MySQL 是一款免费、完全兼容、加强、开源的 MySQL 替代品，提供优秀的性能，可伸缩性和仪表盘。
(https://github.com/percona/percona-xtradb-cluster) Percona XtraDB Cluster - Percona XtraDB Cluster 是一款双活高可用，高弹性的 MySQL 集群开源解决方案。它在一个包里集成了 Percona Server 和 Percona XtraBackup，带 Codership Galera library of MySQL 高可用解决方案，让你可以创建高性价比的 MySQL 高可用集群。
(https://github.com/dbcli/pgcli) pgcli - Pgcli 是 Postgres 的命令行界面，带有自动补全和语法高亮。
(https://github.com/postgres/postgres) PostgreSQL - PostgreSQL 是一款开发超过 15 年的强大，开源的对象 - 关系型数据库系统。PostgreSQL 不由任何公司或其它私有实体控制，源代码免费提供。
(https://www.sqlite.org/src/doc/trunk/README.md) Sqlite - SQLite 是一个进程内的库，实现了自给自足的、无服务器的、零配置的、事务性的 SQL 数据库引擎。
(https://github.com/sqlitebrowser/sqlitebrowser) Sqlite Browser - 可视化创建，管理，以及查看 sqlite 数据库文件。

Golang
GoLand - GoLand 是来自 JetBrains 的新商业 IDE 的代号，目标是提供一个舒适的 Go 开发环境。
(https://github.com/visualfc/liteide) LiteIDE X - LiteIDE 是一款简单、开源、跨平台的 Go IDE。

Java
(https://www.bluej.org/versions.html) BlueJ - 一款为新手设计的免费 Java 开发环境，世界范围内数百万人使用。
Eclipse - Eclipse 以 Java 集成开发环境而闻名，但可以通过下载包支持 C/C++ 和 PHP。
(https://github.com/JetBrains/intellij-community) IntelliJ IDEA - 强大的 Java IDE。社区版本是开源的。

Javascript
Webstorm - 强大的 IDE，用于现代 JavaScript 开发，来自 JetBrains。

微电脑和嵌入式设备
(https://github.com/arduino/Arduino) Arduino IDE - 开源的 Arduino 软件（IDE）让编写代码和上传代码到开发板变得简单。
(https://github.com/fritzing/fritzing-app) Fritzing - Fritzing 是一个开源硬件项目，它让电子部件变成人人都能接触到的创造性材料。
(https://github.com/Sloeber/arduino-eclipse-plugin) Sloeber IDE - Sloeber IDE。Eclipse 的 Arduino IDE。

多语言支持
(https://github.com/aptana) Aptana - Aptana Studio 利用了 Eclipse 的灵活性并且专注于让它成为强大的 web 开发引擎。
(https://phabricator.kde.org/dashboard/view/8/) KDevelop - 免费，开源 IDE，全功能，支持插件扩展的 C/C++ 以及其它编程语言 IDE。
(http://www.monodevelop.com/developers/) MonoDevelop - 跨平台的 C#，F# 以及更多语言的 IDE。
(https://netbeans.apache.org/participate/index.html) Netbeans - NetBeans IDE 让你快速而且容易地开发 Java 桌面，移动以及 web 应用，还有基于 HTML，JavaScript 以及 CSS 的 HTML5 应用。

PHP
PHPStorm - 聪明又强大的 PHP IDE，来自 Jetbrain。

Python
(https://github.com/JetBrains/intellij-community/tree/master/python) PyCharm - 强大的 Python IDE。

Shell
(https://github.com/fish-shell/fish-shell) Fish - 一款智能且用户友好的命令行 shell。
(https://github.com/jorgebucaran/fisher) Fisher - 一款 fish shell 插件管理器。
(https://github.com/ipython/ipython) Ipython - 强大的 Python shell。
(https://github.com/oh-my-fish/oh-my-fish) Oh-my-fish - 提供各种插件和主题以扩展你的 fish shell 功能。
(https://github.com/robbyrussell/oh-my-zsh) Oh-my-zsh - 一个由社区驱动，优雅的 zsh 配置管理框架。
(http://sourceforge.net/p/zsh/code/ci/master/tree/) Zsh - 一款强大的命令行 shell。

支持工具
(https://sourceforge.net/projects/cscope/) Cscope - Cscope 是一款浏览源码的开发者工具。尽管是命令行程序，它可以原生集成到 Vim 编辑器中。它可以在代码中搜索符号、定义、函数（已调用 / 正在调用）、正则、文件。
(https://github.com/cytopia/devilbox) Devilbox - Devilbox 是一款现代的、高度可配置的 docker 化 PHP 栈，支持 LAMP 和 MEAN，可以在所有主要平台上运行。它的主要目标是在本地开发时轻松切换和结合任何需要的软件版本。
(https://sourceforge.net/projects/diffuse/files/?source=navbar) Diffuse - Diffuse 是一款比较和合并文本文件的图形化工具。它可以从 Bazaar、CVS、Darcs、Git、Mercurial、Monotone、RCS、Subversion 以及 SVK 仓库获取文件来比较。
(https://www.fossil-scm.org/index.html/dir?ci=tip) Fossil - 自包含，分布式软件配置管理系统，带有集成 bug 追踪，wiki，技术说明和 web 界面。
Genymotion - Genymotion 是一款可以用来替代默认安卓模拟器的第三方模拟器。
(https://gitlab.gnome.org/GNOME/giggle/) Giggle - Giggle 是一款 git 内容追踪的图形化前端。
(https://github.com/Gisto/Gisto) Gisto - Gisto 是一款代码段管理器，基于 Github Gist 运行，添加了额外的功能，如搜索、标签、分享 gist，含代码编辑器。
(https://github.com/git/git) Git - Git 是一款免费和开源的分布式版本管理系统，被设计用来快速和高效地处理从小项目到大项目的一切内容。
(https://github.com/git-cola/git-cola) GitCola - Git Cola 是一款整洁且强大的图形化 Git 客户端。用 Python 写就并签署于 GPL 协议。
(https://gitlab.gnome.org/GNOME/gitg) Gitg - gitg 是查看 git 仓库的 GNOME 图形界面客户端。
GitKraken - 强大酷炫的 Git 图形化客户端，支持 Windows，Mac 以及 Linux。
(https://github.com/gitlabhq/gitlabhq) GitLab - GitLab 是一个基于 web 的 Git 仓库管理工具，带有 wiki 和 issue 追踪等功能。
(https://github.com/sitaramc/gitolite) Gitolite - Gitolite 允许你在中心化服务器上搭建 git 托管，拥有细粒度的权限管理和很多其他强大功能。
(https://phabricator.kde.org/source/heaptrack/repository/master/) Heaptrack - Linux 堆内存分析工具。
Insomnia - 一款简单，漂亮且免费的 REST API 客户端。
(https://jupyter.readthedocs.io/en/latest/install.html) Jupyter Notebook - 开源，交互式数据科学和科学计算，支持超过 40 种编程语言。
(https://meldmerge.org/development.html) Meld - Meld 是一款可视化 diff 和 merge 工具，帮助你比较文件，目录以及有版本控制的项目。
Mockingbot - Mockingbot 是一款易用的原型工具。
(https://github.com/GNOME/nemiver) Nemiver - Nemiver 项目编写集成到 GNOME 桌面环境的独立图形调试器。
(https://github.com/evolus/pencil) Pencil - 开源图形界面原型工具，在各平台可用。
(https://github.com/stuartlangridge/ColourPicker) Pick - 简单的拾色器。
Postman - Postman 允许用户快速开发和测试 API。
(https://github.com/rabbitvcs/rabbitvcs) Rabbit VCS - RabbitVCS 是一个图形工具的集合，提供一个与你使用的版本控制系统简单而直接的访问方式。
SmartGit - SmartGit 是一款 Git 客户端，支持 Github 的 Pull Requests 和评论以及 SVN。
StarUML - 一款精致的软件塑造者。
(https://github.com/uncrustify/uncrustify) Uncrustify - C/C++、C#、ObjectiveC、D、Java、Pawn、VALA 源代码美化工具。参见下方的 UniversalIndentGUI。
(https://sourceforge.net/projects/universalindent/files/uigui/) UniversalIndentGUI - UniversalIndentGUI 提供几乎任何格式化设置的即时预览。
(https://sourceware.org/git/?p=valgrind.git) Valgrind - Valgrind 是一款遵守 GPL 的 Linux 程序调试和性能分析工具。
(https://www.gnu.org/software/wdiff/devguide) Wdiff - GNU wdiff 程序是一个 diff 前端，逐词比较文件。它收集 diff 的输出并用它产生更美观的源文件比对结果。
(https://code.wireshark.org/review/gitweb?p=wireshark.git;a=tree) Wireshark - Wireshark 是世界领先的网络协议分析器。它让你可以在微观层级观察你的网络上发生了什么。它是许多工业和教育行业事实上的（经常也是法律上的）标准。
(https://github.com/zealdocs/zeal) Zeal - Zeal 是一款面向软件开发者的离线文档阅读器。

电子书工具
(https://github.com/babluboy/bookworm) Bookworm - 简单，专注的电子书阅读器。
(https://github.com/oguzhaninan/Buka) Buka - 电子书管理程序。
(https://github.com/kovidgoyal/calibre) Calibre - 难以置信的丑但很强大的电子书管理和转换软件。
(https://github.com/janeczku/calibre-web) Calibre-web - Calibre Web 是一款提供干净的界面的 web 应用，可以使用一个已有的 Calibre 数据库浏览、阅读和下载电子书。
(https://github.com/michaldaniel/Ebook-Viewer) Easy Ebook Viewer - 现代 GTK Python 电子书阅读应用，轻松阅读 epub 文件。
(https://wiki.gnome.org/Apps/Evince/GettingEvince) Evince - Evince 是一款支持多种格式的文档查看器。Evince 的目标是用一个简单的应用取代已经存在于 GNOME 桌面的多种文档查看器。
(https://github.com/geometer/FBReader) FBReader - 最流行的电子阅读应用之一。
Foxit - Foxit Reader 8.0——获得殊荣的 PDF 阅读器。
(https://github.com/martahilmar/gnome-books) Gnome Books - GNOME Books 用于查看、搜索和阅读电子书。
(http://repo.or.cz/w/llpp.git) llpp - 轻量快速，支持个性化以及功能丰富的 PDF、EPUB、XPS 和 CBZ 查看器，类 vi 快捷键绑定，基于 MuPDF。
Lucidor - Lucidor 是一个阅读和处理电子书的电脑软件。Lucidor 支持 EPUB 格式的电子书和 OPDS 格式的目录。
MasterPDF editor - Master PDF Editor 一款方便而智能的 Linux PDF 编辑器。
(https://sourceforge.net/p/mcomix/git/ci/master/tree/) Mcomix - GTK+ 漫画书查看器。
(http://git.ghostscript.com/?p=mupdf.git;a=summary) MuPDF - 一款轻量级的 PDF 和 XPS 查看器。
(https://github.com/KDE/okular) Okular - Okular 由 KDE 原始开发的通用文档查看器。Okular 可以在多个平台上工作，包括但不限于 Linux，Windows，Mac OS X，BSD 等等。
(https://github.com/torakiki/pdfsam) PDFsam - 桌面应用，用于对 PDF 文件进行拆分，提取页面，旋转，混合以及合并。
(https://github.com/burtonator/polar-bookshelf) Polar - Polar 是一款用于 PDF 和 web 内容的个人知识库，支持增量阅读和文档注释。
(https://launchpad.net/qpdfview) qpdf - qpdfview 是一款标签页式文档查看器。
(https://github.com/Sigil-Ebook/Sigil) Sigil - Sigil 是一款多平台 EPUB 电子书编辑器。
(https://git.pwmt.org/pwmt/zathura.git) Zathura - Zathura 是一款高度可定制和实用的文档查看器。

编辑器
(https://github.com/atom/atom) Atom - 21 世纪可 hack 的文本编辑器。
(https://sourceforge.net/p/bluefish/code/HEAD/tree/trunk/bluefish/) Bluefish - Bluefish 是一款面向程序员和 web 开发者的强大编辑器，带有很多编写网站，脚本和代码的选项。
(https://github.com/adobe/brackets) Brackets - 懂 web 设计的现代文本编辑器。
(https://github.com/emacs-mirror/emacs) Emacs - 可扩展，可个性化，免费 / 自由的文本编辑器——还有更多。
(https://www.geany.org/Download/Git) Geany - Geany 是一款使用了 GTK+ 工具集的文本编辑器，带有基本的集成开发环境功能。它的开发是为了成为一个小型又快速的 IDE，对其它包仅有不多的依赖。
(https://gitlab.gnome.org/GNOME/gedit) Gedit - gedit 是 GNOME 文本编辑器。尽管以简单易用为目标，gedit 仍然是个强大的多功能编辑器。
(https://github.com/GNOME/gnome-builder) Gnome Builder - 强大的 IDE，用于现代 C / C++ / Bash / JavaScript 开发，来自 Gnome 团队。C/C++ 开发最好的 IDE 之一（内置 Cmake）。
(https://github.com/mawww/kakoune) Kakoune - Kakoune 代码编辑器 - 受 Vim 启发。更少的击键次数带来更快的速度。多重选中。正交设计。专注于交互。
(https://kate-editor.org/build-it/) Kate - Kate 是一个多文档编辑器，从 KDE 2.2 开始就是 KDE 的一部分了。
(https://github.com/Komodo/KomodoEdit) Komodo Edit - 免费开源的多语言开发环境。
(https://github.com/LightTable/LightTable) Lighttable - 下一代代码编辑器！支持实时编码。
(https://github.com/zyedidia/micro) Micro - Micro 是基于终端的文本编辑器，目标是易用且直观，同时还能利用现代终端的强大能力。
(http://git.savannah.gnu.org/cgit/nano.git/) Nano - GNU Nano 是一款文本编辑器，主要目的是向控制台文本编辑引入简单的界面和直观的命令选项。
(https://github.com/neovim/neovim) Neovim - Neovim 是 Vim 的一个 fork，关注用户体验改进、插件以及 GUI。
(https://github.com/syl20bnr/spacemacs) Spacemacs - 社区驱动的 Emacs 版本。
(https://github.com/SpaceVim/SpaceVim) SpaceVim - 社区驱动的模块化 Vim 版本。
Sublime - 非常强大的文本编辑器，有高级搜索能力以及强大的插件来增强功能。
(https://foicica.com/hg/textadept) Textadept - 程序员的极简文本编辑器。Textadept 可用 Lua 语言扩展。
(https://github.com/vim/vim) Vim -Vim 是一个高级文本编辑器，寻求以更完整的功能集提供事实上的 Unix 编辑器 “Vi” 的强大功能。无论你已经在使用 vi 或其它编辑器，它都十分有用。
(https://github.com/Microsoft/vscode) VSCode - Visual Studio Code 是一款轻量但强大的代码编辑器，提供 Windows，OS X 以及 Linux 版本。它内置了 JavaScript，TypeScript 以及 Node.js 支持，并且对其它语言（C++，C#，Python，PHP，Golang）还有丰富的插件系统和运行环境。

教育
(https://apps.ankiweb.net/) Anki - 强大智能的卡片让记忆更轻松。
(https://sourceforge.net/projects/artha/) Artha - Artha 是一款免费跨平台的英语词典，基于 WordNet，可以完全离线使用。
(https://github.com/bibletime/bibletime) BibleTime - BibleTime 是一款基于 Sword 库和 Qt 工具集的圣经学习应用。
(https://sourceforge.net/projects/celestia/) Celestia - 免费的空间模拟器，让你在三维空间中探索我们的宇宙。
(https://github.com/opp11/chemtool/) Chemtool - Chemtool 是一款在 Linux 上绘制化学结构的小程序。
(https://code.launchpad.net/epoptes) Epoptes - 一款开源的计算机实验室管理和监视工具。
(https://github.com/gap-system/gap) GAP - 计算离散代数领域内的一个优秀系统, 主要专注于计算群论的计算。
(http://gcompris.net/wiki/Developer%27s_corner) Gcompris - GCompris 是一款高质量教育软件，由无数适合 2 到 10 岁儿童的活动组成。
(https://github.com/geogebra/geogebra) Geogebra - 图形计算器，支持函数，几何，代数，微积分，统计以及 3D 数学。
(https://wiki.gnome.org/Apps/Dictionary) Gnome-dictionary - GNOME 的强大词典。
(https://hg.savannah.gnu.org/hgweb/octave) GNU Octave - GNU Octave 是一个科学编程语言，主要用于数值运算，大部分与 MATLAB 兼容。
(https://git.savannah.gnu.org/cgit/gtypist.git) GNU Typist - 基于 ncurses 的免费打字教学软件。
(https://github.com/kinitrupti/GNUKhata) GNUKhata - 开源会计软件。
Google Earth - Google Earth 是一款虚拟地球，地图以及地理信息程序。
(http://gperiodic.seul.org/cvs/) GPeriodic - GPeriodic 是一个 Linux 上的元素周期表应用。
KDE Edu Suite - 基于 KDE 技术的免费教育软件。
(https://sourceforge.net/projects/klavaro) Klavaro - 一款灵活的键盘打字学习软件，支持自定义键盘布局。你可以编辑或保存新的或未知的键盘布局，因为它的基础课程设计成了不依赖特定布局的形式。同时，它还有一些关于学习过程的图表。
(https://github.com/KDE/ktouch) Ktouch - KTouch 是一款学习和练习触摸输入的程序。
MAPLE - Maple 是一款数学软件，它结合了世界上最强大的数学引擎以及一个让它十分易于分析，探索，可视化以及解决数学问题的界面。
MapTiler - MapTiler 可以从用户定义坐标系图片中生成可缩放的栅格地图。
(https://cgit.kde.org/marble.git) Marble - Marble 是一款可视地球仪和世界地图——你的地图瑞士军刀。
MATLAB - MATLAB 平台专为剞劂工程和科学问题优化。MATLAB 让你的想法不仅仅停留在桌面。你可以在巨大的数据集上进行你的分析并按比例增加你的集群和云。
(https://sourceforge.net/projects/maxima/) Maxima - Maxima 是一个处理符号和数值表达式的系统，包括微分，积分，泰勒级数，拉普拉斯变换，常微分方程，线性方程组以及更多。
Mendeley - Mendeley 是一款管理和分享研究论文，寻找研究数据和在线协作的软件。
(https://github.com/moodle/moodle) Moodle - 在线学习课程管理系统。
(https://sourceforge.net/projects/openeuclide/) OpenEuclid - OpenEuclide 是一款 2D 几何软件：数据由描述形式化的几何约束动态定义。
(https://github.com/openmaptiles) OpenMapTiles - OpenMapTiles 是一套开源工具集，可用于支持 50 多种语言的自托管 OpenStreetMaps 数据。它同时提供了栅格和矢量图块，WMS，WMTS，支持 JavaScript 查看器和移动 SDK。
(http://opensis.sourceforge.net/) OpenSIS - 学校管理软件，促进学生成就与教师表现。
(https://pari.math.u-bordeaux.fr/cgi-bin/gitweb.cgi?p=pari.git;a=summary) PARI/GP - 一种针对数论中的快速计算 (大数分解，代数数论，椭圆曲线…) 而设计的广泛应用的计算机代数系统。
(https://git.sagemath.org/sage.git/) SageMath - 一个覆盖许多数学功能的应用软件，包括代数、组合数学、计算数学和微积分。
(https://scipy.org/stackspec.html#stackspec) Scipy - SciPy 是一个基于 Python 的开源软件生态系统，面向数学，科学，以及工程学。
(https://github.com/LLK/scratch-flash) Scratch - 有了 Scratch，你可以编程你自己的互动故事，游戏，以及动画——并且在在线社区和其他人分享你的创造。
(https://sourceforge.net/projects/stellarium/) Stellarium - Stellarium 是一个为你电脑准备的免费开源天文馆。
(https://github.com/sugarlabs/sugar) Sugar Desktop Environment - Sugar 是一个重新定义了电脑如何被用于教育的学习平台。协作，思考和发现直接内置在了用户界面内。
(https://github.com/ugeneunipro/ugene) UGENE - UGENE 是一款免费开源，跨平台，基于图形界面的生物信息学软件。
(https://github.com/veyon/veyon) Veyon - Veyon 是一款教室管理软件，它允许教师通过网络控制学生的电脑以及指导学生。

电子邮件
(https://git.claws-mail.org/) Claws - Claws 是一款电子邮件客户端以及新闻阅读器，有着完善的界面，简单的配置，直观的操作，丰富的功能和插件，健壮且稳定。
(https://github.com/vladimiry/ElectronMail) ElectronMail - ElectronMail 基于 Electron，是 ProtonMail 和 Tutanotais 端对端加密邮件服务的非官方桌面客户端。
(https://gitlab.gnome.org/GNOME/evolution/) Evolution - Evolution 是一款个人信息管理应用，集成了邮件，日历以及地址簿功能。
(https://gitlab.gnome.org/GNOME/geary/) Geary - Geary 是一款为 GNOME 3 构建的电子邮件应用。它让你可以在一个简单，现代的界面上阅读和发送邮件。
Hiri - Hiri 是专注商务的桌面邮件客户端，可以发送和接收邮件，管理日历、联系人、任务。
(https://cgit.kde.org/kmail.git/) KMail - KMail 是 Kontact 的电子邮件组件，KDE 集成的个人信息管理器。
(https://github.com/pulb/mailnag) Mailnag - Mailnag 是一个向 POP3 和 IMAP 服务器检查新邮件的守护程序。
Mailspring - 一款漂亮，快速，维护中的 Nylas Mail (dead) fork，由其原作者之一创建。
(http://sylpheed.sraoss.jp/en/download.html#stable) Sylpheed - 轻量化，用户友好的电子邮件客户端。
(https://releases.mozilla.org/pub/thunderbird/) Thunderbird - Thunderbird 是一款免费的电子油价客户端，设置以及个性化简单方便，功能强大。
(https://cgit.kde.org/trojita.git/) Trojita - 超快的 Linux 桌面邮件客户端。
(https://github.com/danchoi/vmail) Vmail - 类 Vim 的 Gmail 客户端。
(https://github.com/Thomas101/wmail) Wmail - Gmail &amp; Google Inbox 的非官方 Linux 桌面客户端。

文件管理器
(https://sourceforge.net/projects/sevenzip/) 7Zip - 一款强大的软件，几乎能解压任何压缩文件。
(https://github.com/mate-desktop/caja) Caja - MATE 桌面环境的默认文件管理器，非常快速易用。
(https://github.com/KDE/dolphin) Dolphin - Dolphin 是 KDE 桌面环境的默认文件管理器，易用且功能强大。
(https://sourceforge.net/projects/doublecmd/) Double Commander - Double Commander 是一款跨平台的开源双栏文件管理器。它受 Total Commander 启发并有自己的新想法。
(https://krusader.org/get-involved/index.html) Krusader - Krusader 是一款高级的双栏（commander 风格）文件管理器，用于 KDE 以及其他 *nix 世界的桌面环境，与 Midnight 或 Total Commander 相似。
(https://github.com/MidnightCommander/mc) Midnight Commander - 一个功能丰富的全屏文件管理器，你可以复制，移动和删除文件以及整个文件夹树。
(https://github.com/GNOME/nautilus) Nautilus - Nautilus（Files）鹦鹉螺是为适配 Gnome 桌面设计和行为所设计的文件管理器，给用户一个简单的方式导航和管理文件。
(https://github.com/linuxmint/nemo) Nemo - Nemo 是一款 Cinnamon 桌面环境下的文件管理器。
(https://github.com/jarun/nnn) nnn - 非常轻量快速的终端文件浏览器，有优秀的桌面集成。
(https://github.com/teejee2008/polo) Polo - Polo 是一款现代，轻量的 Linux 文件管理器，支持多面板和多标签、归档以及更多功能。
(https://github.com/shundhammer/qdirstat) QDirStat - 基于 Qt 的文件夹统计——不用 KDE 的 KDirStat，来自原 KDirStat 开发者的作品。
(https://github.com/ranger/ranger) Ranger - Ranger 是一款使用 VI 快捷键的终端文件管理器。
(https://github.com/IgnorantGuru/spacefm) SpaceFM - 多栏标签式文件及桌面管理器，内置 VFS、udev- 或基于 HAL 的设备管理器，菜单可配置，支持 bash-GTK 集成。
(https://github.com/vifm/vifm) Vifm - Vifm 是基于 ncurses 的文件管理器，带有类 VI 按键绑定，还从 mutt 借鉴了一些有用的点子。

游戏RTS
(https://releases.wildfiregames.com/) 0 AD - 类帝国时代的开源即时战略游戏。
(https://sourceforge.net/projects/nethack/) Nethack - 开源 rogue-like 游戏，带有 ASCII 图形界面。
(https://github.com/triplea-game/triplea/) TripleA - 开源策略游戏，“轴心与同盟” 规则的游戏。
(https://github.com/Warzone2100/warzone2100) Warzone 2100 - 发生在核战争后的开源即时策略游戏。
(https://bazaar.launchpad.net/~widelands-dev/widelands/trunk/changes) Widelands - Widelands 是一款开源 RTS 游戏，有单人战役和受 Settlers II 启发的多人模式。

回合制策略
(https://github.com/wesnoth/wesnoth) Battle for Wesnoth - 免费，回合制策略游戏，幻想世界主题，有单人以及在线多人对战模式。
(https://github.com/freeciv/freeciv) FreeCiv - Freeciv 是一款受人类文明历史启发的免费开源帝国建造策略游戏，
HedgeWars - 2D 游戏，队伍以流行的 Worms 游戏的形式竞赛。
Tanks of Freedom - 像素风军队策略游戏，用 Godot 游戏引擎实现。

城市建造模拟
Dwarf Fortress - 著名的矮人要塞模拟，与哥布林战斗，以及击杀无数传说怪兽。击败他们！
(https://svn.openttd.org/trunk/) OpenTTD - 带有显著改进的 Transport Tycoon Plus 开源克隆品。
(https://github.com/aburch/simutrans) Simutrans - Simutrans 是一个免费而且开源的运输模拟器。
(https://github.com/unknown-horizons/unknown-horizons) Unknown Horizons - 强调经济和城市建造的 2D 实时策略模拟游戏。多人游戏已经不可用。

FPS
(https://gitlab.com/xonotic) ChaosEsqueAnthology Disc 1 ChaosEsqueAnthology Disc 2 - 一款 Xonotic 的修改版，包含扩展的枪支、地图、载具、可建造建筑、重武器、施法、怪物、玩家角色、材质以及游戏模式（如 colorwar（想想 liquidwar））。
(https://github.com/freedoom/freedoom) Freedoom - 原版 Doom 游戏的自由版本，有新创建的自由材质。
(https://sourceforge.net/projects/oarena/) OpenArena - Quake III Arena 的自由开源克隆，基于释放的源码，加入了新创建的材质。
(https://github.com/red-eclipse/base) Red Eclipse - Red Eclipse 是一款充满乐趣的第一人称竞技场射击的新尝试，给它带来了平衡的游戏体验和多样环境通用的灵活主题。
Urban Terror - 一款 “好莱坞” 式战术射击游戏——基于现实，但口号是“比现实更有趣”。
(https://gitlab.com/xonotic) Xonotic - 受 Unreal Tournament 以及 Quake 启发的竞技场射击游戏。
(https://bitbucket.org/Torr_Samaho/zandronum) Zandronum - 引领新学院派多人在线 Doom 的道路。
(https://github.com/coelckers/gzdoom) Zdoom - ZDoom 是源码的现代移植，支持如今的硬件和系统，以及许多用户选项组合。

角色扮演
(https://github.com/flareteam/flare-engine) FLARE - 带有漂亮原始图像的单人 Diablo 克隆。
(https://gitlab.com/freedroid/freedroid-src) FreedroidRPG - 自顶向下的科幻 2D 角色扮演游戏，受 Diablo 启发。
Ryzom - 免费开源的 3D MMORPG，有着独特的特性和很深的学问。官方服务器支持免费帐户和额外功能的付费订阅。
((https:/te4.org)) Tales of Maj’Eyal - Tales of Maj’Eyal（ToME）是一款免费开源的 roguelike 角色扮演游戏，特色是战术性回合制战斗和高级角色构建。
(https://github.com/ArmageddonGames/ZeldaClassic) Zelda Classic - 对任天堂的塞尔达传说的致敬，有额外的任务，物品和挑战。
Zelda: Mystery of Solarus DX - 迷你超任上的塞尔达传说：过去的林克的直接续集，使用了相同的画面和游戏机制。

命令行
(https://github.com/mydzor/bash2048) 2048 - 在命令行玩著名的 2048。
(https://itsfoss.com/best-command-line-games-linux/) Backgammon - 在命令行玩 Backgammon。
(https://github.com/fph/bastet) Bastet - 在命令行玩 Tetris。
(https://itsfoss.com/best-command-line-games-linux/) Greed - 命令行的 Tron 游戏。
(https://itsfoss.com/best-command-line-games-linux/) Ninvaders - 在命令行玩 Space Invaders。
(https://github.com/alexdantas/nsnake) nSnake - 在命令行玩经典的诺基亚贪吃蛇游戏。
(https://github.com/alexdantas/pacman4console.debian) Pacman4console - 在终端玩吃豆人游戏。
(https://itsfoss.com/play-tron-game-linux-terminal/) Tron - 在命令行玩最佳动作游戏，Tron。

杂项
(https://github.com/viewizard/astromenace) AstroMenace - 硬核 3D 空间卷轴射击游戏，飞船可以升级。
(https://github.com/Cockatrice/Cockatrice) Cockatrice - Cockatrice 是一个开源的多平台网络桌面卡牌游戏支持程序。
(https://github.com/cxong/cdogs-sdl) C-Dogs SDL - 经典的向上跑轰游戏，漂亮的像素艺术。
(http://wiki.flightgear.org/Portal:Developer) FlightGear - 专业品质的 3D 飞行模拟。
(https://download.savannah.gnu.org/releases/galois/source/) Galois - Galois 是方块下落类游戏，它不像大多数同类型游戏那样局限于标准的四方连块。
(https://gitlab.gnome.org/GNOME/gbrainy/) GBrainy - Gbrainy 是一个脑筋急转弯游戏，获得乐趣并且锻炼你的大脑。
Minecraft - Minecraft 是一个关于放置方块和冒险的游戏。探索随机生成的世界，建造惊奇的事物，从最简单的家到最伟大的城堡。
Mcpelauncher - Minecraft: Bedrock 版的非官方开源启动器。
(https://github.com/minetest/minetest/) Minetest - 开源的 Minecraft 实现，由 C++ 写就（占用更少的资源），还包含模组扩展 API。
(https://github.com/Mudlet/Mudlet) Mudlet - 跨平台开源，超快的 MUD（纯文本 MMORPG）客户端，支持 Lua 脚本。
(https://github.com/Neverball/neverball) Neverball - 令人上瘾的滚球游戏，有许多关卡，角色，还可以录制回放。
OhMyGiraffe - 令人愉快的生存游戏。一款关于吃水果和被狮子吃的长颈鹿的游戏。
(https://gitlab.com/pingus/pingus) Pingus - 克隆流行的 Lemmings 的 2D 谜题游戏。你的目标是引导一群企鹅安全穿过地图。
(https://github.com/alpcoskun/snake) Snake Game - 基于 Node.js 的跨平台经典贪吃蛇游戏。
(https://github.com/SuperTux/supertux/) SuperTux - 流行的横向卷轴超级马里奥游戏的克隆。
(https://github.com/supertuxkart/stk-code) SuperTuxKart - SuperTuxKart 是一款 3D 开源的赛车竞技游戏，有不同的人物，赛道以及模式。
(https://xmoto.tuxfamily.org/index.php) XMoto - 基于物理的 2D 越野摩托游戏，达到大师级需要很多的技能，带有内置的回放和分享系统。

引擎重制（需要实际游戏）
(https://github.com/wheybags/freeablo) Freeablo - 在 Linux 上原生运行的原 Diablo 游戏引擎的自由重制版本。需要原游戏的资源文件。
(http://nxengine.sourceforge.net/) NXEngine - 原生运行在 Linux 上的 Cave Story 开源移植，需要源码构建。
(https://github.com/SFTtech/openage) openage - 帝国时代 II 引擎的自由开源实现，需要源码构建。
(https://github.com/OpenMW/openmw) OpenMW - Morrowind 引擎重制，在原版上做了扩展。可以用来游玩原版游戏的合法副本。
(https://github.com/OpenRA/OpenRA) OpenRA - 现代化重建的经典策略游戏。开源。
(https://github.com/OpenRCT2/OpenRCT2) OpenRCT2 - Rollercoaster Tycoon 2 引擎的重制。需要原游戏的资源文件。

游戏软件
(https://github.com/itchio/itch) itch - itch.io 的应用。你的所有下载都在一个地方，并且能自动升级。有很多免费游戏。
(https://github.com/lutris/lutris) Lutris - Lutris 是一个开放 Linux 游戏平台。它帮助你在一个统一的界面安装和管理你的游戏。
(https://repository.playonlinux.com/) PlayOnLinux - Wine 的一个前端。
(https://github.com/libretro/RetroArch) RetroArch - 很多游戏模拟器的前端。
Steam - 超赞的游戏平台，打开众多游戏的大门。
(https://dl.winehq.org/wine/source/) Wine - Wine（“Wine Is Not an Emulator” 的首字母缩写）是一个兼容层，可以在若干 POSIX 兼容的系统上运行 Windows 程序，比如 Linux，Mac OS X，以及 BSD。在 Linux 上的软件运行质量各个游戏有所不同。

模拟器
(https://github.com/dolphin-emu/dolphin) Dolphin Emulator - Dolphin 是一款 GameCube / Wii 模拟器，允许你在 PC 平台上玩优化过的这些平台上的游戏。
(https://sourceforge.net/p/fuse-emulator/) Fuse - Fuse（Free Unix Spectrum Emulator）是 Unix 下的 ZX Spectrum 模拟器。
(https://github.com/GNOME/gnome-video-arcade) GNOME Video Arcade - GNOME Video Arcade 是一款简单的 Mame 前端，用于任何 freedesktop.org 兼容的桌面环境。
(https://gitlab.com/higan/higan) Higan - Higan 是一款多系统模拟器，支持模拟很多不同系统，包括：NES、SNES、GameBoy、GameBoy Color、Gameboy Advance、NEC PC Engine、Sega Master System 以及更多系统。这里是一份在 Linux 上安装它的指南：Higan Installation。
(https://github.com/mamedev/mame) MAME - MAME 是一款力争精确的 Arcade Cabinet 模拟器，可以玩很多不同的街机游戏。
(https://github.com/0ldsk00l/nestopia) nestopia - nestopia 是一个 NES/Famicon 模拟器。
(https://sourceforge.net/projects/qmc2/) qmc2 - QMC2 是 QMamecat 的继任者，是 MAME 的图形界面以及 ROM 管理器。
(https://github.com/snes9xgit/snes9x) Snes9x - 多平台 Super Nintendo Entertainment System 模拟器，已经经历过多次复活，仍处于活跃开发状态。
(https://github.com/stella-emu/stella) Stella - 多平台 Atari 2600 模拟器。
(https://github.com/visualboyadvance-m/visualboyadvance-m) Visual Boy Advance-M - 一款 Gameboy 和 Gameboy Advance 模拟器，仍在活跃开发，甚至可以模拟两台 gameboys 之间的链接。
(https://sourceforge.net/projects/zsnes/) ZSNES - 强大又常用的 Super Nintendo Entertainment System/Super Famicom 模拟器，许多意见认为它是 SNES/Super Famicom 模拟的黄金标准。

图像图像创建
(https://github.com/aseprite/aseprite/) Aseprite - Sprite 动画编辑器及像素艺术工具。
(https://download.blender.org/source/) Blender - 面向艺术家和小团队的免费开源的完整 3D 创作流水线。
(https://sourceforge.net/projects/cinepaint/) Cinepaint - 开源绘画软件。
(https://github.com/lettier/gifcurry) Gifcurry - Haskell 构建，你的开源视频 GIF 制作工具。
Gravit - Grivit Designer 是一款就在你指尖的全功能免费矢量设计应用。
Heron Animation - 免费的定格动画制作程序。
(https://github.com/inkscape/inkscape) Inkscape - 不管你是插画家，设计师，web 设计师还是仅仅是需要创建一些矢量图像，它都是一款强大，免费的设计工具
(https://www.kde.org/applications/graphics/karbon/development) Karbon - 一款开源的矢量绘图程序。
(https://gitlab.com/mattia.basaglia/Knotter) Knotter - 一款仅仅设计来帮助凯尔特结设计和创建的程序。
(https://github.com/KDE/krita) Krita - 面向概念艺术家，数字画家以及插画艺术家的开源软件。
(https://github.com/mypaint/mypaint) Mypaint - Mypaint 是一款配合画板使用的绘画程序。
(https://gitlab.com/jonata/opendvdproducer) Open DVD Producer - 现代，开源，跨平台的 DVD 镜像生产软件。
(https://pinta-project.com/pintaproject/pinta/contribute) Pinta - Pinta 是一款免费，开源的绘画及图片编辑程序。
(https://launchpad.net/lsm) StopMotion - Linux Stopmotion 是一款免费，开源的定格动画创作应用。它可以帮你捕捉和编辑你动画的帧，并导出为一个单独的文件。
(https://github.com/synfig/synfig) Synfig Studio - 开源 2D 动画软件。
(https://github.com/scantailor/scantailor) Scan Tailor - Scan Tailor 是一款交互式扫描件后期处理工具。使用教程可以参见它的用户指南。
(https://sourceforge.net/projects/sweethome3d/) Sweet Home 3D - 房屋内外部设计工具，带有 3D 预览，免费模型数据库，可视化访问以及实用的插件仓库。
Vectr - Vextr 是一款免费的图形软件，用于轻松直观地创建矢量图。它是个简单又强大的 web 及桌面端跨平台工具，将你的设计带入现实。
(http://www.xaraxtreme.org/Developers/develeopers-source-code-a-building.html) Xara Extreme - Xara Xtreme for Linux 是一款强大，通用，适用于 Unix 平台（包括 Linux， FreeBSD）的图形处理程序。
yEd Graph Editor - yED 是一款用来快速高效地生成高质量图表的强大桌面应用。可以手动创建图表，或导入你的外部数据用于分析。自动布局算法甚至可以在按钮点击时就排布好巨大的数据集。

图片编辑
Aftershot - 一个强大的 Adobe Photoshop 替代品！
(https://github.com/darktable-org/darktable) Darktable - Darktable 是一个开源的摄影处理软件，支持 RAW 文件处理。
(https://github.com/GNOME/gimp) GIMP - GIMP 是一个自由分发的程序，可以进行照片修版，图像合成，图像编辑等操作。
(https://sourceforge.net/projects/graphicsmagick/) GraphicsMagick - GraphicMagick 是图像处理的瑞士军刀。
(http://hugin.sourceforge.net/) Hugin - 基于 Panorama Tools 的一款易用的跨平台全景图像工具链。
(https://github.com/ImageMagick/ImageMagick) ImageMagik - ImageMagick 是一套用于图像修改和处理的命令行工具集。
(https://github.com/jarun/imgp) imgp - 快速的终端图片缩放和旋转工具。
(https://github.com/LuminanceHDR/LuminanceHDR) Luminance HDR - Luminance HDR 是一款开源的图形化用户界面应用，它的目标是提供一整套的 HDR 图像工作流程。
(https://github.com/google-code-export/photivo) Photivo - Photivo 是一款免费开源（GPL3）的照片处理工具，可以在 gimp 工作流集成和批处理模式中，以 16bit 无损的方式处理你的 RAW 和位图文件（TIFF、JPEG、BMP、PNG 等）。它打算在 digiKam/F-Spot/Shotwell/Gimp 的工作流中一起被使用。
(https://github.com/piskelapp/piskel) Piskel - 基于浏览器的 sprite 动画及像素艺术编辑器。可作为离线应用使用。
(https://github.com/lbalazscs/Pixelitor) Pixelitor - Pixellitor 是一款免费开源的图像编辑软件，支持图层、图层蒙版、文字图层、过滤器、多重撤销等。
(https://github.com/Beep6581/RawTherapee) RawTherapee - 一款漂亮的但不那么著名的照片编辑应用。

图片管理
(https://github.com/KDE/digikam) Digikam - digiKam 是一个高级的 Linux 数字相片管理应用。
(http://git.finalrewind.org/feh) Feh - 轻量且快速的图片查看器。
(http://www.kornelix.net/downloads/downloads.html) Fotoxx - Fotoxx 是一个免费开源的图像编辑和收藏管理程序。
(https://github.com/BestImageViewer/geeqie) geeqie - 图片查看器 / 照片集浏览器。
(https://gitlab.gnome.org/GNOME/gthumb/) gThumb - gThumb 是一款图片查看和浏览器（它还包含一个导入工具，用于从相机导入照片）。
(https://cgit.kde.org/gwenview.git/tree//?) gwenview - KDE 桌面简单但强大的图片查看器和管理工具。
(https://github.com/meowtec/Imagine) Imagine - 一款开源图片优化工具，可以以最少的质量损失来减小图片文件大小。
(https://github.com/nomacs/nomacs/tree/master) nomacs - nomocs 是一款几乎可以查看任何图片格式的图片查看器，拥有强大的重命名及整理工具。
(https://github.com/peterlevi/ojo) Ojo - 一款快速且漂亮的图像查看器。
(https://github.com/ivandokov/phockup) Phockup - 命令行整理工具，以年月日方式组织文件夹中的相机照片和视频。
(https://github.com/oferkv/phototonic) Photonic - Phototonic 是一款图片查看和组织工具。
(https://github.com/kanryu/quickviewer) quickviewer - 非常快速的图片 / 漫画查看器，使用 OpenGL。
(https://gitlab.gnome.org/GNOME/shotwell) Shotwell - Shotwell 是 GNOME 3 的图片管理器。

杂项
(https://github.com/HandBrake/HandBrake) Handbrake - HandBrake 是一款视频格式转换工具，几乎可以将任何格式转换为现代，广泛支持的解码格式。
(http://potrace.sourceforge.net/#downloading) Potrace - Potrace 是一款位图描图工具，这意味着将位图转换为平滑可缩放的图片。
(https://www.radiance-online.org/download-install/radiance-source-code) Radiance - Radiance - 一款经过验证的光照模拟工具。
(https://github.com/terkelg/ramme) Ramme - 非官方 Instagram 桌面应用。
(https://launchpad.net/rapid/) Rapid Photo Downloader - Rapid Photo Downloader 让从相机或智能手机导入照片变得轻松。

PSD， Sketch 查看
Avocode - AVocode——立即分享和查看 Photoshop 和 Sketch 设计。

屏幕录制
(https://github.com/asciinema/asciinema) asciinema - 终端会话记录器。
(https://github.com/foss-project/green-recorder) Green Recorder - 简单的 Linux 系统桌面录制工具，几乎支持在所有 Linux 界面、GNOME 会话的 Wayland 显示服务器上录制音频和视频。
(https://code.launchpad.net/kazam) Kazam - 易用直观的屏幕录制程序，可以捕获屏幕内容及录制视频文件，文件可以用任何支持 VP8/WebM 视频格式的播放器播放。
(https://github.com/obsproject/obs-studio) OBS Studio - 免费且开源的视频录制及直播软件。在 Windows，Mac 和 Linux 上下载并轻松快速地开始直播。和世界分享你的游戏，艺术和娱乐。
(https://github.com/phw/peek) Peek - 简单的录屏 GIF 动图制作工具，界面易用。
(https://github.com/colinkeenan/silentcast) Silentcast - Silentcast 可以创建 MKV 屏幕录制，还可以输出为 GIF 动图。
(https://github.com/MaartenBaert/ssr) SimpleScreenRecorder - SimpleScreenRecorder 是一款功能丰富的屏幕录制工具，支持 X11 和 OpenGL。它有着基于 Qt 的图形用户界面。
(https://github.com/vkohaupt/vokoscreen) Vokoscreen - 免费、多语言、易用的 Linux 带音频屏幕录制工具。有很多功能。

截屏
(https://github.com/lupoDharkael/flameshot) Flameshot - 强大易用的截屏软件。
(https://github.com/olav-st/screencloud) Screencloud - ScreenCloud 是一款易用的截屏分享工具，由跨平台客户端和分享站点（http://screencloud.net/）组成。
(https://github.com/binjospookie/--shots) Shots - HTML/CSS/JS 截屏应用。
(https://bazaar.launchpad.net/~shutter/shutter/devel/files) Shutter - Shutter 是基于 Linux 的系统（如 Ubuntu）上的一款功能丰富的截屏程序。

串流
(https://sourceforge.net/projects/minidlna) ReadyMedia - 原名 MiniDLNA，ReadyMedia 是一款简单，轻量的媒体服务器软件，目标是完全兼容 DLNA/UPnP-AV 客户端。MiniDLNA 守护进程为网络上的客户端提供媒体文件（音乐，图片以及视频），这些客户端可以是智能手机、便携式媒体播放器、电视、其他电脑以及游戏系统。

视频编辑
(https://git.cinelerra-cv.org/gitweb?p=CinelerraCV.git;a=summary) Cinelerra-cv - 专业的视频编辑与合成环境。
Davinci Resolve - 革命性的工具，用于视频编辑、校色、音乐后期以及现在还有可视效果，都在这一个应用中。
(https://github.com/jliljebl/flowblade) Flowblade - 多声道非线性 Linux 视频编辑器。
(https://github.com/KDE/kdenlive) Kdenlive - Kdenlive 是一款非线性视频编辑器，比入门级的（线性）编辑器强大得多。
Lightworks - 专业的非线性视频编辑程序，有免费版本可用。
(https://github.com/olive-editor/olive) Olive - Olive 是一款免费的非线性视频编辑器，目标是提供一个全功能的高端专业视频编辑软件的替代品。
(https://github.com/OpenShot/openshot-qt) OpenShot - OpenShot 是一款免费，易用，功能丰富的 Linxu 视频编辑器。
(https://gitlab.gnome.org/GNOME/pitivi) Pitivi - 一款带有漂亮直观的用户界面的免费视频编辑器，有干净的代码库和出色的社区。
(https://github.com/mltframework/shotcut) Shotcut - Shotcut 是一款免费、开源、跨平台的视频编辑器，支持数百种音视频格式以及编解码，界面漂亮直观。
(https://github.com/ozmartian/vidcutter) Vidcutter - 跨平台 Qt5 应用，用于快速简单的视频剪辑分段和合并编辑。

互联网浏览器
(https://github.com/brave/brave-browser) Brave - Brave 是 macOS，Windows，Linux 平台上一款快速，优秀的桌面浏览器。
Chrome - 一款流行的浏览器，有着无数插件和应用。
(https://chromium.googlesource.com/chromium/src.git) Chromium - Chromium 是一个开源浏览器项目，专注于为所有用户带来更安全、快速和稳定的 web 体验。
(https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide) Firefox - 一款流行的浏览器，有着无数插件和应用。
(https://git.savannah.gnu.org/cgit/gnuzilla.git) IceCat - Firefox 的 GNU 版本，为隐私构建，只使用自由软件和商标。
(https://launchpad.net/~midori/+archive/ubuntu/ppa) Midori - 一款轻量级的免费浏览器，在低端机器上可以完美运行。
(https://github.com/minbrowser/min) Min - 智能，快速的 web 浏览器。
Opera - Opera 浏览器是你畅游网络所需的一切。
(https://cgit.kde.org/falkon.git) Falkon - Falkon 的目标是成为各大平台上的轻量化 web 浏览器。
(https://github.com/qutebrowser/qutebrowser) QuteBrowser - 键盘驱动的，类 vim 操作的浏览器，基于 PyQt5。
Vivaldi - 一款新兴的浏览器，有着许多的个性化配置。
Yandex - 快速方便的浏览器。

支持工具
Clipgrab - 用于 YouTube 和其他站点，友好的下载工具。
(https://gitweb.torproject.org/tor.git) Tor - Tor 是免费软件和一个开放网络，帮助你对抗流量分析（一种网络检测的方式，威胁个人自由与隐私）。
(https://github.com/rg3/youtube-dl) youtube-dl - YouTube 视频下载神器，是一个 Python 编写的命令行视频下载器，同时支持其它一些视频网站或平台。注意：国内用户若要下载 YouTube 视频，需要给它添加 —proxy 参数，指定代理下载。
(https://github.com/MrS0m30n3/youtube-dl-gui) youtube-dlg - Youtube-dlg 是 youtube-dl 的一个图形界面，支持从所有 youtube-dl 兼容的网站上做简单的复制粘贴操作。它可以同时自动升级 youtube-dl 和处理 URL 列表。
(https://github.com/zerotier/ZeroTierOne) Zerotier - Zerotier 是一款可以在互联网上为你的设备创建端对端加密虚拟网络的软件。Zerotier 默认为你管理网络，如果你愿意的话也可以切换到自行管理网络。

Web 服务客户端
(https://cgit.kde.org/akregator.git/) Akregator - 一款 KDE Feed 阅读器。
(https://choqok.kde.org/) Choqok - Choqok 是一款 Twitter、GNU Social、Friendica 及 Pump.IO 的 QT5 图形客户端。
(https://github.com/baedert/corebird) Corebird - corebird 是一款原生 gtk+ twitter 桌面客户端。
(https://github.com/jangernert/FeedReader) FeedReader - 一款现代的桌面应用，被设计用于补充已有的基于 web 的 RSS 账户，将所有的 web 服务优势集中到一个现代桌面应用中。
(https://github.com/jeena/FeedTheMonkey) FeedTheMonkey - FeedTheMonkey 是一款 TinyTinyRSS 的桌面客户端。
(https://github.com/vinszent/gnome-twitch) GnomeTwitch - 在你的 GNU/Linux 桌面上用这款非 Adobe-flash Twitch 客户端享受 Twitch。
(https://github.com/EragonJ/Kaku) Kaku - Ubuntu 开源 youtube 音乐播放器。
(https://github.com/popcorn-official/popcorn-desktop) Popcorntime - 直接观看 torrent 电影。

办公会计
(https://github.com/Gnucash/) GnuCash - GnuCash 是一款自由的会计程序，实现了复式记账系统。它最初的目标是开发出与 Intuit, Inc. 的 Quicken 类似的功能，但它还有针对小企业会计的功能。
(https://code.launchpad.net/homebank) HomeBank - HomeBank 是一款帮助你管理个人账目的免费软件。
(https://github.com/KDE/kmymoney) KMyMoney - KMyMoney 是 KDE 的一款个人金融管理器。它的操作类似 Microsoft Money 以及 Quicken。
(https://cgit.kde.org/skrooge.git) Skrooge - KDE 出品的个人金融管理工具。

办公套件
(https://github.com/KDE/calligra) Caligra Office - 提供满足办公，图形以及管理需要的综合应用套件。
(https://www.libreoffice.org/about-us/source-code/) LibreOffice - Linux 上成熟且著名的最佳办公套件。
(https://github.com/ONLYOFFICE) OnlyOffice - 云端版本收费的办公套件，但其它用途免费。
WPS office - 中国流行的办公套件，但完整翻译成了英文而且功能完善。

LaTeX
(https://github.com/alexandervdm/gummi) Gummi gtk2|gtk3 - 带有模板，拼写检查以及向导的简单 latex 编辑器。
(https://gitlab.gnome.org/GNOME/gnome-latex) GNOME LaTeX - GNOME LaTeX 是 GNOME 桌面下的 LaTeX 编辑器。
(https://www.lyx.org/trac/browser) LyX - 成熟的 LaTeX 渲染文档编辑器。
(https://www.tug.org/texlive/build.html) TexLive - TeX Live 是个轻松获取和运行 TeX 文档生产系统的好方式。
(https://savannah.gnu.org/projects/texmacs) TeXmacs - 一款所见即所得的科学文本编辑器，并可用作一系列计算机代数系统的前端。
(http://www.xm1math.net/texmaker/download.html) Texmaker - 免费跨平台的 LaTeX 编辑器。
(https://github.com/texstudio-org/texstudio) TeXstudio - TeXstudio 的目标是让编写 LaTex 文档尽可能地简单舒适。
(https://github.com/TeXworks/texworks) TeXworks - TeXworks 是一个 TeX（LaTeX，ConTeXt 等）文档创作环境，带有基于 Unicode，针对 TeX 的编辑器，内置 PDF 查看器，以及一个对非常用和非专业用户而言平易近人的干净，简单的界面。

Markdown
(http://github.com/wereturtle/ghostwriter) Ghost Writer - Windows 和 Linux 下的无打扰 Markdown 编辑器。
(https://github.com/jamiemcg/remarkable) Remarkable - 强大的 markdown 编辑器，使用 Github 方言 Markdown（GFM）。
(https://github.com/retext-project/retext) Retext - 简单但强大的 Markdown 及 reStructuredText 编辑器。
Typora - 简洁的 markdown 编辑器。

小说编写
(https://github.com/andreafeccomandi/bibisco) Bibisco - 专注于点子和角色的小说创作软件。
(https://github.com/olivierkes/manuskript) Manuskript - Manuskript 对那些喜欢在写作之前做好组织和计划的作者来说是个完美的工具。
(https://github.com/jacquetc/plume-creator) Plume Creator - 一款给小说家的的开源工具，给你提供了大纲，免打扰模式，备注管理以及更多功能。
(https://github.com/scribusproject/scribus) Scribus - Scribus 是一款桌面出版应用，设计用于布局，排版，以及准备专业品质影像设定配置的文件。它还可以创建动画交互 PDF 演示和表单。
(https://github.com/oskusalerma/trelby) Trelby - Trelby 简单、快速、优雅的排版让屏幕创作更简单。

生产力自动化
(https://github.com/Jmgr/actiona) Actiona - Ubuntu/Linux 下的任务自动化工具（原名 Actionaz）。
(https://github.com/autokey/autokey) Autokey - 一款 Linux 桌面自动化工具，让你可以管理你的脚本和短语集合，并给它们分配缩写或者快捷键。
(https://code.launchpad.net/caffeine) Caffeine - 阻止 Ubuntu 自动进入睡眠。

Dock
(https://github.com/Cairo-Dock) Cairo-Dock - Cairo-Dock 是一个可自定义 dock，插件，面板等的桌面界面。
(https://code.launchpad.net/docky) Docky - Docky 是一款成熟的 dock 应用，让打开常用应用和管理窗口变得更加简单和快速。
(https://git.launchpad.net/plank) Plank - Plank 注定要成为这个星球上最简洁的应用 dock。

本地搜索
(https://github.com/albertlauncher/albert) Albert - Linux 桌面下超赞的键盘启动器。
(https://github.com/DoTheEvo/ANGRYsearch) AngrySearch - Linux 文件搜索，结果键入即得。
(https://code.launchpad.net/catfish-search) Catfish - Catfish 是多功能的文件搜索工具。
(https://github.com/KELiON/cerebro) Cerebro - 开源生产力提升工具 / MacOS Spotlight 替代工具。
(https://github.com/cboxdoerfer/fsearch) fsearch - 基于 GTK+3 类 Unix 系统的快速文件搜索工具。支持通配符、正则表达式和过滤器。
(https://github.com/p-e-w/plotinus) Plotinus - 在每个现代 GTK+ 应用中的可搜索命令面板。

杂项
(https://code.launchpad.net/anoise) Ambient Noise - Linux 下的环境噪声生成器。
(https://github.com/jarun/bcal) bcal - 进行存储单位转换和计算。
(https://github.com/hluk/CopyQ) CopyQ - CopyQ 是一款高级剪贴板管理器，带有编辑和脚本功能。
f.lux - 自动调节你的电脑屏幕色温显示，帮助你更好地睡眠。
(https://github.com/thezbyg/gpick) Gpick - Gpick 让你可以从桌面任何地方取色，并且它还提供一些其它的高级特性！
(https://github.com/jarun/pdd) pdd - 小型的日期与时间差异计算器。
(https://github.com/jonls/redshift) Redshift - Redshift 根据你的周边调整你屏幕的色温。当你夜晚在屏幕前工作时，它也许能帮助你减少对眼睛的伤害。
(http://www.speedcrunch.org/) SpeedCrunch - 一个漂亮，开源，高精度的科学计算器。
(https://github.com/jml/undistract-me) Undistract me - 在长时间运行的终端命令结束后通知你。
(https://github.com/xmindltd/xmind) Xmind - 脑图工具。

笔记
(https://basket-notepads.github.io/download.html) Basket Note Pads - 这个多用途的笔记应用帮助你记下所有类型的笔记。
(https://github.com/BoostIO/Boostnote) Boostnote - Boostnote 是一款开源的笔记应用，为像你这样的程序员准备。
Inkdrop - 为 Markdown 爱好者准备的笔记应用，简单的界面，无缝安全，强大的 API。
(https://github.com/laurent22/joplin) Joplin - 一款笔记及 to-do 应用，可以在 Windows、macOS、Linux、Android 和 iOS 之间同步。
(https://sourceforge.net/p/nevernote/code/ci/master/tree/) NixNote - EverNote 开源客户端。
(https://github.com/notepadqq/notepadqq) Notepadqq - Notepadqq 是 Linux 下一款类 Notepad++ 的编辑器。
(https://github.com/nuttyartist/notes) Notes - 一款干净又简单的 Linux 笔记应用。
(https://github.com/patrikx3/onenote) OneNote - Linux Electron OneNote。
(http://orgmode.org/) Org mode - Org mode 在一个快速且高效的纯文本系统上记录笔记，维护 TODO 列表，规划项目以及创作文档。
(https://github.com/pbek/QOwnNotes) QOwnNotes - QOwnNotes 是一款纯文本文件记事本以及 todo 列表管理器，支持 markdown 以及 ownCloud / NextCloud 集成。
Simplenote - 跨平台笔记应用，Evernote 的竞争者。
(https://github.com/spsdco/notes) Springseed - 面向日常用户简单又漂亮的一款笔记软件。
(https://bazaar.launchpad.net/~umang/indicator-stickynotes/trunk/files) Stickynote - Linux 桌面的便利贴。
(https://github.com/tomboy-notes/tomboy) Tomboy - Tomboy 是一款简单易用的桌面笔记应用。
(https://github.com/zadam/trilium) Trilium Notes - Trilium Notes 是一款分级的笔记应用，专注于构建大型的个人知识库。
(https://github.com/klaussinani/tusk) Tusk - 精炼的 Evernote 桌面应用。
(https://github.com/cellardoor42/whatever) Whatever - 非官方 Evernote Linux 桌面客户端。
(https://github.com/wizteam/wizqtclient) WizNote - 一个跨平台云笔记客户端。

时间与任务
(http://bazaar.launchpad.net/~joh/alarm-clock/trunk/files) Alarm Clock - Alarm Clock 是一款全功能的 GNOME 或其它面板的闹钟。
(http://git.calcurse.org/calcurse.git/) calcurse - 一款命令行日历和日程安排应用。
(https://gitlab.gnome.org/GNOME/california) California - Calendar 应用的完整替代方案，可使用自然语言创建事件。
Everdo - 全平台 TODO 列表和 Getting Things Done® 应用。漂亮，强大，非 SaaS，有免费版本提供。
(https://github.com/codito/gnome-pomodoro) Gnome Pomodoro - GNOME 下的全功能番茄钟。
(https://github.com/mank319/Go-For-It) Go For It - Go For It! 是一款简单又时尚的生产力工具，主打待办清单，结合定时器让你专注于当前的任务。
Pomodone App - PomoDoneApp 使用番茄钟技术 ®，是在你当前任务管理服务上追踪你的工作流最简单的方法。
(https://userbase.kde.org/RSIBreak) RSIBreak - RSIBreak 关心你的健康，定时打断你的工作来避免重复性压迫损伤。
(https://github.com/johannesjo/super-productivity) Super Productivity - 简单、免费、灵活的 ToDo 列表 / 时间追踪器 / 个人 Jira/Github 任务管理器。
(https://github.com/klaussinani/taskbook) Taskbook - 命令行任务，看板和笔记。
(https://github.com/GothenburgBitFactory/taskwarrior) TaskWarrior - Taskwarrior 是一款免费，开源的的软件，它可以从命令行管理你的待办事项列表。
(https://github.com/todotxt/todo.txt-android) Todo.txt - todo.txt - 专注的编辑器，用最少的组合键和点击帮助你管理你的任务。
(https://github.com/kamhix/todoist-linux) Todoist - Todoist 的非官方客户端。Todoist 是带有移动客户端的跨平台待办事项管理器，有着优秀的用户界面以及一些可选的高级特性。

部件与指示器
(https://bazaar.launchpad.net/~indicator-brightness/indicator-brightness/trunk/files) Brightness - Ubuntu 下的一个亮度指示器。
(https://git.launchpad.net/my-weather-indicator) My Weather Indicator - Ubuntu 下的天气指示器和插件。
(https://bazaar.launchpad.net/~jconti/recent-notifications/trunk/files) Recent Noti - 一款显示最近通知消息的指示器。

代理
(https://sourceforge.net/projects/ijbswa/) Privoxy - Privoxy 是一款无缓存 web 代理，有高级过滤功能，用以加强隐私，修改 web 页面数据以及 HTTP 头部，访问控制，还有去广告和烦人的网络垃圾的功能。
(https://github.com/haad/proxychains) ProxyChains - 强制指定的应用发起的任何 TCP 连接通过像 TOR 或其它 SOCKS4，SOCKS5 或 HTTP(S) 代理进行。
(https://github.com/shadowsocks/shadowsocks-qt5) Shadowsocks - 一个 socks5 代理工具，保护你的互联网流量。
(https://github.com/erguotou520/electron-ssr/releases) electron-ssr - 跨平台 Shadowsocksr electron 桌面客户端。

安全区域隔离
(https://github.com/netblue30/firejail) Firejail - Firejail 是一款 SUID 程序，通过使用 Linux namespaces 和 seccomp-bpf 限制不可信应用的运行环境，来减少安全缺口的风险。
(https://sourceforge.net/projects/kvm/files/) KVM - KVM （表示 Kernel-based Virtual Machine，基于内核的虚拟机）是一个支持虚拟化扩展（Intel VT 或 AMD-V）Linux 的完全虚拟化方案。
(https://github.com/nanovms/ops/) ops - OPS 是将一般 Linux 应用作为 unikernel 构建，运行和部署的工具。
(https://www.virtualbox.org/wiki/Contributor_information) Virtualbox - VirtualBox 是一款 x86 硬件的通用完全虚拟环境，用于服务器，桌面和嵌入式环境使用。

防火墙
(https://github.com/firehol/firehol) FireHOL - 人性化的 Linux 防火墙（iptables）管理器。
(https://github.com/firewalld/firewalld) Firewalld - Firewalld 提供了防火墙动态管理，支持为网络或防火墙区域定义网络连接或接口的信任等级。
(https://code.launchpad.net/gui-ufw) GuFW - Linux 世界中最简单的防火墙之一。

密码管理
(https://bitwarden.com/) Bitwarden - 跨平台密码管理服务，也支持自托管。
(https://github.com/SpiderOak/Encryptr) Encryptr - Encryptr 是一款零知识性，基于云端的数字钱包 / 密码管理器，由 Crypton 提供。
Enpass - Enpass 安全地管理你的密码和重要信息，让你的生活更轻松。
(https://git.zx2c4.com/password-store/) Pass - 标准 Unix 密码管理工具。
(https://sourceforge.net/projects/passwordsafe/) Password Safe - Password Safe 允许你轻松安全地创建一个安全，加密的用户名 / 密码列表。
(https://sourceforge.net/projects/keepass/files/KeePass%202.x/) KeePass - 专注于 Windows 的密码管理器，通过 Mono 提供一些跨平台支持。
(https://github.com/keepassxreboot/keepassxc) KeePassXC - 跨平台密码管理器。社区维护的 KeePassX 分支。
(https://github.com/keeweb/keeweb) KeeWeb - 免费的跨平台密码管理器，兼容 KeePass。
LastPass - LastPass 是一款跨平台免费密码管理服务，在私人账户里存储加密的密码。

其它
(https://github.com/Cisco-Talos/clamav-devel) ClamAV - ClamAV 是一款开源反病毒引擎，用于检测木马、病毒、恶意软件以及其他恶意威胁。
(https://github.com/fail2ban/fail2ban) Fail2ban - Fail2ban 扫描日志文件（例如 /var/log/apache/error_log）并将有恶意气息的 IP 封禁——过多的错误密码尝试，寻找可利用漏洞等行为。
(https://firehol.org/tutorial/fireqos-new-user/) FireQoS - 人性化 Linux QoS（tc）管理器。
(https://git.gnupg.org/) GnuPG - GnuPG 允许对你的数据和通讯进行加密和签名，特色是一个多用途密钥管理系统以及所有类型的公钥目录的访问模块。
(https://github.com/firehol/iprange) IPrange - 一款快速的命令行工具，用于处理 IP 列表（合并、比较、剔除等）。
(https://github.com/jarun/keysniffer) keysniffer - Linux 内核模式 debugfs 按键记录器。
(https://github.com/CISOfy/lynis) Lynis - Linux，macOS 以及基于 UNIX 的系统的安全审计工具。帮助进行符合性测试（HIPAA/ISO27001/PCI DSS）以及系统加固。无客户端，安装可选。
(https://www.openbsd.org/anoncvs.html) OpenSSH - OpenSSH 安全 Shell 服务器以及客户端。
(https://gitlab.gnome.org/GNOME/seahorse) Seahorse - GnuPG 的 Gnome 前端。
(https://github.com/mhogomchungu/sirikali) Sirikali - Cryfs，gocryptfs，securefs，ecryptfs 以及 encfs 的一个 Qt/C++ 图形化界面前端。
(https://www.tcpdump.org/#source) Tcpdump - TCP 调试 / 抓包工具。
(https://github.com/usbkey9/uktools) Uktools - 保持你的系统内核最新。支持清理旧内核。
(https://github.com/firehol/blocklist-ipsets) Update-IPsets - 一个所有网络犯罪 IP 订阅的管理器，可以下载，转换和安装 netfilter ipsets。

文件共享
(https://github.com/aria2/aria2) aria2 - aria2 是一个轻量级的多协议以及多来源命令行下载工具。
CrossFTP - CrossFTP 让 FTP 相关的任务管理变得无比简单。
D-lan - 一个免费的局域网文件分享软件。
(https://git.deluge-torrent.org/deluge) Deluge - Deluge 是一款轻量级，免费的跨平台 BT 客户端。
Dropbox - Dropbox 是一个免费的云存储服务，让你可以将照片，文档和视频带到任何地方并轻松分享。
(https://svn.filezilla-project.org/filezilla/FileZilla3/) Filezilla - 免费的 FTP 解决方案。
Flareget - 全功能，多线程下载管理器以及加速器。
(https://cgit.kde.org/ktorrent.git/tree//?) KTorrent - KTorrent 是 KDE 的 BitTorrent 应用，允许你使用 BitTorrent 协议下载文件。
(https://github.com/meganz/MEGAsync) Mega - 在你的电脑和 MEGA 云存储间轻松自动同步。
(http://git.igalia.com/meiga.git) Meiga - 一个让你可以通过 web 共享你选定的本地文件夹的工具。
(https://github.com/nextcloud) nextCloud - 一个活跃维护的 ownCloud 分支，客户端和服务器套件用于创建和使用文件托管服务。
(https://github.com/nitroshare/nitroshare-desktop) NitroShare - 跨平台网络文件传输应用。
(https://github.com/micahflee/onionshare) OnionShare - 安全匿名地分享任意大小的文件。
(https://github.com/owncloud) ownCloud - ownCloud 的目标是不论在哪都能让你访问到你的文件。
PushBullet - Pushbullet 将你的设备连接，让它们感觉像是一体的。
(https://github.com/sidneys/pb-for-desktop) PushBullet for desktop - 缺席的 Pushbullet 桌面应用。
(https://github.com/qbittorrent/qBittorrent) qBittorent - qBittorrent 计划的目标是提提供一个 µTorrent 的自由软件替代方案。
Quazaa - 一款跨平台的多重网络点对点（P2P）文件分享客户端。
(https://github.com/haiwen/seafile) Seafile - Seafile 是一套企业级文件托管平台，有着高可靠性和高性能。将文件保存在你自己的服务器上。可以在不同设备上同步和分享文件，或以虚拟磁盘的方式访问所有文件。
SpiderOak - 关注隐私的团队及商业实时协作。
(https://github.com/syncthing/syncthing) Syncthing - Syncthing 用开放，值得信赖，去中心化的方案取代专有的同步和云服务。
Teamviewer - PC 远程控制 / 远程访问软件，对个人使用免费。
Tixati - 免费软件，功能高级的 torrent 客户端，带有 web 用户界面。
(https://trac.transmissionbt.com/browser/trunk) Transmission - 简单，轻量级，多平台的 torrent 客户端。
(https://github.com/transmission-remote-gui/transgui) Transmission Remote GUI - Transmission Remote GUI 是一个功能丰富的跨平台前端，可以通过它的 RPC 协议远程控制 Transmission Bit-Torrent 守护进程。
(https://sourceforge.net/p/urlget/uget2/ci/master/tree/) uGet - 一款下载管理器，可以监视剪贴板里的下载链接，创建一系列下载任务并同时开始任务。
(https://dev.vuze.com/) Vuze - Bittorrent 点对点下载客户端，满足你的所有 torrent 下载需要。
(https://github.com/webtorrent/webtorrent-desktop) Web Torrent Desktop - Web Torrent Desktop 可以同时连接到 BitTorrent 和 WebTorrent 节点来流式播种子。
(https://github.com/warner/magic-wormhole) Wormhole - 从另一台电脑上安全地获取任意大小的文件和目录（或文本片段）。

终端
(https://github.com/jwilm/alacritty) Alacritty - 跨平台，支持 GPU 加速的终端模拟器。
(https://github.com/Swordfish90/cool-retro-term) Cool Retro Term - 模拟老式 CRT 显示器的好看终端。
(https://sourceforge.net/projects/dban/) DBAN - 删除 PC 笔记本，桌面或服务器硬盘（HDD）上存储的信息。
(https://github.com/GitSquared/edex-ui) eDEX-UI - eDEX-UI 是一款全屏的跨平台终端模拟器和系统监视器，看起来感觉像科幻电脑界面。
(https://github.com/GNOME) GnomeTerminal - Linux 世界广泛预装的终端模拟器。
(https://github.com/Guake/guake) Guake - Guake 是 Gnome 下的一款顶部下拉式的终端。
(https://github.com/zeit/hyper) Hyper - 基于 web 技术打造的终端。
(https://github.com/KeyLo99/k3rmit) K3rmit - 一款基于 VTE 的终端模拟器，目标是简单，快速和高效。
(https://github.com/kovidgoyal/kitty) Kitty - 跨平台、快速、全功能，基于 OpenGL 的终端模拟器。
(https://github.com/KDE/konsole) Konsole - KDE 桌面环境的一个终端选择。
(https://sourceforge.net/projects/rxvt/) RXVT - 一款 X11 终端模拟器，流行的‘xterm’替代品。
(http://dist.schmorp.de/rxvt-unicode/) RXVT-Unicode - rxvt-unicode 是著名的终端模拟器的一个分支。
(https://bazaar.launchpad.net/~dabisu/sakura/sakura/files) Sakura - 简单但是强大，基于 libvte 的终端模拟器，支持 utf-8 并且通过 gtk+ 和 pango 库提供输入法。
(https://bazaar.launchpad.net/~gnome-terminator/terminator/gtk3/files) Terminator - 功能丰富的终端模拟器，支持标签和网格。
(https://github.com/billiob/terminology) Terminology - 来自 Enlightenment 桌面，好看又轻量的终端，高度可配置，在 Linux 可以在 X11，Wayland 合成器，设置直接在 framebuffer 下工作。把你无聊的文本模式 VT 替换成不需要显示系统的图形化版本吧。
(https://github.com/Eugeny/terminus) Terminus - 现代，高度可配置的终端应用，基于 web 技术。
(https://github.com/nonstop/termit) Termit - 基于 vte 库的简单终端模拟器，可通过 Lua 扩展。
(https://github.com/thestinger/termite) Termite - 以键盘为中心，基于 VTE 的终端，旨在在一个支持平铺和 / 或标签的窗口管理器中使用。
Termius - 跨平台终端，内建 SSH 和 Telnet。
(https://github.com/lanoxx/tilda) Tilda - Linux 和 Unix 上基于 Gtk 的下拉终端。
(https://github.com/gnunn1/tilix) Tilix - 使用 GTK+3 的平铺 Linux 终端模拟器。
(https://github.com/tmux/tmux) Tmux - 它让你在一个终端中，轻松地在若干程序间切换，可以将程序脱离（程序在后台运行）和在另一个终端中重新连接它们。还有更多。
(https://github.com/cosmos72/twin) Twin - 快速，轻量的文本模式窗口环境，支持鼠标。在一个 Linux 控制台，终端或 X11 窗口中启用多个终端。它可以将程序脱离（程序在后台运行）和在另一个控制台，终端或 X11 服务器中重新连接它们。可用在 Linux，Mac OS X 和 BSD 上。
(https://github.com/railsware/upterm) Upterm - Upterm（原 Black Screen）是终端世界中的一款 IDE。严格来说，它是同时是一款终端模拟器以及基于 Electron 的交互式 shell。
(https://github.com/saulpw/visidata) Visidata - 一款用来发现和整理数据的终端电子表格多功能工具。
(http://invisible-island.net/xterm/) Xterm - Xterm 是一个 X 窗口系统的终端模拟器。它给不直接使用窗口系统的程序提供了 DEC VT102 和 Tektronix 4014 兼容终端。
(https://github.com/KDE/yakuake) Yakuake - 一款基于 KDE Konsole 技术的 Quake 风格的终端模拟器。

实用工具磁盘工具
(https://github.com/GNOME/brasero) Brasero - 强大的 CD/DVD 烧录软件。
(http://clonezilla.org/related-links/) Clonezilla - Clonezilla 是一款分区以及磁盘镜像 / 克隆程序，类似 True Image® 或 Norton Ghost®。
![Open-Source Software][ISS Icon] Duc - Duc，索引和可视化磁盘用量的库和工具套件。
(https://github.com/balena-io/etcher) Etcher - 安全简单地向 SD 卡或 U 盘写入系统镜像。
(https://github.com/mbusb/multibootusb) MultiBootUSB - MultiBootUSB 允许你在 U 盘上安卓多个 Linux live 系统。
(https://github.com/GNOME/gparted) GParted - Ubuntu/Linux 磁盘分区工具。
(https://github.com/unetbootin/unetbootin) Unetbootin - UNetbootin 允许你创建 Ubuntu 及其他 Linux 发行版的可启动的 Live USB 存储盘。你可以让 UNetbootin 下载自带支持的许多发行版之一，或者使用你自己的 Linux .iso 文件。

系统维护
(https://code.launchpad.net/~teejee2008/apt-toolkit/trunk) Aptik - 一款轻松管理你收藏的 PPA 和软件包的工具。
(https://github.com/bleachbit/bleachbit) Bleach bit - BleachBit 快速释放磁盘空间并不知疲倦地守卫你的隐私。释放缓存，删除 cookie，清除互联网浏览历史，清理临时文件，删除日志，以及更多功能。
(https://github.com/sahib/rmlint) rmlint - rmlint 寻找你文件系统中浪费的空间以及其他损坏的东西，并提供删除的选项。
(https://github.com/oguzhaninan/Stacer) Stacer - 著名的 Ubuntu 系统优化器。
(http://download.savannah.nongnu.org/releases/synaptic/) Synaptic - Synaptic 是一款图形化的 apt 包管理程序。
(https://github.com/gerardpuig/ubuntu-cleaner) UbuntuCleaner - 使用 Ubuntu Cleaner 轻松清理你的 ubuntu 系统。

系统监控
(https://bazaar.launchpad.net/~cpug-devs/cpug/main/files) CPU-G - 轻松监控你的 Ubuntu 笔记本的电池寿命。
GD map - 可视化磁盘使用量的工具。
(https://bazaar.launchpad.net/~artfwo/indicator-cpufreq/trunk/files) indicator-cpufreq - 它提供了和 Gnome CPU frequency 相同的功能，但不需要 Gnome 面板，可在 Unity 下工作。
(https://launchpad.net/ubuntu/+source/indicator-multiload) indicator-multiload - 图形化系统 CPU，内存等负载指示器。
(https://github.com/fossfreedom/indicator-sysmonitor) Indicator-SysMonitor - 一款可显示 cpu 温度，内存，网速，cpu 使用率，公网 IP 地址以及联网状态的应用指示器。
(https://g.blicky.net/ncdu.git/) Ncdu - 带有 ncurses 界面的磁盘使用分析工具。
(https://github.com/netdata/netdata) NetData - 基于 web 的下一代实时性能与健康监视器，用于物理和虚拟服务器，容器以及 IoT 设备。他还分发了带有 APM （应用性能监视）自动可视化的 statsd 服务器。
(http://git.wpitchoune.net/psensor.git/) Psensor - Linux 图形化硬件温度监视器。
(https://bazaar.launchpad.net/~indicator-multiload/indicator-multiload/trunk/files) Systemload - 在状态栏显示系统负载。

其它
(https://sourceforge.net/projects/alien-pkg-convert/files/) Alien Package Converter - 包转换工具。在 RPM、DPKG、SLP 以及 TGZ 包格式之间转换。
(https://github.com/angryip/ipscan) Angry IP Scanner - 快速友好的网络扫描工具。
(https://github.com/AntiMicro/antimicro) antimicro - 通过直观的图形界面将控制器按键和 joystick 运动绑定到键鼠。可以将配置保存到文件。
(https://github.com/chrisallenlane/cheat) Cheat - Cheat 让你在命令行创建和查看可交互的 cheatsheet。
(https://convertall.bellz.org/download.html) Convertall - 全能单位换算。
(https://github.com/chamfay/Curlew) Curlew - GNOME 桌面的 GTK 媒体转换工具。
(https://git.suckless.org/dmenu/) dmenu - dmenu 是一个 X 的动态菜单，最初是为 dwm 设计的。它可以高效管理大量用户定义的菜单项。
(https://github.com/thjaeger/easystroke) EasyStroke - Easystroke 是一个 X11 手势识别应用。
(https://github.com/OzymandiasTheGreat/emoji-keyboard) Emoji Keyboard - Linux 下的可视化类键盘的 emoji 选择器。
(https://github.com/FreeRDP/FreeRDP) FreeRDP - FreeRDP 是一个远程桌面协议（RDP）的自由实现。
(https://github.com/Simmesimme/Gnome-Pie) GnomePie - Linux 桌面的一个圆形启动器。
(https://github.com/gramps-project/gramps) Gramps - 使用 Gramps 研究，组织和分享你的家谱。
(https://github.com/KDE/kdeconnect-kde) KDE-Connect - 一款可以将 Android 智能手机集成到 Linux 桌面的工具，可以从手机和桌面发送文件，使用手机作为触控板、控制桌面媒体播放器等。
(https://github.com/jordansissel/keynav) Keynav - Keynav 是一个进展中的试验，让指针驱动的界面对用户操作而言更加易用和快速。它让你只需用一些快捷键组合就可以更快速地将指针移动到屏幕上的大多数位置上。
(https://github.com/cheesecakeufo/komorebi) Komorebi - Komorebi 是一款支持所有 Linux 平台的背景管理器，提供了完全可定制化的背景，可以随时进行调整。
(https://github.com/mobile-shell/mosh) Mosh - Mosh 是一款远程终端应用，允许漫游，支持断续的连接，以及提供智能本地回显以及用户组合键行编辑。
(https://github.com/jiahaog/nativefier) Nativefier - 让任何 web 页面变成桌面应用。
(https://sourceforge.net/projects/peaextractor/files/) PeaExtractor 设计上尽可能地无障碍和易用的文件解压工具。
(https://sourceforge.net/projects/peazip/files/) Peazip - 可以解压很多类型文件的工具。
(https://github.com/pi-hole/pi-hole) Pi-Hole - 通过你的 Linux 硬件实施网络级广告过滤，使用 DNS 过滤和重定向技术，Pi-Hole 可以过滤整个网络上的广告，所以除了电脑以外，智能手机和游戏主机也能从中受益。
PlexyDesk - Plexydesk 支持 Linux 下的多部件工作空间 / 桌面。
(https://github.com/fenrus75/powertop) Powertop - 能源消耗诊断工具。
(https://github.com/pulseaudio/pulseaudio) Pulse Audio - 用个性化配置改善 Linux 音频。
(https://github.com/FreeRDP/Remmina) Remmina - 一款功能丰富的远程桌面应用，支持 Linux 以及其它 Unix。
(https://github.com/Genymobile/scrcpy) scrcpy - 显示和控制你的 Android 设备。
(https://github.com/GNOME/sushi) Sushi - Sushi 是 GNOME 桌面文件管理器鹦鹉螺（Nautilus）的快速预览工具。
(https://www.tightvnc.com/download.php) TightVNC - 免费，轻量，快速且可靠的远程控制 / 远程桌面软件。
TLP - 优化 Linux 下的电池表现。
(https://github.com/oniony/TMSU) TMSU - TMSU 让你标记你的文件并从任意其它应用通过一个漂亮的可视化文件系统访问它们。
(https://github.com/Kilian/Trimage) Trimage - 无损优化 PNG 和 JPG 文件的跨平台工具。
(https://github.com/adgellida/ubunsys) Ubunsys - 设计来在不用命令行的前提下让你深度修改系统功能的应用。
(https://github.com/Ulauncher/Ulauncher/) ULauncher - 一款 Linux 应用启动器。
USB network gate - 允许你在 Linux 上通过网络分享 USB 口。
(https://github.com/peterlevi/variety-slideshow) Variety - Variety 是一款 Linux 下的开源壁纸更改工具，包含强大功能，同时小巧又易用。
(https://github.com/rcaelers/workrave) Workrave - 一款帮助恢复以及防止重复性劳损的程序（RSI）。
(https://github.com/KaOS-Community-Packages/xdm) Xtreme Download Manager - 一款有着新鲜用户界面的下载管理器。

视频
(https://github.com/xylosper/bomi) Bomi Player - 一款强大易用的多媒体播放器。
(https://github.com/GNOME/cheese) Cheese - Cheese 用你的摄像头拍照和录像，还能加上神奇的特效，让你能够和别人分享快乐。
(https://github.com/FFmpeg/FFmpeg) FFmpeg - FFmpeg 是一系列库和工具，可以处理像音频、视频、字幕和相关元数据等多媒体内容。
(https://github.com/xbmc/xbmc) Kodi - 一款获得殊荣的免费开源（GPL）软件，支持视频，音乐，图片，游戏以及更多内容的媒体中心。
(https://github.com/pculture/miro) Miro - 免费，开放的视频，音乐以及互联网电视应用；它从成千上万的资源中带来视频频道，并且还有比其它平台更丰富的免费高清资源。
(https://github.com/lettier/movie-monad) Movie Monad - 免费简单的视频播放器，用 Haskell 编写。
(http://www.mplayerhq.hu/design7/dload.html) MPlayer - MPlayer 是一款支持多种系统和各种视频的视频播放器。
(https://github.com/mpv-player/mpv) MPV - 一款免费，开源，跨平台的媒体播放器。
(https://sourceforge.net/p/smplayer/code/HEAD/tree/) SMPlayer - 内置解码器的免费媒体播放器。可播放所有的音频和视频格式。
SVP - SVP 让你可以使用帧插值在你的桌面电脑上观看任何视频，就像高端电视和投影仪支持的那样。
(https://www.videolan.org/vlc/download-sources.html) VLC - VLC 是一个免费且开源的跨平台媒体播放器以及框架，可以播放大多数格式的多媒体文件以及 DVS，音频 CD，VCD，以及各种流媒体协议。

Wiki 软件
(https://github.com/splitbrain/dokuwiki) DokuWiki - 一款流行的自托管 wiki 软件，有大量插件。
(https://git.joeyh.name/git/ikiwiki.git/) ikiwiki - ikiwiki 是一款 wiki 编译器。它将 wiki 页面转换为适合发布为网站的 HTML 页面。Ikiwiki 将页面和历史存储在类似 Subversion 或 Git 这样的版本管理系统中。
(https://github.com/Jermolene/TiddlyDesktop) TiddlyDesktop - TiddlyWiki 的一个桌面应用，一款开源的个人 wiki，用 javascript 编写，如果你还在寻找好的笔记（以及更多功能）的应用的话，它很棒。
(https://git.launchpad.net/zim) Zim - 一款用于维护一系列 wiki 页面的图形化文本编辑器，用于笔记和文档很棒。以纯文本形式存储，便于版本管理。

其它
(https://displaycal.net/#download) DisplayCAL - ArgyllCMS 提供的开源显示校正和特性化工具。
(https://github.com/fontforge/fontforge) FontForge - 自由的字体编辑器，适用于 Windows，Mac OS X 和 GNU+Linux。
(https://git.launchpad.net/grub-customizer) GrubCustomizer - Grub Customizer 是一个让你可以配置 GRUB2/BURG 设置和启动项的图形化界面。
(https://github.com/MycroftAI/mycroft-core) Mycroft - Mycroft 是一款可 hack 的开源语音助手。
(https://github.com/polychromatic/polychromatic) Polychromatic - 在 GNU/Linux 下配置雷蛇外设的图形化前端和托盘插件。
(https://github.com/z411/trackma) trackma - 类 Unix 系统开放多站点列表管理工具。

命令行工具
(https://github.com/jarun/Buku) Buku - 命令行书签管理器。
(https://github.com/AlDanial/cloc) Cloc - 计算代码行数：cloc 可以计算多种语言源代码的空行、注释行和总行数。
(https://github.com/athityakumar/colorls) Color LS - Color Ls 是一个 Ruby Gem，不需要额外命令，给 ls 命令增彩，更加可视化。
(https://github.com/chronitis/curseradio) curseradio - 命令行电台播放器。
(https://github.com/ssimunic/Daily-Reddit-Wallpaper) Daily Reddit Wallpaper - 开机时将壁纸更换为 /r/wallpapers 或其它子版块的今日最高票壁纸。
(https://github.com/jarun/ddgr) ddgr - 从命令行进行 DuckDuckGo 搜索。
(https://github.com/ogham/exa) exa - exa 是 ls 的一个现代化替代品。
(https://github.com/LubuntuFu/fishfry) Fishfry - 将 fish 的历史记录替换成为渗透测试人员量身定制的高效版本以及方便新手学习。
(https://github.com/junegunn/fzf) fzf - 通用命令行模糊搜索工具，带有交互式过滤器，支持例如文件预览、命令历史、git 提交、主机名等功能。
(https://github.com/mikf/gallery-dl) gallery-dl - 可以从 pixiv、exhentai、danbooru 和其他地方下载图集的命令行工具。
(https://github.com/heppu/gkill) Gkill - 交互式 Linux 进程结束工具。
(https://github.com/nicolargo/glances) Glances - Glances 是一款终端系统监视应用，使用 Ncurses 编程库，以非常友好的方式展示你的磁盘使用率，内存使用率以及 CPU 使用率。它兼容窗口大小改变，内存需求低。
(https://github.com/jarun/googler) Googler - 从命令行 Google 一切。
(https://github.com/aksakalli/gtop) gtop - 终端上的系统监控面板。想想 “图形化 top”，带有条形图，线型图，饼图等。
(https://github.com/hishamhm/htop) htop - 带有改进的特性和用户体验的 Unix 交互式进程查看器。
(https://github.com/oguzhaninan/korkut) korkut - 快速简单的命令行图片处理工具。
(https://github.com/nojhan/liquidprompt) Liquidprompt - 全功能，精心设计的 Bash &amp; Zsh 自适应提示符。
(https://github.com/mps-youtube/mps-youtube) mps-youtube - 基于终端的程序，用于搜索，流媒体以及下载音乐。这个实现使用 Youtue 作为内容源，能够播放和下载视频和音频。
(https://gitlab.com/muttmua/mutt) Mutt - 终端邮件客户端，vim 快捷键，强大灵活可定制。
(https://github.com/dylanaraps/neofetch) Neofetch - 快速，高度定制化的系统信息获取脚本，支持 Linux，MacOS，iOS，BSD，Solaris，Android，Haiku，GNU Hurd，MINIX，AIX 以及 Windows。
(https://github.com/newsboat/newsboat) Newsboat - Newsboat 是 Newsbeuter 的一个分支，是一款文本控制台 RSS/Atom 订阅阅读器。
(https://github.com/facebook/PathPicker) PathPicker - 命令允许你在命令行中选择前一个命令的输出文件，然后你就可以运行另一个命令或编辑它们。
(https://github.com/dylanaraps/pywal) pywal - pywal 是一个脚本，给它输入一个图片（或图片文件夹），生成一套配色方案（使用 imagemagick），然后即时将你打开的所有终端的配色方案修改，让你的终端颜色可以随着你的壁纸或其他标准变化。
(https://github.com/orakaro/rainbowstream) Rainbow Stream - 聪明漂亮的终端 Python Twitter 客户端。
(https://github.com/michael-lazar/rtv) RTV - 从终端浏览 Reddit。
(https://github.com/amanusk/s-tui) s-tui - s-tui 是一个用于监控你的电脑的用户界面，从终端以图形化的方式显示 CPU 温度，频率以及使用率。
(https://github.com/ggreer/the_silver_searcher) The Silver Searcher / Ag - 类似 ack 的代码搜索工具，但是更快。
(https://github.com/nvbn/thefuck) TheFuck - 杰出的应用，它能纠正你的输入的错误命令。
(https://github.com/tmux/tmux) Tmux - 它让你在一个终端中在多个程序间方便地切换，分离他们（保持在后台运行）并另一个终端中重新连接上去。以及还有好多事情可以做。
十佳命令行工具
(https://github.com/soimort/translate-shell) translate-shell - 命令行翻译，可以使用 Google、Bing、Yandex 等翻译。
(https://github.com/jml/undistract-me) undistract-me - 一款可以在长时间运行的命令结束后播放声音或发出通知的命令行程序。
wicd-curses - 命令行 WiFi 连接管理器。
(https://github.com/rg3/youtube-dl) youtube-dl - youtube-dl 是一款命令行工具，可以从 YouTube.com 以及一些其他站点下载内容。需要 Python 解释器（2.6，2.7，或 3.2+），不局限于特定平台。

桌面环境
(https://github.com/solus-project/budgie-desktop) Budgie - Budgie 是一个面向现代用户思想设计的桌面环境，专注于简洁与优雅。
(https://github.com/linuxmint/Cinnamon) Cinnamon - Cinnamon 努力提供一种传统的用户体验。Cinnamon 是一个 GNOME 3 的 fork。
(https://github.com/linuxdeepin/dde-file-manager/tree/develop2.0) Deepin DE - DDE（Deepin Desktop Environment）是最初为 Liuux Deepin 发行版创建的默认桌面环境。
(https://git.enlightenment.org/core/efl.git) Enlightenment - 轻量美观的桌面环境，设计目标是高效美观，同时保留有很大的个性化自由度。
(https://github.com/GNOME/gnome-desktop) Gnome - GNOME 桌面环境是一个有吸引力且直观的的桌面，同时有现代（GNOME）和经典（GNOME Classic）会话模式。
(https://github.com/GNOME/gnome-flashback) GNOME Flashback - GNOME Flashback 是 GNOME 3 的一个 shell，最初叫 GNOME fallback 模式。桌面的布局和底层技术都与 GNOME 2 相似。
(https://github.com/KDE/plasma-desktop) KDE Plasma - KDE Plasma 桌面环境是一个熟悉的工作环境。Plasma Desktop 提供现代桌面环境体验所需的所有工具，所以你可以从开始就充满生产力。
(https://github.com/lxde) LXDE - Lightweight X11 Desktop Environment （轻量化 X11 桌面环境）是一个快速且节能的桌面环境。
(https://github.com/lxqt/lxqt) LXQt - LXQt 是 LXDE 的 Qt 移植和即将到来的版本，轻量化的桌面环境。
(https://github.com/BlankOn/manokwari) Manokwari - 带有 Gtk+ 和 HTML5 前端的 GNOME 3 桌面 shell。
(https://github.com/mate-desktop/) Mate - Mate 用传统隐喻给 Linux 用户提供一个直观又有吸引力的桌面。MATE 是 GNOME 2 的一个 fork。
(https://elementary.io/) Pantheon - Pantheon 是最初为发行版 elementary OS 创建的桌面环境，同时也是它的默认桌面环境。
(https://github.com/ubports/unity8) Unity - Unity 是 GNOME 的一个 shell，由 Canonical 为 Ubuntu 设计。 在 Ubuntu 16.04 上安装 Unity 8 的 教程。
(https://github.com/xfce-mirror) Xfce - Xfce 体现了模块化和可重用的传统 UNIX 哲学。

显示管理控制台
(https://github.com/evertiro/cdm) CDM - 超简化，又功能丰富，用 bash 写就的登陆管理器。
(https://github.com/dopsi/console-tdm) Console TDM - 纯 bash 写就的 xinit 扩展。
(https://github.com/cylgom/ly) Ly - Ly 是一款 Linux 下轻量的 TUI（类 ncurses）显示管理器。
(https://github.com/spanezz/nodm) nodm - 简约的自动登陆显示管理器。

图形界面
(https://github.com/tomas/entrance) Entrance - 基于 EFL 的显示管理器，高度实验性质。
(https://github.com/GNOME/gdm) GDM - GNOME 显示管理器。
(https://github.com/davvid/lightdm) LightDM - 跨桌面显示管理器，可以使用任何工具集写就的各种前端。
(https://sourceforge.net/p/lxdm/code/ci/master/tree/) LXDM - LXDE 显示管理器，可以独立于 LXDE 桌面环境使用。
(https://github.com/linuxmint/mdm) MDM - MDM 显示管理器，在 Linux Mint 中使用， GDM 2 的一个 fork。
(https://github.com/sddm/sddm) SDDM - 基于 QML 的显示管理器，KDE 4 的 kdm 的继任者；Plasma 5 以及 LXQt 推荐。
(https://github.com/gsingh93/slim-display-manager) SLiM - 轻量且优雅的图形化登录解决方案（不再继续开发）。
(https://github.com/bbidulock/xdm) XDM - 带有 XDMCP，主机选择支持的 X 显示管理器。

窗口管理合成器
(https://github.com/yshui/compton) Compton - Compton 是一款独立的合成管理器，适合同没有原生提供合成功能的窗口管理器一同使用。
(https://github.com/swaywm/sway) Sway - Sway 是平铺 Wayland 合成器和 X11 下 i3 窗口管理器的新替代。
(https://cgit.freedesktop.org/xorg/app/xcompmgr) Xcompmgr - Xcompmgr 是一个简单的合成管理器，能够渲染下拉阴影，使用 transset 工具的话，还可以实现简单的窗口透明。

叠加式窗口管理器
(https://github.com/venam/2bwm) 2bwm - 快速的浮动窗口管理，有两个特殊边界，基于 XCB 库，由 mcwm 衍生。
(https://github.com/bbidulock/blackboxwm) Blackbox - 快速，轻量化的 X 窗口系统窗口管理器，没有那些烦人的库依赖。
(https://github.com/fluxbox/fluxbox) Fluxbox - 基于 Blackbox 0.61.1 代码的 X 窗口管理器。
(https://github.com/danakj/openbox) Openbox - 高度可配置，带有可扩展标准支持的下一代窗口管理器。

平铺式窗口管理器
(https://github.com/baskerville/bspwm) Bspwm - bspwm 是一个平铺式窗口管理器，将窗口以二叉树的叶结点的方式展现。
(https://github.com/herbstluftwm/herbstluftwm) Herbstluftwm - 使用 Xlib 和 Glib 的手工平铺式窗口管理器。
(https://github.com/i3/i3) i3 WM - 更好的平铺及动态窗口管理器。完全重写。目标平台是 GNU/Linux 和 BSD 操作系统。
(https://github.com/qtile/qtile) Qtile - qtile 是一款全功能，可 hack 的平铺窗口管理器，使用 Python 编写和配置。

动态窗口管理器
(https://github.com/awesomeWM/awesome) awesome - 高度可配置，下一代 X 框架窗口管理器。
(https://github.com/cdown/dwm) dwm - X 动态窗口管理器。它以平铺，单片镜以及浮动布局的方式管理窗口。
(https://github.com/conformal/spectrwm) spectrwm - 小型动态平铺 X11 窗口管理器。主要受 xmonad 和 dwm 启发。
(https://github.com/xmonad/xmonad) xmonad - 动态平铺 X11 窗口管理器，用 Haskell 编写和配置。

设置
什么是 Linux
Linux 基础术语
选择最适合你的发行版
安装 Ubuntu 后 38 件要做的事
命令和命令行是什么意思？ (https://github.com/idank/explainshell)

Arch Linux
新手指南
安装指南
通用推荐
应用列表

Bodhi
什么是 Bodhi
哪里去下载 Bodhi
我要怎么安装 Bodhi

CentOS
官方网站
关于
下载
指南
提示和技巧
常见问题

Fedora
什么是 Fedora？
哪里去下载 Fedora
我该怎么安装 Fedora？
Ask Fedora

openSUSE
什么是 openSUSE
尝试 openSUSE 的理由
新手常见问题解答
如何安装 openSUSE
评测

Ubuntu
什么是 Ubuntu)
如何安装 Ubuntu
安装 ubuntu 后要做什么

其它发行版
待添加

论坛Arch Linux 论坛
Arch Linux 论坛
Arch Linux ARM 论坛

Bodhi Linux 论坛
Bodhi Linux 论坛

CentOS 论坛
CentOS 论坛

Fedora 论坛
Fedora 论坛

Ubuntu 论坛
Ubuntu 论坛
Ask Ubuntu

openSUSE 论坛
openSUSE 论坛

IRC 频道
#linux
#ubuntu
#archlinux
#debian
#gentoo
#docker
#bash

Linux 新闻，应用，以及更多：
OMG!Ubuntu
ITSFOSS
Linux 官方
Webupd8
Noobslab
Make use of
TecMint
AllTop
Unixmen
DistroWatch
Phoronix
Dedoimedo
How-To Geek
Liliputing
FAMILUG
Ubuntu Geek

Reddit
Arch Linux
CentOS
Fedora
Linux
Open Source
Ubuntu
Unix Porn
Linux Kernel
Linux Gaming

学习 Linux
Beginner’s guide to Linux
学习 Linux 命令
GNU/Linux 命令行工具总结
学习 Linux
Linux 课程
Linux 口袋指南
Programming Community Curated Resources for learning Linux

Linux Hacking / 开发
内核新手
Linux Insides
Linux 内核
Linux 内核归档（官方站点）
Linux Kernel Internals (PDF)
Linux 内核邮件列表归档
Linux 内核模块编程指南（PDF）

Linux 进阶
虚拟化容器
Virtualbox 虚拟化

其它超赞的列表这些是原作者高度推荐的列表：

Awesome Linux Audio
Awesome Self-hosted
Awesome Sysadmin

贡献者贡献者列表 :

LuongVo

anewuser

nathanmusoke

bpearson

orestisf1993

lasseborly

sebasspf

buivnhai

ankurk91

mAzurkovic

bocklund

grebenschikov

fareez-ahamed

MichaelAquilina

Wamadahama

Alasin

LYF610400210

willmtemple 纠正库名称

jakub-olczyk

shakib609

talisk

smdrz

bishoyh

Voicu

ryandaniels

mame98

Kastmeski

johnjago

shuliandre

stelariusinfinitek

tnga

hg8

ChrisLeeGit

alim0x

Spacebody

AyoIsaiah

在 @ reddit.com/r/linux &amp; reddit.com/r/ubuntu &amp; vozforums.com 上每个提出建议和赞赏的人 …
(以上列表更新于 10th January 2017)


⬆ 返回顶部
贡献指南
将应用的名称放入列表。 链接到它的主页或安装指南。 再给应用写一小段简短的介绍 + 添加图标。 确保应用放在了合适的主题下。 如果应用不在以上任何一个已有的主题内，为它新建一个主题。 确保所有项都是按字母表顺序排序的。

标有  的是开源软件并且链接到源代码。标有  的意为使用可能收费（就如不免费的啤酒）。
原作者注：最近我收到了一些关于列表中一些应用软件的质量的反馈。我自己测试了其中的大部分应用（但不是全部）。如果你对应用有任何问题：-&gt; 去往开发页面（如果有的话）-&gt; 给开发提个 issue -&gt; 在这里提个 issue 以便我考虑是否将应用移出列表。记住：所有东西都有它自己的质量，所以这里永远不会有 “最佳应用” 或“选择性的列表”，谢谢。
许可证
该作品签署于 Creative Commons Attribution 4.0 International License。
results matching “”No results matching “”]]></content>
      <categories>
        <category>教程学习</category>
      </categories>
  </entry>
  <entry>
    <title>效率工作：高效开会</title>
    <url>/posts/8.html</url>
    <content><![CDATA[开会之痛  

对于很多人而言，已经见过了太多糟糕无聊的会议了。每个人可能在想同样的事情：参加这个会议有什么意义呢？我为什么会坐在这里？  
在前往会议室的路上，你还不知道会议的具体内容。在会议讨论中，谈话和交流被各种细节所干扰，甚至完全偏离了会议主题。  
在会议期间，很多人在对着电脑或者手机假装在进行记录。会议早就应该在半个小时前结束，但是现在还在拖延。  
据调查，只有 50% 甚至更少的会议时间被有效利用。你不要尝试回答。我已经看到了你在点头。更糟糕的是，会议不仅占用我们的工作时间，也会降低我们的工作效率。  
有一些人在长期的文山会海之后，会出现会议恢复综合症：参会者为了从糟糕的会议中恢复自己应有的精神状况，需要花费时间和精力让自己冷静下来以便重新集中注意力。  
然而，这些参会者从糟糕的会议中为了精神恢复，又失去了宝贵的工作时间。  
那什么拯救这些糟糕无聊的会议？举办一场高效的会议应该是职场人士的必备技能。下面分享一些高效会议的具体指南。  
设定议程  

设定会议议程，这似乎是召开会议的必要条件。然而，在现实的工作环境中，糟糕会议的明显特征便是没有明确的议程安排。  
在正式召开会议之前，最好以协作办公工具告诉参会者会议主题、子议题、时间进程安排等内容。  
清晰的议程有助于高效完成会议讨论并形成决议，而模糊的会议议程则成了浪费生命的代名词。  
如果没有清晰的会议安排，那么会议组织者则需要思考：这个会议是否有必要召开？  
严格遵循时间安排  

高效会议的另外一个标志是拥有严格的时间进度安排。简而言之，准时开始，准时结束。  
常见反面例子有两种。一种是会议领导和会议主持人已经到了，但是其他参会人员却往往迟到。  
这种现象常见于一些比较松散的组织所召开的会议。面对这种情况，会议主持人最好对参与人员进行必要的提醒，并且规划一些备用方案或者小技巧，督促参与者按时到达。  
而另外一种情况则更为常见，那便是会议领导人或者负责人的姗姗来迟。  
没有什么比等待这些会议领导或者负责人的出现更加空耗生命了。一屋子的人像是沙丁鱼一样挤在会议室中，面面相觑等候着不知何时出现的领导人。  
为什么很多身居高位的当权者养成了开会迟到的坏习惯？他们总是一直这么忙吗？  
抑或说，他们是将在会议中迟到作为一种特权，提醒其他人自己的时间更为宝贵，只有自己有权力迟到，会使得他们心中燃起一股莫名的兴奋？  
当然，在现实工作场景中，很少有人会对领导人的迟到直接表达自己的不满和非议。那只能寄希望于参加会议的诸位，如果以后有机会成为领导，参加会议能以身作则，严格遵循时间安排。  
此外，需要注意的是，会议时间尽量不要超过一个小时。超过 60 分钟后，参会人员的注意力可能难以再进行集中。  
进行有效的沟通和讨论  

对于很多会议而言，开会相当于领导讲话、发号施令，缺少必要的沟通。领导者推动会议进程固然没有问题，但是领导不应该成为会议的唯一主角。  
开会是为了解决问题，优化已有项目并开拓新的项目，而不应该成为领导者权力表演的舞台。  
因此，高效的会议，必然应该是不同参会人员之间观点、立场、想法、建议的交汇、碰撞和融合。  
会议负责人应该主动引导其他参会成员分享自己的真知灼见，并且带领大家进行讨论，并尝试解决障碍和困难。  
此外，普通的与会者也应该注意沟通交流方式，提出让负责人、其他参会者愿意去探讨和交流的问题，而不是针锋相对地交火。  
选择合适的会议工具  

合适的会议工具会大大提升会议效率。如果没有适当的工具促进和推动会议，那就不应该安排会议。  
会议之前，考虑一下：除了空的会议室以外，会议室内是否需要白板？召开远程会议，是否选好了虚拟会议工具？在会议中，如何进行群体头脑风暴？如何记录会议笔记？比如，在线白板工具我选择Miro小画桌在线会议推荐选择飞书Zoom，而思维导图、会议笔记等工具，我推荐使用专业写作软件Effie. 这款极简主义软件可以同时满足构思、笔记和写作等需求。  
在熟悉这些会议工具后，可以根据软件功能，建立适合会议的工作流。积极征求反馈  

很多会议组织者都忘记了征求反馈这一步。经常出现的现象是，会议临近结束，象征性地提问一句，大家还有没有别的想说，没有的话，那今天的会议到此结束。  
如果真的想征求意见，那么会议组织者就应该拿出真诚、平等的心态认真征询意见。让参会人员从内心体会到会议组织者是真的在寻求建议，而不是敷衍了事。  
在会议临近结束时，如果还有一些时间，会议组织者可以向参会者征询以下问题：这场会议议程实现了吗？会议讨论质量怎么样，每个人的意见是否都获得了倾向和关注？会议结果对于他们而言有用吗？未来有哪些地方可以改进？  
会议组织者应该尽量确保为参会者营造一种可以自由发言和表达意见的会议氛围。  
如此，才能通过迭代优化，逐步发现开会过程中存在的问题，并提升开会效率。  
以行动计划结束会议  

会议的目的是为了解决问题，推动团队成员的下一步想动。对于高效的会议而言，参会者在离开会场时，应该知道会议结果是什么，接下来他的个人行动项目安排是什么。  
换而言之，会议结果应该是一个具体可行的行动计划。关于某个项目，具体分为几个实施阶段？谁应该负责？什么时候是截止日期？  
这些问题都要一一落实。否则，耗费大量精力和时间的会议将会变得毫无意义。  
注释  

]]></content>
      <categories>
        <category>经典好文</category>
      </categories>
      <tags>
        <tag>经典好文</tag>
      </tags>
  </entry>
</search>
